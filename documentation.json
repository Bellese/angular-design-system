{
  "pipes": [
    {
      "name": "ChipFilterPipe",
      "id": "pipe-ChipFilterPipe-6faec3387b47720a08ee0e287d661278",
      "file": "src/app/modules/chip-filter/chip-filter.pipe.ts",
      "type": "pipe",
      "description": "",
      "properties": [],
      "methods": [
        {
          "name": "applyFilter",
          "args": [
            {
              "name": "item",
              "type": "ListItem"
            },
            {
              "name": "filter",
              "type": "ListItem"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 17,
          "jsdoctags": [
            {
              "name": "item",
              "type": "ListItem",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "filter",
              "type": "ListItem",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "transform",
          "args": [
            {
              "name": "items",
              "type": "ListItem[]"
            },
            {
              "name": "filter",
              "type": "ListItem"
            }
          ],
          "optional": false,
          "returnType": "ListItem[]",
          "typeParameters": [],
          "line": 10,
          "jsdoctags": [
            {
              "name": "items",
              "type": "ListItem[]",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "filter",
              "type": "ListItem",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "pure": false,
      "ngname": "chipSelectFilter",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ListItem } from './chip-filter.model';\n\n@Pipe({\n  name: 'chipSelectFilter',\n  pure: false\n})\nexport class ChipFilterPipe implements PipeTransform {\n  transform(items: ListItem[], filter: ListItem): ListItem[] {\n    if (!items || !filter) {\n      return items;\n    }\n    return items.filter((item: ListItem) => this.applyFilter(item, filter));\n  }\n\n  applyFilter(item: ListItem, filter: ListItem): boolean {\n    if (typeof item.text === 'string' && typeof filter.text === 'string') {\n      return !(\n        filter.text &&\n        item.text &&\n        item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1 &&\n          item.id\n            .toString()\n            .toLowerCase()\n            .indexOf(filter.text.toLowerCase())\n      );\n    } else {\n      return !(\n        filter.text &&\n        item.text &&\n        item.text\n          .toString()\n          .toLowerCase()\n          .indexOf(filter.text.toString().toLowerCase()) === -1 &&\n          item.text\n            .toString()\n            .toLowerCase()\n            .indexOf(filter.text.toString().toLowerCase())\n      );\n    }\n  }\n}\n"
    },
    {
      "name": "FilterPipe",
      "id": "pipe-FilterPipe-95587fc80917e6d712f42e89e9409ccf",
      "file": "src/app/pipes/filter.pipe.ts",
      "type": "pipe",
      "description": "",
      "properties": [
        {
          "name": "indexArray",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "items",
              "type": "any[]"
            },
            {
              "name": "searchText",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "any[]",
          "typeParameters": [],
          "line": 12,
          "jsdoctags": [
            {
              "name": "items",
              "type": "any[]",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "searchText",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "pure": true,
      "ngname": "filter",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filter',\n    pure: true\n})\n\nexport class FilterPipe implements PipeTransform {\n    indexArray = [];\n    // create the array to hold every row index that has a matching value in the column\n\n    transform(items: any[], searchText: string): any[] {\n\n        if (!items) { return []; }\n        if (!searchText) { return items; }\n\n        searchText = searchText.toLowerCase().trim();\n        // always convert to lowercase to and remove any leading or ending white spaces\n\n        this.indexArray = [\"\"];\n        // dump the indexarray so that each search is a fresh array\n        // even though it fills first position in the array w/ quotes, the filter wont read the first position, \n        // since it reads 0 as false and wont return anything even if it were true\n\n        items.map((x, ind) => {\n            Object.keys(x).map((key) => {\n                if (x[key].value.toString().toLowerCase().includes(searchText) && this.indexArray.indexOf(ind) == -1 ) {\n                    this.indexArray.push(ind);\n                }\n            });\n        });\n        // search through the items array passed, and find any values matching search text, save the index of that value in array\n\n        // add protype to return the count of rows available from search\n\n        // if(this.indexArray.length == 1) return items;\n        if (this.indexArray.length > 1) {\n            return (items).filter( (it, ind) => {\n                return (this.indexArray.indexOf(ind) > -1) ? this.indexArray.indexOf(ind) : false;\n            });\n        } else {\n           return [false];\n        }\n        // this filter is where the magic happens, it will remove rows that dont have an index matching an index in the indexarray\n    }\n}"
    },
    {
      "name": "GraphToolTipPipe",
      "id": "pipe-GraphToolTipPipe-a6a6a71279076b267206268f13f29a91",
      "file": "src/app/pipes/graph-tooltip.pipe.ts",
      "type": "pipe",
      "description": "",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "items",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 9,
          "jsdoctags": [
            {
              "name": "items",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "ngname": "graphToolTip",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'graphToolTip'\n})\n\nexport class GraphToolTipPipe implements PipeTransform {\n\n    transform(items: any): any {\n\n        if (items === '') {\n            return 'N/A';\n        } else {\n            return items;\n        }\n    }\n}"
    },
    {
      "name": "HighlightSearchPipe",
      "id": "pipe-HighlightSearchPipe-f67846e94dcd606a87b029377003345e",
      "file": "src/app/pipes/highlightSearch.pipe.ts",
      "type": "pipe",
      "description": "",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "items",
              "type": "any"
            },
            {
              "name": "searchText",
              "type": "any"
            },
            {
              "name": "highlight",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 13,
          "jsdoctags": [
            {
              "name": "items",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "searchText",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "highlight",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "ngname": "highlightSearch",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'highlightSearch'\n})\n\nexport class HighlightSearchPipe implements PipeTransform {\n\n    constructor(private _sanitizer: DomSanitizer) {\n    }\n\n    transform(items: any, searchText: any, highlight: boolean): any {\n\n        if (!items) { return ''; }\n        if (!searchText) { return items; }\n        if (!highlight) { return items; }\n\n        const thisSearch = searchText.toLowerCase().trim();\n\n        if (items.toLowerCase().includes(thisSearch)) {\n\n            const reg = new RegExp(thisSearch.includes('.') ? thisSearch.replace('.', '\\\\.') : thisSearch, '\\i');\n\n            const exp = '<mark>' + items.match(reg)[0] + '</mark>';\n            const newItem = items.replace(reg, exp);\n\n            return this._sanitizer.bypassSecurityTrustHtml(newItem);\n        } else {\n            return items;\n        }\n    }\n}\n"
    },
    {
      "name": "SortingPipe",
      "id": "pipe-SortingPipe-e58212fd59803a18bb33f548c114005e",
      "file": "src/app/pipes/sorting.pipe.ts",
      "type": "pipe",
      "description": "",
      "properties": [
        {
          "name": "asc",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "colHeader",
          "type": "",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "event",
          "type": "",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "items",
              "type": "any[]"
            },
            {
              "name": "event",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "any[]",
          "typeParameters": [],
          "line": 11,
          "jsdoctags": [
            {
              "name": "items",
              "type": "any[]",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "event",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "pure": true,
      "ngname": "sorting",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n    name: 'sorting',\n    pure: true\n})\nexport class SortingPipe implements PipeTransform {\n  event;\n  asc;\n  colHeader;\n\n  transform(items: any[], event: any): any[] {\n    if (!items) { return []; }\n\n    if (!event) {\n        return items;\n    } else {\n        this.colHeader = (event.name) ? event.id : event.e.target.id;\n    }\n\n    return items.sort((a, b) => {\n\n      if (this.colHeader) {\n        let valA;\n        let valB;\n        a[this.colHeader].el === 'date'\n          ? (valA = new Date(a[this.colHeader].value))\n          : (valA = a[this.colHeader].value);\n        b[this.colHeader].el === 'date'\n          ? (valB = new Date(b[this.colHeader].value))\n          : (valB = b[this.colHeader].value);\n\n          if (valA.toLowerCase() === 'n/a') {\n            valA = '-1';\n          }\n\n          if (valB.toLowerCase() === 'n/a') {\n            valB = '-1';\n          }\n\n          const re = /^\\d/;\n          const rep = /\\D/g;\n\n          if (valA.match(re)) {\n              valA = Number(valA.replace(rep, ''));\n          }\n\n          if (valB.match(re)) {\n              valB = Number(valB.replace(rep, ''));\n          }\n\n        return (valA < valB ? -1 : 1) * (event.asc ? 1 : -1);\n      }\n    });\n  }\n}\n"
    }
  ],
  "interfaces": [],
  "injectables": [
    {
      "name": "AppService",
      "id": "injectable-AppService-052b9192b460369974328c00e3ed0489",
      "file": "src/app/services/app.service.ts",
      "properties": [
        {
          "name": "configURL",
          "defaultValue": "'../assets/data/publicReportingData.json'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        }
      ],
      "methods": [
        {
          "name": "getData",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 10
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AppService {\n  configURL = '../assets/data/publicReportingData.json';\n\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http.get(this.configURL);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient"
          }
        ],
        "line": 6,
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "ModalService",
      "id": "injectable-ModalService-035497d86a765da991f7b859f7b37fd0",
      "file": "src/app/services/modal/modal.service.ts",
      "properties": [
        {
          "name": "_isSubmitted",
          "defaultValue": "this.submittedSource.asObservable()",
          "type": "Observable<boolean>",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [114]
        },
        {
          "name": "modalCount",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "scrollBarWidth",
          "defaultValue": "(window.innerWidth - document.documentElement.clientWidth)",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "submittedSource",
          "defaultValue": "new BehaviorSubject<boolean>(false)",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [112]
        }
      ],
      "methods": [
        {
          "name": "appendComponentToBody",
          "args": [
            {
              "name": "component",
              "type": "any"
            },
            {
              "name": "id",
              "type": "any"
            },
            {
              "name": "title",
              "type": "any"
            },
            {
              "name": "data",
              "type": "any"
            },
            {
              "name": "firstFocus",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 115,
          "jsdoctags": [
            {
              "name": "component",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "id",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "title",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "data",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "firstFocus",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isSubmitted",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 198,
          "description": "<p>Method is used expose _isSubmitted observable</p>\n"
        },
        {
          "name": "prepModalSettings",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43
        },
        {
          "name": "removeModalSettings",
          "args": [
            {
              "name": "id",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 74,
          "jsdoctags": [
            {
              "name": "id",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "resolveContentProj",
          "args": [
            {
              "name": "comp",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 175,
          "jsdoctags": [
            {
              "name": "comp",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "submitModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 202
        }
      ],
      "description": "",
      "sourceCode": "import {\n  Injectable,\n  Injector,\n  Inject,\n  ComponentFactoryResolver,\n  EmbeddedViewRef,\n  ApplicationRef,\n  EventEmitter,\n  Output,\n  TemplateRef,\n  Directive\n} from '@angular/core';\n\nimport {\n  DOCUMENT\n} from '@angular/common';\nimport {BehaviorSubject} from 'rxjs/internal/BehaviorSubject';\nimport {Observable} from 'rxjs/internal/Observable';\n\n@Directive()\n@Injectable()\n\nexport class ModalService {\n\n  private submittedSource = new BehaviorSubject<boolean>(false);\n  public _isSubmitted: Observable<boolean> = this.submittedSource.asObservable();\n\n  @Output() modalDestroyed = new EventEmitter<any>();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n    private resolver: ComponentFactoryResolver,\n    @Inject(DOCUMENT) private doc: any\n  ) {\n\n  }\n\n  modalCount = 0;\n  scrollBarWidth = (window.innerWidth - document.documentElement.clientWidth);\n\n  prepModalSettings() {\n    this.modalCount++;\n\n    // Must use clientheight and innerheight because mac hides scrollbar automatically so we cant base it off width\n    if (document.body.clientHeight > window.innerHeight && this.modalCount === 1) {\n\n      // Stop background from scrolling\n      document.getElementsByTagName('body')[0].style.overflowY = 'hidden';\n\n      // keep page from bouncing when removing overflow\n      const bodyRightMargin = document.getElementsByTagName('body')[0].style.marginRight;\n\n      // Either there will be a margin tied to body or default is 8px, sccrollbar grabbed by variable\n      const margin = bodyRightMargin ? parseInt(bodyRightMargin) + this.scrollBarWidth + 'px' : (this.scrollBarWidth + 8) + 'px';\n\n      document.getElementsByTagName('body')[0].style.marginRight = margin;\n    }\n\n    // add ariahidden to the modal before another is implemented\n    if (this.modalCount > 1) {\n      document.getElementById('modalImplementation' + (this.modalCount - 1)).classList.add('modal-aria-hidden');\n    }\n\n    // Keep background from reading 508\n    const hideModal = document.getElementsByClassName('modal-aria-hidden');\n\n    for (let x = 0; x < hideModal.length; x++) {\n      hideModal[x].setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  removeModalSettings(id) {\n    this.modalCount--;\n\n    // Must use clientheight and innerheight because mac hides scrollbar automatically so we cant base it off width\n    if (document.body.clientHeight > window.innerHeight && this.modalCount === 0) {\n\n      // Allow background to scroll again\n      document.getElementsByTagName('body')[0].style.overflowY = 'auto';\n\n      // keep page from bouncing when removing overflow\n      const bodyRightMargin = document.getElementsByTagName('body')[0].style.marginRight;\n\n      // Either there will be a margin tied to body or default is 8px, sccrollbar is 16px\n      const margin =\n        bodyRightMargin ? ((parseInt(bodyRightMargin) - this.scrollBarWidth) * 2) / 2 + 'px' : (this.scrollBarWidth + 8) + 'px';\n\n      document.getElementsByTagName('body')[0].style.marginRight = margin;\n    }\n\n    // add ariahidden to the modal before another is implemented\n    if (this.modalCount > 0) {\n      document.getElementById('modalImplementation' + (this.modalCount)).setAttribute('aria-hidden', 'false');\n    }\n\n    if (this.modalCount === 0) {\n      // Allow 508 to read background again\n      const hideModal = document.getElementsByClassName('modal-aria-hidden');\n\n      for (let x = 0; x < hideModal.length; x++) {\n        hideModal[x].setAttribute('aria-hidden', 'false');\n      }\n    }\n\n    // Set focus back to button\n    setTimeout(() => {\n      if (document.getElementById(id)) {\n        document.getElementById(id).focus();\n      }\n    }, 250);\n  }\n\n  appendComponentToBody(component: any, id: any, title: any, data: any, firstFocus) {\n    // first create and append a div to hook the modal onto\n    if (!document.getElementById('unique-modal-host')) {\n      const modalHost = document.createElement('div');\n      modalHost.setAttribute('id', 'unique-modal-host');\n      document.body.appendChild(modalHost);\n    }\n\n    this.prepModalSettings();\n\n    // Create a component reference from the component\n    const componentRef = this.componentFactoryResolver\n      .resolveComponentFactory(component)\n      .create(this.injector, this.resolveContentProj(component));\n\n    // Attach component to the appRef so that it's inside the ng component tree\n    this.appRef.attachView(componentRef.hostView);\n\n    // Get DOM element from component\n    const domElem = (componentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n\n    // Append DOM element to the div id of modal-host\n    document.getElementById('unique-modal-host').appendChild(domElem);\n\n    // Send Title Inputs to any Modal Body\n    (<any>componentRef\n      .instance)\n      .modalTitle = title;\n\n    // Send a unique identifier for modals\n    (<any>componentRef\n      .instance)\n      .modalCount = this.modalCount;\n\n    // Send Data Inputs to any Modal Body\n    (<any>componentRef\n      .instance)\n      .modalData = data;\n\n    // Focuses on first clickable button that is not the X\n    setTimeout(() => {\n      if (!firstFocus) {\n        firstFocus = 'cancelButton' + this.modalCount;\n      }\n      document.getElementById(firstFocus).focus();\n    }, 0);\n\n    // Listen for close button to be pushed\n    (<any>componentRef\n      .instance)\n      .closeModal\n      .subscribe(x => {\n        this.appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n        this.modalDestroyed.emit(id);\n        this.removeModalSettings(id);\n      });\n  }\n\n  resolveContentProj(comp) {\n\n    if (comp) {\n      if (typeof comp === 'string') {\n        const element = this.doc.createTextNode(comp);\n        return [[element]];\n      }\n\n      if (comp instanceof TemplateRef) {\n        const viewRef = comp.createEmbeddedView(null);\n        return [viewRef.rootNodes];\n      }\n\n      const factory = this.resolver.resolveComponentFactory(comp);\n      const componentRef = factory.create(this.injector);\n\n      return [[componentRef.location.nativeElement]];\n    }\n  }\n\n  /**\n   * Method is used expose _isSubmitted observable\n   */\n  isSubmitted() {\n    return this._isSubmitted;\n  }\n\n  submitModal() {\n    this.submittedSource.next(true);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver"
          },
          {
            "name": "appRef",
            "type": "ApplicationRef"
          },
          {
            "name": "injector",
            "type": "Injector"
          },
          {
            "name": "resolver",
            "type": "ComponentFactoryResolver"
          },
          {
            "name": "doc",
            "type": "any"
          }
        ],
        "line": 28,
        "jsdoctags": [
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "appRef",
            "type": "ApplicationRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "injector",
            "type": "Injector",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "resolver",
            "type": "ComponentFactoryResolver",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "doc",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "ToastService",
      "id": "injectable-ToastService-db5480004b695abe20d07f7c6c89926f",
      "file": "src/app/modules/toast/service/toast.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "showToast",
          "args": [
            {
              "name": "message",
              "type": "string"
            },
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "variation",
              "type": "string",
              "defaultValue": "'info'"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "jsdoctags": [
            {
              "name": "message",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "variation",
              "type": "string",
              "defaultValue": "'info'",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { ToastComponent } from '../component/toast.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(\n    private toastrService: ToastrService\n  ) { }\n\n  showToast(message: string, title: string, variation = 'info'): void {\n    const toastRef = this.toastrService.success(\n      message,\n      title,\n      {\n        toastComponent: ToastComponent,\n        toastClass: 'ngx-toastr ngx-toastr-no-padding'\n      });\n\n    toastRef.toastRef.componentInstance.variation = variation;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "toastrService",
            "type": "ToastrService"
          }
        ],
        "line": 8,
        "jsdoctags": [
          {
            "name": "toastrService",
            "type": "ToastrService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    }
  ],
  "classes": [
    {
      "name": "AngularDesignSystemModel",
      "id": "class-AngularDesignSystemModel-9935e3205fc76b630a47831d1fecf8df",
      "file": "src/app/models/angular-design-system.models.ts",
      "type": "class",
      "sourceCode": "export class AngularDesignSystemModel {\n    // Set the values in this object based on the defaults and parameters that are passed in\n    setOptions(options?) {\n        if (options) {\n            for (const key of Object.keys(options)) {\n                this[key] = options[key];\n            }\n        }\n    }\n}",
      "properties": [],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "AppPage",
      "id": "class-AppPage-dcb32ef2c05e7b804ba490103360d420",
      "file": "e2e/app.po.ts",
      "type": "class",
      "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n",
      "properties": [],
      "methods": [
        {
          "name": "getParagraphText",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 8
        },
        {
          "name": "navigateTo",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 4
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "BarGraphDataModel",
      "id": "class-BarGraphDataModel-be119866f8160ef7a7d9bd6befa173dc",
      "file": "src/app/modules/bar-graph/bar-graph.model.ts",
      "type": "class",
      "sourceCode": "export class BarGraphModel {\n    // ngx-charts Data\n    data: BarGraphDataModel[];\n\n    // ngx-charts Display\n    title: string;\n    colorScheme: any = {\n        domain: ['#6DB6FF', '#DB6D00', '#009292', '#666666']\n    };\n    showXAxis = true;\n    showYAxis = true;\n    xAxisLabel: string;\n    yAxisLabel: string;\n    gradient = false;\n    compareBars = false;\n    tooltipDisabled = false;\n    barPadding = '20';\n    animations = true;\n    showGridLines = true;\n    roundDomains = true;\n    roundEdges = true;\n\n    // Misc.\n    dataAutoId: string;\n    id = 0;\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        if (options) {\n            for (const key of Object.keys(options)) {\n                this[key] = options[key];\n            }\n        }\n     }\n}\n\nexport class BarGraphDataModel {\n    name: string;\n    value: string;\n    modal?: any;\n    modalTitle?: string;\n}\n",
      "properties": [
        {
          "name": "modal",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 40
        },
        {
          "name": "modalTitle",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 41
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "BarGraphModel",
      "id": "class-BarGraphModel-be119866f8160ef7a7d9bd6befa173dc",
      "file": "src/app/modules/bar-graph/bar-graph.model.ts",
      "type": "class",
      "sourceCode": "export class BarGraphModel {\n    // ngx-charts Data\n    data: BarGraphDataModel[];\n\n    // ngx-charts Display\n    title: string;\n    colorScheme: any = {\n        domain: ['#6DB6FF', '#DB6D00', '#009292', '#666666']\n    };\n    showXAxis = true;\n    showYAxis = true;\n    xAxisLabel: string;\n    yAxisLabel: string;\n    gradient = false;\n    compareBars = false;\n    tooltipDisabled = false;\n    barPadding = '20';\n    animations = true;\n    showGridLines = true;\n    roundDomains = true;\n    roundEdges = true;\n\n    // Misc.\n    dataAutoId: string;\n    id = 0;\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        if (options) {\n            for (const key of Object.keys(options)) {\n                this[key] = options[key];\n            }\n        }\n     }\n}\n\nexport class BarGraphDataModel {\n    name: string;\n    value: string;\n    modal?: any;\n    modalTitle?: string;\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 25,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "animations",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "barPadding",
          "defaultValue": "'20'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "colorScheme",
          "defaultValue": "{\n        domain: ['#6DB6FF', '#DB6D00', '#009292', '#666666']\n    }",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "compareBars",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "data",
          "type": "BarGraphDataModel[]",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "dataAutoId",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "gradient",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "id",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "roundDomains",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "roundEdges",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "showGridLines",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "showXAxis",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "showYAxis",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "tooltipDisabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "xAxisLabel",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "yAxisLabel",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "CalendarModel",
      "id": "class-CalendarModel-e12b1c81605debf5d85526e4ec6ef589",
      "file": "src/app/modules/calendar/calendar.model.ts",
      "type": "class",
      "sourceCode": "import { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { Moment } from 'moment';\n\nexport class CalendarModel extends AngularDesignSystemModel {\n  id: string = '';\n  dateLabel: string = 'Start Date';\n  endDateLabel: string = 'End Date';\n  isDateRange: boolean = false;\n  isCheckBox: boolean = false;\n  dataAutoId: string = 'calendarPicker';\n  debounceTime?: number;\n  date: Date;\n  endDate: Date;\n  ariaLabelDate: string = 'Date input';\n  ariaLabelEndDate: string = 'End Date input';\n  minDate: Date | undefined = undefined;\n  maxDate: Date | undefined = undefined;\n  minEndDate: Date | undefined = undefined;\n  maxEndDate: Date | undefined = undefined;\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 19,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "ariaLabelDate",
          "defaultValue": "'Date input'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "ariaLabelEndDate",
          "defaultValue": "'End Date input'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "dataAutoId",
          "defaultValue": "'calendarPicker'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "date",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "dateLabel",
          "defaultValue": "'Start Date'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "debounceTime",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "endDate",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "endDateLabel",
          "defaultValue": "'End Date'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "id",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "isCheckBox",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "isDateRange",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "maxDate",
          "defaultValue": "undefined",
          "type": "Date | undefined",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "maxEndDate",
          "defaultValue": "undefined",
          "type": "Date | undefined",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "minDate",
          "defaultValue": "undefined",
          "type": "Date | undefined",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "minEndDate",
          "defaultValue": "undefined",
          "type": "Date | undefined",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "CardClusterClusterModel",
      "id": "class-CardClusterClusterModel-12e4c3a75e4ea5c4c96a8a7b229259d3",
      "file": "src/app/modules/card-cluster/card-cluster.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\n\nexport class CardClusterClusterModel extends AngularDesignSystemModel {\n  value: string | number;\n  name?: string;\n  nameIcon?: IconDefinition;\n  valueIcon?: IconDefinition;\n  ariaLabel?: string;\n  classValue?: string;\n  classButton?: string;\n  className?: string;\n  disabled = false;\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n\nexport class CardClusterModel extends AngularDesignSystemModel {\n  mainCard = true;\n  mainTitle?: string;\n  mainTitleIcon?: IconDefinition;\n  mainSub?: string;\n  total?: number | string;\n  ariaLabel?: string;\n  rowMaxItems?: number;\n  showRadioButton = false;\n  buttonClicked?: string;\n  dataAutoId?: string;\n  resizeTimeout?: number;\n  cluster: CardClusterClusterModel[];\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "ariaLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "classButton",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "className",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 12
        },
        {
          "name": "classValue",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "name",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "nameIcon",
          "type": "IconDefinition",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "value",
          "type": "string | number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "valueIcon",
          "type": "IconDefinition",
          "optional": true,
          "description": "",
          "line": 8
        }
      ],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "CardClusterModel",
      "id": "class-CardClusterModel-12e4c3a75e4ea5c4c96a8a7b229259d3",
      "file": "src/app/modules/card-cluster/card-cluster.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\n\nexport class CardClusterClusterModel extends AngularDesignSystemModel {\n  value: string | number;\n  name?: string;\n  nameIcon?: IconDefinition;\n  valueIcon?: IconDefinition;\n  ariaLabel?: string;\n  classValue?: string;\n  classButton?: string;\n  className?: string;\n  disabled = false;\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n\nexport class CardClusterModel extends AngularDesignSystemModel {\n  mainCard = true;\n  mainTitle?: string;\n  mainTitleIcon?: IconDefinition;\n  mainSub?: string;\n  total?: number | string;\n  ariaLabel?: string;\n  rowMaxItems?: number;\n  showRadioButton = false;\n  buttonClicked?: string;\n  dataAutoId?: string;\n  resizeTimeout?: number;\n  cluster: CardClusterClusterModel[];\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 33,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "ariaLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 27
        },
        {
          "name": "buttonClicked",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 30
        },
        {
          "name": "cluster",
          "type": "CardClusterClusterModel[]",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "dataAutoId",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 31
        },
        {
          "name": "mainCard",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "mainSub",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 25
        },
        {
          "name": "mainTitle",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 23
        },
        {
          "name": "mainTitleIcon",
          "type": "IconDefinition",
          "optional": true,
          "description": "",
          "line": 24
        },
        {
          "name": "resizeTimeout",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 32
        },
        {
          "name": "rowMaxItems",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 28
        },
        {
          "name": "showRadioButton",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "total",
          "type": "number | string",
          "optional": true,
          "description": "",
          "line": 26
        }
      ],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "CodeSnippetContentItemModel",
      "id": "class-CodeSnippetContentItemModel-f633e4d12a523ef4146b30627e5a5a2c",
      "file": "src/app/modules/code-snippet/code-snippet.model.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport class CodeSnippetModel {\n    id = 'code_snippet';\n    label: string;\n    contentItems: CodeSnippetContentItemModel[];\n    copyLinkDisplay = true;\n    copyLinkLabel = 'Copy to Clipboard';\n    copyLinkAriaLabel = 'Activate enter key to copy to clipboard';\n    copyContent ?: string;\n    dataAutoId = 'code_snippet';\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        if (options) {\n            for (const key of Object.keys(options)) {\n                this[key] = options[key];\n            }\n        }\n     }\n}\n\nexport class CodeSnippetContentItemModel {\n    className: string;\n    lineNumber: number;\n    icon: IconDefinition;\n    content: string;\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        if (options) {\n            for (const key of Object.keys(options)) {\n                this[key] = options[key];\n            }\n        }\n     }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 27,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "className",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "content",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "icon",
          "type": "IconDefinition",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "lineNumber",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "CodeSnippetModel",
      "id": "class-CodeSnippetModel-f633e4d12a523ef4146b30627e5a5a2c",
      "file": "src/app/modules/code-snippet/code-snippet.model.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport class CodeSnippetModel {\n    id = 'code_snippet';\n    label: string;\n    contentItems: CodeSnippetContentItemModel[];\n    copyLinkDisplay = true;\n    copyLinkLabel = 'Copy to Clipboard';\n    copyLinkAriaLabel = 'Activate enter key to copy to clipboard';\n    copyContent ?: string;\n    dataAutoId = 'code_snippet';\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        if (options) {\n            for (const key of Object.keys(options)) {\n                this[key] = options[key];\n            }\n        }\n     }\n}\n\nexport class CodeSnippetContentItemModel {\n    className: string;\n    lineNumber: number;\n    icon: IconDefinition;\n    content: string;\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        if (options) {\n            for (const key of Object.keys(options)) {\n                this[key] = options[key];\n            }\n        }\n     }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "contentItems",
          "type": "CodeSnippetContentItemModel[]",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "copyContent",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "copyLinkAriaLabel",
          "defaultValue": "'Activate enter key to copy to clipboard'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "copyLinkDisplay",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "copyLinkLabel",
          "defaultValue": "'Copy to Clipboard'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "dataAutoId",
          "defaultValue": "'code_snippet'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "id",
          "defaultValue": "'code_snippet'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "FileUploadModel",
      "id": "class-FileUploadModel-ef039f42640d8d9206cc274be0499618",
      "file": "src/app/modules/file-upload/file-upload.model.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nexport class FileUploadModel {\n\n    id ?: string;\n    icon ?: IconDefinition;\n    label ?: string;\n    orLabel ?: string;\n    buttonIcon ?: IconDefinition;\n    buttonLabel ?: string;\n    buttonType ?: string;\n    buttonAriaLabel ?: string;\n    ariaLabel ?: string;\n    className ?: string;\n    classNameActive ?: string;\n    height ?: number | string;\n    dataAutoId ?: string;\n\n    constructor(options?) {\n        // Set defaults if they are not set when the object is created\n        const defaults = {\n            id: 'file_upload',\n            icon: faCloudUploadAlt,\n            label: 'Drag files here to upload',\n            orLabel: 'or',\n            buttonIcon: faCloudUploadAlt,\n            buttonLabel: 'Select Files',\n            buttonType: 'ds-c-button ds-c-button--primary',\n            buttonAriaLabel: 'Activate enter key to upload files',\n            ariaLabel:  'Activate enter key to upload files',\n            className: 'ds-u-fill--white',\n            classNameActive: 'ds-u-fill--primary-alt-lightest',\n            height: 'auto',\n            dataAutoId: 'file_upload',\n        };\n\n        // Merge defaults with parameters that are passed into the object\n        const fileUploadModelValues = {\n            ...defaults,\n            ...options,\n        };\n\n        // Set the values in this object based on the defaults and parameters that are passed in\n        for (const key of Object.keys(fileUploadModelValues)) {\n            this[key] = fileUploadModelValues[key];\n        }\n     }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "ariaLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 13
        },
        {
          "name": "buttonAriaLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 12
        },
        {
          "name": "buttonIcon",
          "type": "IconDefinition",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "buttonLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "buttonType",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "className",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 14
        },
        {
          "name": "classNameActive",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 15
        },
        {
          "name": "dataAutoId",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 17
        },
        {
          "name": "height",
          "type": "number | string",
          "optional": true,
          "description": "",
          "line": 16
        },
        {
          "name": "icon",
          "type": "IconDefinition",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "id",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 5
        },
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "orLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 8
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "IDropdownSettings",
      "id": "class-IDropdownSettings-5d37319218761cd6798d8a75565174ff",
      "file": "src/app/modules/chip-filter/chip-filter.model.ts",
      "type": "class",
      "sourceCode": "export class IDropdownSettings {\n  singleSelection?: boolean;\n  idField?: string;\n  textField?: string;\n  disabledField?: string;\n  enableCheckAll?: boolean;\n  selectAllText?: string;\n  unSelectAllText?: string;\n  allowSearchFilter?: boolean;\n  error?: any;\n  clearSearchFilter?: boolean;\n  hintMessage?: string;\n  errorMessage?: string;\n  labelName?: string;\n  searchText?: string;\n  labelClass?: string;\n  searchPlaceholder?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  maxHeight?: number;\n  itemsShowLimit?: number;\n  limitSelection?: number;\n  searchPlaceholderText?: string;\n  noDataAvailablePlaceholderText?: string;\n  closeDropDownOnSelection?: boolean;\n  showSelectedItemsAtTop?: boolean;\n  defaultOpen?: boolean;\n  allowRemoteDataSearch?: boolean;\n}\n\nexport class ListItem {\n  id: string | number;\n  text: string | number;\n  isDisabled?: boolean;\n\n  public constructor(source: any) {\n    if (typeof source === 'string' || typeof source === 'number') {\n      this.id = this.text = source;\n      this.isDisabled = false;\n    }\n    if (typeof source === 'object') {\n      this.id = source.id;\n      this.text = source.text;\n      this.isDisabled = source.isDisabled;\n    }\n  }\n}\n",
      "properties": [
        {
          "name": "allowRemoteDataSearch",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 28
        },
        {
          "name": "allowSearchFilter",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "clearSearchFilter",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "closeDropDownOnSelection",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 25
        },
        {
          "name": "defaultOpen",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 27
        },
        {
          "name": "disabled",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 18
        },
        {
          "name": "disabledField",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 5
        },
        {
          "name": "enableCheckAll",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "error",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "errorMessage",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 13
        },
        {
          "name": "hintMessage",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 12
        },
        {
          "name": "idField",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 3
        },
        {
          "name": "itemsShowLimit",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 21
        },
        {
          "name": "labelClass",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 16
        },
        {
          "name": "labelName",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 14
        },
        {
          "name": "limitSelection",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 22
        },
        {
          "name": "maxHeight",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 20
        },
        {
          "name": "noDataAvailablePlaceholderText",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 24
        },
        {
          "name": "placeholder",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 19
        },
        {
          "name": "searchPlaceholder",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 17
        },
        {
          "name": "searchPlaceholderText",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 23
        },
        {
          "name": "searchText",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 15
        },
        {
          "name": "selectAllText",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "showSelectedItemsAtTop",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 26
        },
        {
          "name": "singleSelection",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 2
        },
        {
          "name": "textField",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "unSelectAllText",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 8
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "LineGraphDataModel",
      "id": "class-LineGraphDataModel-6534764a91d2c02a4aeefbb9cecf91fe",
      "file": "src/app/modules/line-graph/line-graph.model.ts",
      "type": "class",
      "sourceCode": "export class LineGraphModel {\n    // ngx-charts Data\n    data: LineGraphDataModel[];\n    xAxisValues?: string[];\n\n    // ngx-charts Display\n    colorScheme: any = {\n        domain: ['#6DB6FF', '#DB6D00', '#009292', '#666666']\n    };\n    animations = true;\n    gradient = true;\n    gridLines = true;\n    autoScale = true;\n    roundDomain = true;\n    timeline = false;\n    tooltipDisabled = false;\n    xAxis = true;\n    yAxis = true;\n    xLabel?: string;\n    yLabel?: string;\n    xAxisTickFormatting?;\n    yAxisTickFormatting?;\n\n    // Misc.\n    dataAutoId = 'line_graph';\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        for (const key of Object.keys(options)) {\n            this[key] = options[key];\n        }\n     }\n}\n\nexport class LineGraphDataModel {\n    name: string;\n    series: LineGraphSeriesModel[];\n}\n\nexport class LineGraphSeriesModel {\n    name: string;\n    value: string;\n}",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "series",
          "type": "LineGraphSeriesModel[]",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "LineGraphModel",
      "id": "class-LineGraphModel-6534764a91d2c02a4aeefbb9cecf91fe",
      "file": "src/app/modules/line-graph/line-graph.model.ts",
      "type": "class",
      "sourceCode": "export class LineGraphModel {\n    // ngx-charts Data\n    data: LineGraphDataModel[];\n    xAxisValues?: string[];\n\n    // ngx-charts Display\n    colorScheme: any = {\n        domain: ['#6DB6FF', '#DB6D00', '#009292', '#666666']\n    };\n    animations = true;\n    gradient = true;\n    gridLines = true;\n    autoScale = true;\n    roundDomain = true;\n    timeline = false;\n    tooltipDisabled = false;\n    xAxis = true;\n    yAxis = true;\n    xLabel?: string;\n    yLabel?: string;\n    xAxisTickFormatting?;\n    yAxisTickFormatting?;\n\n    // Misc.\n    dataAutoId = 'line_graph';\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        for (const key of Object.keys(options)) {\n            this[key] = options[key];\n        }\n     }\n}\n\nexport class LineGraphDataModel {\n    name: string;\n    series: LineGraphSeriesModel[];\n}\n\nexport class LineGraphSeriesModel {\n    name: string;\n    value: string;\n}",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 25,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "animations",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "autoScale",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "colorScheme",
          "defaultValue": "{\n        domain: ['#6DB6FF', '#DB6D00', '#009292', '#666666']\n    }",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "data",
          "type": "LineGraphDataModel[]",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "dataAutoId",
          "defaultValue": "'line_graph'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "gradient",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "gridLines",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "roundDomain",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "timeline",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "tooltipDisabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "xAxis",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "xAxisTickFormatting",
          "type": "",
          "optional": true,
          "description": "",
          "line": 21
        },
        {
          "name": "xAxisValues",
          "type": "string[]",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "xLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 19
        },
        {
          "name": "yAxis",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "yAxisTickFormatting",
          "type": "",
          "optional": true,
          "description": "",
          "line": 22
        },
        {
          "name": "yLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 20
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "LineGraphSeriesModel",
      "id": "class-LineGraphSeriesModel-6534764a91d2c02a4aeefbb9cecf91fe",
      "file": "src/app/modules/line-graph/line-graph.model.ts",
      "type": "class",
      "sourceCode": "export class LineGraphModel {\n    // ngx-charts Data\n    data: LineGraphDataModel[];\n    xAxisValues?: string[];\n\n    // ngx-charts Display\n    colorScheme: any = {\n        domain: ['#6DB6FF', '#DB6D00', '#009292', '#666666']\n    };\n    animations = true;\n    gradient = true;\n    gridLines = true;\n    autoScale = true;\n    roundDomain = true;\n    timeline = false;\n    tooltipDisabled = false;\n    xAxis = true;\n    yAxis = true;\n    xLabel?: string;\n    yLabel?: string;\n    xAxisTickFormatting?;\n    yAxisTickFormatting?;\n\n    // Misc.\n    dataAutoId = 'line_graph';\n\n    constructor(options?) {\n        // Set the values in this object based on the defaults and parameters that are passed in\n        for (const key of Object.keys(options)) {\n            this[key] = options[key];\n        }\n     }\n}\n\nexport class LineGraphDataModel {\n    name: string;\n    series: LineGraphSeriesModel[];\n}\n\nexport class LineGraphSeriesModel {\n    name: string;\n    value: string;\n}",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 42
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "ListItem",
      "id": "class-ListItem-5d37319218761cd6798d8a75565174ff",
      "file": "src/app/modules/chip-filter/chip-filter.model.ts",
      "type": "class",
      "sourceCode": "export class IDropdownSettings {\n  singleSelection?: boolean;\n  idField?: string;\n  textField?: string;\n  disabledField?: string;\n  enableCheckAll?: boolean;\n  selectAllText?: string;\n  unSelectAllText?: string;\n  allowSearchFilter?: boolean;\n  error?: any;\n  clearSearchFilter?: boolean;\n  hintMessage?: string;\n  errorMessage?: string;\n  labelName?: string;\n  searchText?: string;\n  labelClass?: string;\n  searchPlaceholder?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  maxHeight?: number;\n  itemsShowLimit?: number;\n  limitSelection?: number;\n  searchPlaceholderText?: string;\n  noDataAvailablePlaceholderText?: string;\n  closeDropDownOnSelection?: boolean;\n  showSelectedItemsAtTop?: boolean;\n  defaultOpen?: boolean;\n  allowRemoteDataSearch?: boolean;\n}\n\nexport class ListItem {\n  id: string | number;\n  text: string | number;\n  isDisabled?: boolean;\n\n  public constructor(source: any) {\n    if (typeof source === 'string' || typeof source === 'number') {\n      this.id = this.text = source;\n      this.isDisabled = false;\n    }\n    if (typeof source === 'object') {\n      this.id = source.id;\n      this.text = source.text;\n      this.isDisabled = source.isDisabled;\n    }\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "source",
            "type": "any"
          }
        ],
        "line": 34,
        "modifierKind": [114],
        "jsdoctags": [
          {
            "name": "source",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "id",
          "type": "string | number",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "isDisabled",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 34
        },
        {
          "name": "text",
          "type": "string | number",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "ModalGenericModel",
      "id": "class-ModalGenericModel-7007d64f980edd1f5905061050277373",
      "file": "src/app/modules/modal-shell/modal-generic/modal-generic.model.ts",
      "type": "class",
      "sourceCode": "export class ModalGenericModel {\n  id: string;\n  title: string;\n  data: string;\n  modalCount: string;\n  modalClass: string;\n  header?: string;\n  body: string;\n  bodyFormatted: any[];\n  buttonType?: string;\n  buttonLabel?: string;\n  buttonId?: string;\n  onConfirm: any;\n  useNgContent?: boolean;\n\n  constructor(options?) {\n    // Set defaults if they are not set when the object is created\n    const defaults = {\n      buttonType: 'ds-c-button--primary',\n      buttonLabel: 'Okay',\n      buttonId: 'actionOKButton',\n      header: null,\n      useNgContent: false,\n    };\n\n    // Merge defaults with parameters that are passed into the object\n    const modelValues = {\n      ...defaults,\n      ...options,\n    };\n\n    // Set the values in this object based on the defaults and parameters that are passed in\n    for (const key of Object.keys(modelValues)) {\n      this[key] = modelValues[key];\n    }\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "body",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "bodyFormatted",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "buttonId",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 12
        },
        {
          "name": "buttonLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "buttonType",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "header",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "modalClass",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "modalCount",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "onConfirm",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "useNgContent",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 14
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "PopoverItemModel",
      "id": "class-PopoverItemModel-84fb4c39169dc0c384193e4a91bf706f",
      "file": "src/app/modules/popover/popover.model.ts",
      "type": "class",
      "sourceCode": "import { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport class PopoverItemModel extends AngularDesignSystemModel {\n  id: string;\n  label: string;\n  ariaLabel: string;\n  dataAutoId: string;\n  url: string;\n  onClick: any;\n  icon?: IconDefinition;\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n\nexport enum mdePopoverPositionXEnum {\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport enum mdePopoverPositionYEnum {\n  ABOVE = 'above',\n  BELOW = 'below',\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class PopoverModel extends AngularDesignSystemModel {\n  id = 'popover';\n  icon: IconDefinition = null;\n  label = 'Open Popover';\n  ariaLabel = 'Activate enter key to open popover';\n  ariaLiveTextOpen = 'The popover menu has been opened';\n  ariaLiveTextClosed = 'The popover menu has been closed';\n  buttonClass = 'ds-u-color--base';\n  showArrow = true;\n  mdePopoverPositionX? = mdePopoverPositionXEnum.BEFORE;\n  mdePopoverPositionY? = mdePopoverPositionYEnum.BELOW;\n  dataAutoId = 'popover';\n  items: PopoverItemModel[] = [];\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "ariaLabel",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "dataAutoId",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "icon",
          "type": "IconDefinition",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "onClick",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "PopoverModel",
      "id": "class-PopoverModel-84fb4c39169dc0c384193e4a91bf706f",
      "file": "src/app/modules/popover/popover.model.ts",
      "type": "class",
      "sourceCode": "import { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport class PopoverItemModel extends AngularDesignSystemModel {\n  id: string;\n  label: string;\n  ariaLabel: string;\n  dataAutoId: string;\n  url: string;\n  onClick: any;\n  icon?: IconDefinition;\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n\nexport enum mdePopoverPositionXEnum {\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport enum mdePopoverPositionYEnum {\n  ABOVE = 'above',\n  BELOW = 'below',\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class PopoverModel extends AngularDesignSystemModel {\n  id = 'popover';\n  icon: IconDefinition = null;\n  label = 'Open Popover';\n  ariaLabel = 'Activate enter key to open popover';\n  ariaLiveTextOpen = 'The popover menu has been opened';\n  ariaLiveTextClosed = 'The popover menu has been closed';\n  buttonClass = 'ds-u-color--base';\n  showArrow = true;\n  mdePopoverPositionX? = mdePopoverPositionXEnum.BEFORE;\n  mdePopoverPositionY? = mdePopoverPositionYEnum.BELOW;\n  dataAutoId = 'popover';\n  items: PopoverItemModel[] = [];\n\n  constructor(options?) {\n    super();\n    this.setOptions(options);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "",
            "optional": true
          }
        ],
        "line": 42,
        "jsdoctags": [
          {
            "name": "options",
            "type": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "ariaLabel",
          "defaultValue": "'Activate enter key to open popover'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "ariaLiveTextClosed",
          "defaultValue": "'The popover menu has been closed'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "ariaLiveTextOpen",
          "defaultValue": "'The popover menu has been opened'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "buttonClass",
          "defaultValue": "'ds-u-color--base'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "dataAutoId",
          "defaultValue": "'popover'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "icon",
          "defaultValue": "null",
          "type": "IconDefinition",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "id",
          "defaultValue": "'popover'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "items",
          "defaultValue": "[]",
          "type": "PopoverItemModel[]",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "label",
          "defaultValue": "'Open Popover'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "mdePopoverPositionX",
          "defaultValue": "mdePopoverPositionXEnum.BEFORE",
          "type": "",
          "optional": true,
          "description": "",
          "line": 39
        },
        {
          "name": "mdePopoverPositionY",
          "defaultValue": "mdePopoverPositionYEnum.BELOW",
          "type": "",
          "optional": true,
          "description": "",
          "line": 40
        },
        {
          "name": "showArrow",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "TableCellModel",
      "id": "class-TableCellModel-d521d938462032f98bc27ed57c6f34f6",
      "file": "src/app/modules/table2/table.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { PopoverModel } from '../popover/popover.model';\n\n/***********************\n * Table Header Models\n ***********************/\n\nexport enum TableHeaderTypeEnum {\n  DEFAULT = 'default',\n  SORT = 'sort',\n  CHECKBOX = 'checkbox',\n}\n\nexport enum TableHeaderSortEnum {\n  NONE = 'none',\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport class TableHeaderModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  type: TableHeaderTypeEnum = TableHeaderTypeEnum.DEFAULT;\n  cellClass = '';\n  class = '';\n  rowspan: number;\n  colspan: number;\n  isRowHeader = false;\n  headerWidth?: string;\n  modalText?: string;\n\n  // Sort Properties\n  sort?: TableHeaderSortEnum = TableHeaderSortEnum.NONE;\n\n  // Checkbox Properties\n  isChecked? = false;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\nexport enum TableCellTypeEnum {\n  DEFAULT = 'default',\n  BUTTON = 'button',\n  CHECKBOX = 'checkbox',\n  POPOVER = 'popover',\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableCellModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  ariaLabel?: string;\n  type?: TableCellTypeEnum = TableCellTypeEnum.DEFAULT;\n  class? = '';\n  colspan: number;\n  modalText?: string;\n\n  // Icon Properties\n  icon?: IconDefinition;\n  iconClass? = '';\n\n  // Button Properties\n  buttonDisabled? = false;\n  buttonOnClick?: any;\n  buttonClass?: string;\n\n  // Checkbox Properties\n  checkboxValue: string;\n  isChecked? = false;\n\n  // Popover Properties\n  popoverModel: PopoverModel;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n\n  toggleCheckbox(isChecked) {\n    this.isChecked = isChecked;\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableHeaderRowModel extends AngularDesignSystemModel {\n  cells: TableHeaderModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableRowModel extends AngularDesignSystemModel {\n  cells: TableCellModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Pagination Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TablePaginationModel extends AngularDesignSystemModel {\n  isEnabled = true;\n  perPage = 10;\n  currentPage = 1;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Model\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableModel extends AngularDesignSystemModel {\n  id: string;\n  headerRows?: TableHeaderRowModel[] = [];\n  headers: TableHeaderModel[] = []; // deprecated and replaced with headerRows\n  rows: TableRowModel[] = [];\n  totalRows: number;\n  summary: string;\n  class?: string;\n  headerClass?: string;\n  pagination: TablePaginationModel = new TablePaginationModel({});\n  isLoading = false;\n  showTable = true;\n\n  // This will get set automatically, do not set this by hand\n  _rowHeaderIndex: number;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n\n    // Convert headers paramater to headerRows parameter and unset headers\n    if (this.headers.length && !this.headerRows.length) {\n      this.headerRows = [new TableHeaderRowModel({ cells: this.headers })];\n    }\n    // this.headers = null;\n\n    let rowHeaderIndex = 0;\n    for (const headerRow of this.headerRows) {\n      rowHeaderIndex = 0;\n      for (const header of headerRow.cells) {\n        if (header.isRowHeader) {\n          break;\n        }\n        rowHeaderIndex += header.colspan || 1;\n      }\n      if (rowHeaderIndex) {\n        break;\n      }\n    }\n    this._rowHeaderIndex = rowHeaderIndex;\n  }\n\n  toggleSort(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      for (const header of headerRow.cells) {\n        if (header.columnKey === columnKey) {\n          if (header.sort === TableHeaderSortEnum.NONE || header.sort === TableHeaderSortEnum.ASC) {\n            header.sort = TableHeaderSortEnum.DESC;\n          } else {\n            header.sort = TableHeaderSortEnum.ASC;\n          }\n        } else {\n          header.sort = TableHeaderSortEnum.NONE;\n        }\n      }\n    }\n  }\n\n  toggleSelectAll(columnKey: string, isChecked: boolean): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = isChecked;\n        });\n    }\n\n    // Set isChecked value in model for each related cell\n    for (const row of this.rows) {\n      for (const cell of row.cells) {\n        if (cell.columnKey === columnKey) {\n          cell.isChecked = isChecked;\n        }\n      }\n    }\n  }\n\n  unselectHeaderCheckbox(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = false;\n        });\n    }\n  }\n\n  public getSelectedCheckboxValues(columnKey: string): string[] {\n    const checkedValues: string[] = [];\n    for (const row of this.rows) {\n      for (const cell of row.cells.filter((currentCell) => currentCell.columnKey === columnKey)) {\n        if (cell.isChecked) {\n          checkedValues.push(cell.checkboxValue);\n        }\n      }\n    }\n    return checkedValues;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "any",
            "optional": true
          }
        ],
        "line": 80,
        "jsdoctags": [
          {
            "name": "options",
            "type": "any",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "ariaLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 60
        },
        {
          "name": "buttonClass",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 73
        },
        {
          "name": "buttonDisabled",
          "defaultValue": "false",
          "type": "",
          "optional": true,
          "description": "",
          "line": 71
        },
        {
          "name": "buttonOnClick",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 72
        },
        {
          "name": "checkboxValue",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 76
        },
        {
          "name": "class",
          "defaultValue": "''",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 62
        },
        {
          "name": "colspan",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "columnKey",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "icon",
          "type": "IconDefinition",
          "optional": true,
          "description": "",
          "line": 67
        },
        {
          "name": "iconClass",
          "defaultValue": "''",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 68
        },
        {
          "name": "isChecked",
          "defaultValue": "false",
          "type": "",
          "optional": true,
          "description": "",
          "line": 77
        },
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "modalText",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 64
        },
        {
          "name": "popoverModel",
          "type": "PopoverModel",
          "optional": false,
          "description": "",
          "line": 80
        },
        {
          "name": "type",
          "defaultValue": "TableCellTypeEnum.DEFAULT",
          "type": "TableCellTypeEnum",
          "optional": true,
          "description": "",
          "line": 61
        }
      ],
      "methods": [
        {
          "name": "toggleCheckbox",
          "args": [
            {
              "name": "isChecked",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 87,
          "jsdoctags": [
            {
              "name": "isChecked",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "TableHeaderModel",
      "id": "class-TableHeaderModel-d521d938462032f98bc27ed57c6f34f6",
      "file": "src/app/modules/table2/table.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { PopoverModel } from '../popover/popover.model';\n\n/***********************\n * Table Header Models\n ***********************/\n\nexport enum TableHeaderTypeEnum {\n  DEFAULT = 'default',\n  SORT = 'sort',\n  CHECKBOX = 'checkbox',\n}\n\nexport enum TableHeaderSortEnum {\n  NONE = 'none',\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport class TableHeaderModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  type: TableHeaderTypeEnum = TableHeaderTypeEnum.DEFAULT;\n  cellClass = '';\n  class = '';\n  rowspan: number;\n  colspan: number;\n  isRowHeader = false;\n  headerWidth?: string;\n  modalText?: string;\n\n  // Sort Properties\n  sort?: TableHeaderSortEnum = TableHeaderSortEnum.NONE;\n\n  // Checkbox Properties\n  isChecked? = false;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\nexport enum TableCellTypeEnum {\n  DEFAULT = 'default',\n  BUTTON = 'button',\n  CHECKBOX = 'checkbox',\n  POPOVER = 'popover',\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableCellModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  ariaLabel?: string;\n  type?: TableCellTypeEnum = TableCellTypeEnum.DEFAULT;\n  class? = '';\n  colspan: number;\n  modalText?: string;\n\n  // Icon Properties\n  icon?: IconDefinition;\n  iconClass? = '';\n\n  // Button Properties\n  buttonDisabled? = false;\n  buttonOnClick?: any;\n  buttonClass?: string;\n\n  // Checkbox Properties\n  checkboxValue: string;\n  isChecked? = false;\n\n  // Popover Properties\n  popoverModel: PopoverModel;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n\n  toggleCheckbox(isChecked) {\n    this.isChecked = isChecked;\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableHeaderRowModel extends AngularDesignSystemModel {\n  cells: TableHeaderModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableRowModel extends AngularDesignSystemModel {\n  cells: TableCellModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Pagination Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TablePaginationModel extends AngularDesignSystemModel {\n  isEnabled = true;\n  perPage = 10;\n  currentPage = 1;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Model\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableModel extends AngularDesignSystemModel {\n  id: string;\n  headerRows?: TableHeaderRowModel[] = [];\n  headers: TableHeaderModel[] = []; // deprecated and replaced with headerRows\n  rows: TableRowModel[] = [];\n  totalRows: number;\n  summary: string;\n  class?: string;\n  headerClass?: string;\n  pagination: TablePaginationModel = new TablePaginationModel({});\n  isLoading = false;\n  showTable = true;\n\n  // This will get set automatically, do not set this by hand\n  _rowHeaderIndex: number;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n\n    // Convert headers paramater to headerRows parameter and unset headers\n    if (this.headers.length && !this.headerRows.length) {\n      this.headerRows = [new TableHeaderRowModel({ cells: this.headers })];\n    }\n    // this.headers = null;\n\n    let rowHeaderIndex = 0;\n    for (const headerRow of this.headerRows) {\n      rowHeaderIndex = 0;\n      for (const header of headerRow.cells) {\n        if (header.isRowHeader) {\n          break;\n        }\n        rowHeaderIndex += header.colspan || 1;\n      }\n      if (rowHeaderIndex) {\n        break;\n      }\n    }\n    this._rowHeaderIndex = rowHeaderIndex;\n  }\n\n  toggleSort(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      for (const header of headerRow.cells) {\n        if (header.columnKey === columnKey) {\n          if (header.sort === TableHeaderSortEnum.NONE || header.sort === TableHeaderSortEnum.ASC) {\n            header.sort = TableHeaderSortEnum.DESC;\n          } else {\n            header.sort = TableHeaderSortEnum.ASC;\n          }\n        } else {\n          header.sort = TableHeaderSortEnum.NONE;\n        }\n      }\n    }\n  }\n\n  toggleSelectAll(columnKey: string, isChecked: boolean): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = isChecked;\n        });\n    }\n\n    // Set isChecked value in model for each related cell\n    for (const row of this.rows) {\n      for (const cell of row.cells) {\n        if (cell.columnKey === columnKey) {\n          cell.isChecked = isChecked;\n        }\n      }\n    }\n  }\n\n  unselectHeaderCheckbox(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = false;\n        });\n    }\n  }\n\n  public getSelectedCheckboxValues(columnKey: string): string[] {\n    const checkedValues: string[] = [];\n    for (const row of this.rows) {\n      for (const cell of row.cells.filter((currentCell) => currentCell.columnKey === columnKey)) {\n        if (cell.isChecked) {\n          checkedValues.push(cell.checkboxValue);\n        }\n      }\n    }\n    return checkedValues;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "any",
            "optional": true
          }
        ],
        "line": 37,
        "jsdoctags": [
          {
            "name": "options",
            "type": "any",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "cellClass",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "class",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "colspan",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "columnKey",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "headerWidth",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 30
        },
        {
          "name": "isChecked",
          "defaultValue": "false",
          "type": "",
          "optional": true,
          "description": "",
          "line": 37
        },
        {
          "name": "isRowHeader",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "modalText",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 31
        },
        {
          "name": "rowspan",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "sort",
          "defaultValue": "TableHeaderSortEnum.NONE",
          "type": "TableHeaderSortEnum",
          "optional": true,
          "description": "",
          "line": 34
        },
        {
          "name": "type",
          "defaultValue": "TableHeaderTypeEnum.DEFAULT",
          "type": "TableHeaderTypeEnum",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "TableHeaderRowModel",
      "id": "class-TableHeaderRowModel-d521d938462032f98bc27ed57c6f34f6",
      "file": "src/app/modules/table2/table.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { PopoverModel } from '../popover/popover.model';\n\n/***********************\n * Table Header Models\n ***********************/\n\nexport enum TableHeaderTypeEnum {\n  DEFAULT = 'default',\n  SORT = 'sort',\n  CHECKBOX = 'checkbox',\n}\n\nexport enum TableHeaderSortEnum {\n  NONE = 'none',\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport class TableHeaderModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  type: TableHeaderTypeEnum = TableHeaderTypeEnum.DEFAULT;\n  cellClass = '';\n  class = '';\n  rowspan: number;\n  colspan: number;\n  isRowHeader = false;\n  headerWidth?: string;\n  modalText?: string;\n\n  // Sort Properties\n  sort?: TableHeaderSortEnum = TableHeaderSortEnum.NONE;\n\n  // Checkbox Properties\n  isChecked? = false;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\nexport enum TableCellTypeEnum {\n  DEFAULT = 'default',\n  BUTTON = 'button',\n  CHECKBOX = 'checkbox',\n  POPOVER = 'popover',\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableCellModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  ariaLabel?: string;\n  type?: TableCellTypeEnum = TableCellTypeEnum.DEFAULT;\n  class? = '';\n  colspan: number;\n  modalText?: string;\n\n  // Icon Properties\n  icon?: IconDefinition;\n  iconClass? = '';\n\n  // Button Properties\n  buttonDisabled? = false;\n  buttonOnClick?: any;\n  buttonClass?: string;\n\n  // Checkbox Properties\n  checkboxValue: string;\n  isChecked? = false;\n\n  // Popover Properties\n  popoverModel: PopoverModel;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n\n  toggleCheckbox(isChecked) {\n    this.isChecked = isChecked;\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableHeaderRowModel extends AngularDesignSystemModel {\n  cells: TableHeaderModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableRowModel extends AngularDesignSystemModel {\n  cells: TableCellModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Pagination Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TablePaginationModel extends AngularDesignSystemModel {\n  isEnabled = true;\n  perPage = 10;\n  currentPage = 1;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Model\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableModel extends AngularDesignSystemModel {\n  id: string;\n  headerRows?: TableHeaderRowModel[] = [];\n  headers: TableHeaderModel[] = []; // deprecated and replaced with headerRows\n  rows: TableRowModel[] = [];\n  totalRows: number;\n  summary: string;\n  class?: string;\n  headerClass?: string;\n  pagination: TablePaginationModel = new TablePaginationModel({});\n  isLoading = false;\n  showTable = true;\n\n  // This will get set automatically, do not set this by hand\n  _rowHeaderIndex: number;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n\n    // Convert headers paramater to headerRows parameter and unset headers\n    if (this.headers.length && !this.headerRows.length) {\n      this.headerRows = [new TableHeaderRowModel({ cells: this.headers })];\n    }\n    // this.headers = null;\n\n    let rowHeaderIndex = 0;\n    for (const headerRow of this.headerRows) {\n      rowHeaderIndex = 0;\n      for (const header of headerRow.cells) {\n        if (header.isRowHeader) {\n          break;\n        }\n        rowHeaderIndex += header.colspan || 1;\n      }\n      if (rowHeaderIndex) {\n        break;\n      }\n    }\n    this._rowHeaderIndex = rowHeaderIndex;\n  }\n\n  toggleSort(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      for (const header of headerRow.cells) {\n        if (header.columnKey === columnKey) {\n          if (header.sort === TableHeaderSortEnum.NONE || header.sort === TableHeaderSortEnum.ASC) {\n            header.sort = TableHeaderSortEnum.DESC;\n          } else {\n            header.sort = TableHeaderSortEnum.ASC;\n          }\n        } else {\n          header.sort = TableHeaderSortEnum.NONE;\n        }\n      }\n    }\n  }\n\n  toggleSelectAll(columnKey: string, isChecked: boolean): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = isChecked;\n        });\n    }\n\n    // Set isChecked value in model for each related cell\n    for (const row of this.rows) {\n      for (const cell of row.cells) {\n        if (cell.columnKey === columnKey) {\n          cell.isChecked = isChecked;\n        }\n      }\n    }\n  }\n\n  unselectHeaderCheckbox(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = false;\n        });\n    }\n  }\n\n  public getSelectedCheckboxValues(columnKey: string): string[] {\n    const checkedValues: string[] = [];\n    for (const row of this.rows) {\n      for (const cell of row.cells.filter((currentCell) => currentCell.columnKey === columnKey)) {\n        if (cell.isChecked) {\n          checkedValues.push(cell.checkboxValue);\n        }\n      }\n    }\n    return checkedValues;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "any",
            "optional": true
          }
        ],
        "line": 99,
        "jsdoctags": [
          {
            "name": "options",
            "type": "any",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "cells",
          "defaultValue": "[]",
          "type": "TableHeaderModel[]",
          "optional": false,
          "description": "",
          "line": 98
        },
        {
          "name": "class",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 99
        }
      ],
      "description": "<hr>\n<p>Table Row Models</p>\n<hr>\n",
      "rawdescription": "*********************\nTable Row Models\n*********************",
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "TableModel",
      "id": "class-TableModel-d521d938462032f98bc27ed57c6f34f6",
      "file": "src/app/modules/table2/table.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { PopoverModel } from '../popover/popover.model';\n\n/***********************\n * Table Header Models\n ***********************/\n\nexport enum TableHeaderTypeEnum {\n  DEFAULT = 'default',\n  SORT = 'sort',\n  CHECKBOX = 'checkbox',\n}\n\nexport enum TableHeaderSortEnum {\n  NONE = 'none',\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport class TableHeaderModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  type: TableHeaderTypeEnum = TableHeaderTypeEnum.DEFAULT;\n  cellClass = '';\n  class = '';\n  rowspan: number;\n  colspan: number;\n  isRowHeader = false;\n  headerWidth?: string;\n  modalText?: string;\n\n  // Sort Properties\n  sort?: TableHeaderSortEnum = TableHeaderSortEnum.NONE;\n\n  // Checkbox Properties\n  isChecked? = false;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\nexport enum TableCellTypeEnum {\n  DEFAULT = 'default',\n  BUTTON = 'button',\n  CHECKBOX = 'checkbox',\n  POPOVER = 'popover',\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableCellModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  ariaLabel?: string;\n  type?: TableCellTypeEnum = TableCellTypeEnum.DEFAULT;\n  class? = '';\n  colspan: number;\n  modalText?: string;\n\n  // Icon Properties\n  icon?: IconDefinition;\n  iconClass? = '';\n\n  // Button Properties\n  buttonDisabled? = false;\n  buttonOnClick?: any;\n  buttonClass?: string;\n\n  // Checkbox Properties\n  checkboxValue: string;\n  isChecked? = false;\n\n  // Popover Properties\n  popoverModel: PopoverModel;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n\n  toggleCheckbox(isChecked) {\n    this.isChecked = isChecked;\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableHeaderRowModel extends AngularDesignSystemModel {\n  cells: TableHeaderModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableRowModel extends AngularDesignSystemModel {\n  cells: TableCellModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Pagination Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TablePaginationModel extends AngularDesignSystemModel {\n  isEnabled = true;\n  perPage = 10;\n  currentPage = 1;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Model\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableModel extends AngularDesignSystemModel {\n  id: string;\n  headerRows?: TableHeaderRowModel[] = [];\n  headers: TableHeaderModel[] = []; // deprecated and replaced with headerRows\n  rows: TableRowModel[] = [];\n  totalRows: number;\n  summary: string;\n  class?: string;\n  headerClass?: string;\n  pagination: TablePaginationModel = new TablePaginationModel({});\n  isLoading = false;\n  showTable = true;\n\n  // This will get set automatically, do not set this by hand\n  _rowHeaderIndex: number;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n\n    // Convert headers paramater to headerRows parameter and unset headers\n    if (this.headers.length && !this.headerRows.length) {\n      this.headerRows = [new TableHeaderRowModel({ cells: this.headers })];\n    }\n    // this.headers = null;\n\n    let rowHeaderIndex = 0;\n    for (const headerRow of this.headerRows) {\n      rowHeaderIndex = 0;\n      for (const header of headerRow.cells) {\n        if (header.isRowHeader) {\n          break;\n        }\n        rowHeaderIndex += header.colspan || 1;\n      }\n      if (rowHeaderIndex) {\n        break;\n      }\n    }\n    this._rowHeaderIndex = rowHeaderIndex;\n  }\n\n  toggleSort(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      for (const header of headerRow.cells) {\n        if (header.columnKey === columnKey) {\n          if (header.sort === TableHeaderSortEnum.NONE || header.sort === TableHeaderSortEnum.ASC) {\n            header.sort = TableHeaderSortEnum.DESC;\n          } else {\n            header.sort = TableHeaderSortEnum.ASC;\n          }\n        } else {\n          header.sort = TableHeaderSortEnum.NONE;\n        }\n      }\n    }\n  }\n\n  toggleSelectAll(columnKey: string, isChecked: boolean): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = isChecked;\n        });\n    }\n\n    // Set isChecked value in model for each related cell\n    for (const row of this.rows) {\n      for (const cell of row.cells) {\n        if (cell.columnKey === columnKey) {\n          cell.isChecked = isChecked;\n        }\n      }\n    }\n  }\n\n  unselectHeaderCheckbox(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = false;\n        });\n    }\n  }\n\n  public getSelectedCheckboxValues(columnKey: string): string[] {\n    const checkedValues: string[] = [];\n    for (const row of this.rows) {\n      for (const cell of row.cells.filter((currentCell) => currentCell.columnKey === columnKey)) {\n        if (cell.isChecked) {\n          checkedValues.push(cell.checkboxValue);\n        }\n      }\n    }\n    return checkedValues;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "any",
            "optional": true
          }
        ],
        "line": 153,
        "jsdoctags": [
          {
            "name": "options",
            "type": "any",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "_rowHeaderIndex",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 153
        },
        {
          "name": "class",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 146
        },
        {
          "name": "headerClass",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 147
        },
        {
          "name": "headerRows",
          "defaultValue": "[]",
          "type": "TableHeaderRowModel[]",
          "optional": true,
          "description": "",
          "line": 141
        },
        {
          "name": "headers",
          "defaultValue": "[]",
          "type": "TableHeaderModel[]",
          "optional": false,
          "description": "",
          "line": 142
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 140
        },
        {
          "name": "isLoading",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 149
        },
        {
          "name": "pagination",
          "defaultValue": "new TablePaginationModel({})",
          "type": "TablePaginationModel",
          "optional": false,
          "description": "",
          "line": 148
        },
        {
          "name": "rows",
          "defaultValue": "[]",
          "type": "TableRowModel[]",
          "optional": false,
          "description": "",
          "line": 143
        },
        {
          "name": "showTable",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 150
        },
        {
          "name": "summary",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 145
        },
        {
          "name": "totalRows",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 144
        }
      ],
      "description": "<hr>\n<p>Table Model</p>\n<hr>\n",
      "rawdescription": "*********************\nTable Model\n*********************",
      "methods": [
        {
          "name": "getSelectedCheckboxValues",
          "args": [
            {
              "name": "columnKey",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 226,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "columnKey",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleSelectAll",
          "args": [
            {
              "name": "columnKey",
              "type": "string"
            },
            {
              "name": "isChecked",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 197,
          "jsdoctags": [
            {
              "name": "columnKey",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "isChecked",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleSort",
          "args": [
            {
              "name": "columnKey",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 181,
          "jsdoctags": [
            {
              "name": "columnKey",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "unselectHeaderCheckbox",
          "args": [
            {
              "name": "columnKey",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 216,
          "jsdoctags": [
            {
              "name": "columnKey",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "TablePaginationModel",
      "id": "class-TablePaginationModel-d521d938462032f98bc27ed57c6f34f6",
      "file": "src/app/modules/table2/table.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { PopoverModel } from '../popover/popover.model';\n\n/***********************\n * Table Header Models\n ***********************/\n\nexport enum TableHeaderTypeEnum {\n  DEFAULT = 'default',\n  SORT = 'sort',\n  CHECKBOX = 'checkbox',\n}\n\nexport enum TableHeaderSortEnum {\n  NONE = 'none',\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport class TableHeaderModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  type: TableHeaderTypeEnum = TableHeaderTypeEnum.DEFAULT;\n  cellClass = '';\n  class = '';\n  rowspan: number;\n  colspan: number;\n  isRowHeader = false;\n  headerWidth?: string;\n  modalText?: string;\n\n  // Sort Properties\n  sort?: TableHeaderSortEnum = TableHeaderSortEnum.NONE;\n\n  // Checkbox Properties\n  isChecked? = false;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\nexport enum TableCellTypeEnum {\n  DEFAULT = 'default',\n  BUTTON = 'button',\n  CHECKBOX = 'checkbox',\n  POPOVER = 'popover',\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableCellModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  ariaLabel?: string;\n  type?: TableCellTypeEnum = TableCellTypeEnum.DEFAULT;\n  class? = '';\n  colspan: number;\n  modalText?: string;\n\n  // Icon Properties\n  icon?: IconDefinition;\n  iconClass? = '';\n\n  // Button Properties\n  buttonDisabled? = false;\n  buttonOnClick?: any;\n  buttonClass?: string;\n\n  // Checkbox Properties\n  checkboxValue: string;\n  isChecked? = false;\n\n  // Popover Properties\n  popoverModel: PopoverModel;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n\n  toggleCheckbox(isChecked) {\n    this.isChecked = isChecked;\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableHeaderRowModel extends AngularDesignSystemModel {\n  cells: TableHeaderModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableRowModel extends AngularDesignSystemModel {\n  cells: TableCellModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Pagination Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TablePaginationModel extends AngularDesignSystemModel {\n  isEnabled = true;\n  perPage = 10;\n  currentPage = 1;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Model\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableModel extends AngularDesignSystemModel {\n  id: string;\n  headerRows?: TableHeaderRowModel[] = [];\n  headers: TableHeaderModel[] = []; // deprecated and replaced with headerRows\n  rows: TableRowModel[] = [];\n  totalRows: number;\n  summary: string;\n  class?: string;\n  headerClass?: string;\n  pagination: TablePaginationModel = new TablePaginationModel({});\n  isLoading = false;\n  showTable = true;\n\n  // This will get set automatically, do not set this by hand\n  _rowHeaderIndex: number;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n\n    // Convert headers paramater to headerRows parameter and unset headers\n    if (this.headers.length && !this.headerRows.length) {\n      this.headerRows = [new TableHeaderRowModel({ cells: this.headers })];\n    }\n    // this.headers = null;\n\n    let rowHeaderIndex = 0;\n    for (const headerRow of this.headerRows) {\n      rowHeaderIndex = 0;\n      for (const header of headerRow.cells) {\n        if (header.isRowHeader) {\n          break;\n        }\n        rowHeaderIndex += header.colspan || 1;\n      }\n      if (rowHeaderIndex) {\n        break;\n      }\n    }\n    this._rowHeaderIndex = rowHeaderIndex;\n  }\n\n  toggleSort(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      for (const header of headerRow.cells) {\n        if (header.columnKey === columnKey) {\n          if (header.sort === TableHeaderSortEnum.NONE || header.sort === TableHeaderSortEnum.ASC) {\n            header.sort = TableHeaderSortEnum.DESC;\n          } else {\n            header.sort = TableHeaderSortEnum.ASC;\n          }\n        } else {\n          header.sort = TableHeaderSortEnum.NONE;\n        }\n      }\n    }\n  }\n\n  toggleSelectAll(columnKey: string, isChecked: boolean): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = isChecked;\n        });\n    }\n\n    // Set isChecked value in model for each related cell\n    for (const row of this.rows) {\n      for (const cell of row.cells) {\n        if (cell.columnKey === columnKey) {\n          cell.isChecked = isChecked;\n        }\n      }\n    }\n  }\n\n  unselectHeaderCheckbox(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = false;\n        });\n    }\n  }\n\n  public getSelectedCheckboxValues(columnKey: string): string[] {\n    const checkedValues: string[] = [];\n    for (const row of this.rows) {\n      for (const cell of row.cells.filter((currentCell) => currentCell.columnKey === columnKey)) {\n        if (cell.isChecked) {\n          checkedValues.push(cell.checkboxValue);\n        }\n      }\n    }\n    return checkedValues;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "any",
            "optional": true
          }
        ],
        "line": 126,
        "jsdoctags": [
          {
            "name": "options",
            "type": "any",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "currentPage",
          "defaultValue": "1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 126
        },
        {
          "name": "isEnabled",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 124
        },
        {
          "name": "perPage",
          "defaultValue": "10",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 125
        }
      ],
      "description": "<hr>\n<p>Table Pagination Models</p>\n<hr>\n",
      "rawdescription": "*********************\nTable Pagination Models\n*********************",
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "TableRowModel",
      "id": "class-TableRowModel-d521d938462032f98bc27ed57c6f34f6",
      "file": "src/app/modules/table2/table.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\nimport { PopoverModel } from '../popover/popover.model';\n\n/***********************\n * Table Header Models\n ***********************/\n\nexport enum TableHeaderTypeEnum {\n  DEFAULT = 'default',\n  SORT = 'sort',\n  CHECKBOX = 'checkbox',\n}\n\nexport enum TableHeaderSortEnum {\n  NONE = 'none',\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport class TableHeaderModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  type: TableHeaderTypeEnum = TableHeaderTypeEnum.DEFAULT;\n  cellClass = '';\n  class = '';\n  rowspan: number;\n  colspan: number;\n  isRowHeader = false;\n  headerWidth?: string;\n  modalText?: string;\n\n  // Sort Properties\n  sort?: TableHeaderSortEnum = TableHeaderSortEnum.NONE;\n\n  // Checkbox Properties\n  isChecked? = false;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\nexport enum TableCellTypeEnum {\n  DEFAULT = 'default',\n  BUTTON = 'button',\n  CHECKBOX = 'checkbox',\n  POPOVER = 'popover',\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableCellModel extends AngularDesignSystemModel {\n  columnKey: string;\n  label: string;\n  ariaLabel?: string;\n  type?: TableCellTypeEnum = TableCellTypeEnum.DEFAULT;\n  class? = '';\n  colspan: number;\n  modalText?: string;\n\n  // Icon Properties\n  icon?: IconDefinition;\n  iconClass? = '';\n\n  // Button Properties\n  buttonDisabled? = false;\n  buttonOnClick?: any;\n  buttonClass?: string;\n\n  // Checkbox Properties\n  checkboxValue: string;\n  isChecked? = false;\n\n  // Popover Properties\n  popoverModel: PopoverModel;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n\n  toggleCheckbox(isChecked) {\n    this.isChecked = isChecked;\n  }\n}\n\n/***********************\n * Table Row Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableHeaderRowModel extends AngularDesignSystemModel {\n  cells: TableHeaderModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableRowModel extends AngularDesignSystemModel {\n  cells: TableCellModel[] = [];\n  class: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Pagination Models\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TablePaginationModel extends AngularDesignSystemModel {\n  isEnabled = true;\n  perPage = 10;\n  currentPage = 1;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n\n/***********************\n * Table Model\n ***********************/\n\n// tslint:disable-next-line: max-classes-per-file\nexport class TableModel extends AngularDesignSystemModel {\n  id: string;\n  headerRows?: TableHeaderRowModel[] = [];\n  headers: TableHeaderModel[] = []; // deprecated and replaced with headerRows\n  rows: TableRowModel[] = [];\n  totalRows: number;\n  summary: string;\n  class?: string;\n  headerClass?: string;\n  pagination: TablePaginationModel = new TablePaginationModel({});\n  isLoading = false;\n  showTable = true;\n\n  // This will get set automatically, do not set this by hand\n  _rowHeaderIndex: number;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n\n    // Convert headers paramater to headerRows parameter and unset headers\n    if (this.headers.length && !this.headerRows.length) {\n      this.headerRows = [new TableHeaderRowModel({ cells: this.headers })];\n    }\n    // this.headers = null;\n\n    let rowHeaderIndex = 0;\n    for (const headerRow of this.headerRows) {\n      rowHeaderIndex = 0;\n      for (const header of headerRow.cells) {\n        if (header.isRowHeader) {\n          break;\n        }\n        rowHeaderIndex += header.colspan || 1;\n      }\n      if (rowHeaderIndex) {\n        break;\n      }\n    }\n    this._rowHeaderIndex = rowHeaderIndex;\n  }\n\n  toggleSort(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      for (const header of headerRow.cells) {\n        if (header.columnKey === columnKey) {\n          if (header.sort === TableHeaderSortEnum.NONE || header.sort === TableHeaderSortEnum.ASC) {\n            header.sort = TableHeaderSortEnum.DESC;\n          } else {\n            header.sort = TableHeaderSortEnum.ASC;\n          }\n        } else {\n          header.sort = TableHeaderSortEnum.NONE;\n        }\n      }\n    }\n  }\n\n  toggleSelectAll(columnKey: string, isChecked: boolean): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = isChecked;\n        });\n    }\n\n    // Set isChecked value in model for each related cell\n    for (const row of this.rows) {\n      for (const cell of row.cells) {\n        if (cell.columnKey === columnKey) {\n          cell.isChecked = isChecked;\n        }\n      }\n    }\n  }\n\n  unselectHeaderCheckbox(columnKey: string): void {\n    for (const headerRow of this.headerRows) {\n      headerRow.cells\n        .filter((header) => header.columnKey === columnKey)\n        .map((header) => {\n          header.isChecked = false;\n        });\n    }\n  }\n\n  public getSelectedCheckboxValues(columnKey: string): string[] {\n    const checkedValues: string[] = [];\n    for (const row of this.rows) {\n      for (const cell of row.cells.filter((currentCell) => currentCell.columnKey === columnKey)) {\n        if (cell.isChecked) {\n          checkedValues.push(cell.checkboxValue);\n        }\n      }\n    }\n    return checkedValues;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "any",
            "optional": true
          }
        ],
        "line": 110,
        "jsdoctags": [
          {
            "name": "options",
            "type": "any",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "cells",
          "defaultValue": "[]",
          "type": "TableCellModel[]",
          "optional": false,
          "description": "",
          "line": 109
        },
        {
          "name": "class",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 110
        }
      ],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "TabModel",
      "id": "class-TabModel-5ae722ed6b5fe78a26e817e0188d5ae7",
      "file": "src/app/modules/tabs/tabs.model.ts",
      "type": "class",
      "sourceCode": "export class TabModel {\n\n    title: string;\n    id?: string;\n    className?: string;\n    ariaLabel?: string;\n    dataAutoId?: string;\n    disabled?: boolean;\n    visible?: boolean;\n    selected?: boolean;\n    link?: string;\n\n    constructor() {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 11
      },
      "properties": [
        {
          "name": "ariaLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "className",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 5
        },
        {
          "name": "dataAutoId",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "disabled",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 8
        },
        {
          "name": "id",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "link",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "selected",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "visible",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 9
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "TooltipModel",
      "id": "class-TooltipModel-4acbd0ab910239120ab7ff5fa5551cf3",
      "file": "src/app/modules/tooltip/tooltip.models.ts",
      "type": "class",
      "sourceCode": "import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { AngularDesignSystemModel } from '../../models/angular-design-system.models';\n\nexport enum TooltipPlacementEnum {\n  AUTO = 'auto',\n  BOTTOM = 'bottom',\n  TOP = 'top',\n  RIGHT = 'right',\n  LEFT = 'left',\n}\n\nexport enum TooltipTriggerTypeEnum {\n  LINK = 'link',\n  BUTTON = 'button',\n}\n\nexport class TooltipModel extends AngularDesignSystemModel {\n  ariaLabel?: string;\n  id?: string;\n  inversed = false;\n  maxWidth?: number | 'none' = 'none';\n  offset?: number[];\n  placement: TooltipPlacementEnum = TooltipPlacementEnum.AUTO;\n  transitionDuration?: number;\n  triggerType: TooltipTriggerTypeEnum = TooltipTriggerTypeEnum.LINK;\n  triggerContent: string;\n  triggerIcon?: IconDefinition;\n  triggerClass?: string;\n  tooltipContent: string;\n\n  constructor(options?: any) {\n    super();\n    this.setOptions(options);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "options",
            "type": "any",
            "optional": true
          }
        ],
        "line": 29,
        "jsdoctags": [
          {
            "name": "options",
            "type": "any",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "ariaLabel",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 18
        },
        {
          "name": "id",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 19
        },
        {
          "name": "inversed",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "maxWidth",
          "defaultValue": "'none'",
          "type": "number | \"none\"",
          "optional": true,
          "description": "",
          "line": 21
        },
        {
          "name": "offset",
          "type": "number[]",
          "optional": true,
          "description": "",
          "line": 22
        },
        {
          "name": "placement",
          "defaultValue": "TooltipPlacementEnum.AUTO",
          "type": "TooltipPlacementEnum",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "tooltipContent",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "transitionDuration",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 24
        },
        {
          "name": "triggerClass",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 28
        },
        {
          "name": "triggerContent",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "triggerIcon",
          "type": "IconDefinition",
          "optional": true,
          "description": "",
          "line": 27
        },
        {
          "name": "triggerType",
          "defaultValue": "TooltipTriggerTypeEnum.LINK",
          "type": "TooltipTriggerTypeEnum",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methods": [
        {
          "name": "setOptions",
          "args": [
            {
              "name": "options",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 3,
          "jsdoctags": [
            {
              "name": "options",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AngularDesignSystemModel"
          }
        }
      ],
      "indexSignatures": [],
      "extends": "AngularDesignSystemModel",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    }
  ],
  "directives": [
    {
      "name": "ClickOutsideDirective",
      "id": "directive-ClickOutsideDirective-580b26b94e5c903463e6c4f245c10f20",
      "file": "src/app/modules/chip-filter/click-outside.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode": "import {Directive, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n  constructor(private _elementRef: ElementRef) {\n  }\n\n  @Output()\n  public clickOutside = new EventEmitter<MouseEvent>();\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.clickOutside.emit(event);\n    }\n  }\n}\n",
      "selector": "[clickOutside]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "clickOutside",
          "defaultValue": "new EventEmitter<MouseEvent>()",
          "line": 12,
          "type": "EventEmitter"
        }
      ],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "document:click",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent"
            },
            {
              "name": "targetElement",
              "type": "HTMLElement"
            }
          ],
          "argsDecorator": ["$event", "$event.target"],
          "line": 15
        }
      ],
      "propertiesClass": [],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "_elementRef",
            "type": "ElementRef"
          }
        ],
        "line": 7,
        "jsdoctags": [
          {
            "name": "_elementRef",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "FileUploadDragDropDirective",
      "id": "directive-FileUploadDragDropDirective-9b4cfdca8c6749b7d5530d1921ac17a8",
      "file": "src/app/directives/file-upload-drag-drop.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode": "import { Directive, Output, EventEmitter, HostBinding, HostListener, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appFileUploadDragDrop]'\n})\nexport class FileUploadDragDropDirective implements OnInit {\n\n  constructor() { }\n\n  @Input() fileUploadDragDropClassName: string;\n  @Input() fileUploadDragDropClassNameActive: string;\n  @Output() onFileDropped = new EventEmitter<any>();\n\n  classOriginal: string;\n  @HostBinding('class') @Input() class: string ;\n\n  ngOnInit() {\n    this.classOriginal = this.class;\n    this.class = `${this.classOriginal} ${this.fileUploadDragDropClassName}`;\n  }\n\n  // Dragover listener\n  @HostListener('dragover', ['$event']) onDragOver(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.class = `${this.classOriginal} ${this.fileUploadDragDropClassNameActive}`;\n  }\n\n  // Dragleave listener\n  @HostListener('dragleave', ['$event']) public onDragLeave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.class = `${this.classOriginal} ${this.fileUploadDragDropClassName}`;\n  }\n\n  // Drop listener\n  @HostListener('drop', ['$event']) public ondrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.class = `${this.classOriginal} ${this.fileUploadDragDropClassName}`;\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      this.onFileDropped.emit(files);\n    }\n  }\n\n}\n",
      "selector": "[appFileUploadDragDrop]",
      "providers": [],
      "inputsClass": [
        {
          "name": "class",
          "line": 15,
          "type": "string"
        },
        {
          "name": "fileUploadDragDropClassName",
          "line": 10,
          "type": "string"
        },
        {
          "name": "fileUploadDragDropClassNameActive",
          "line": 11,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onFileDropped",
          "defaultValue": "new EventEmitter<any>()",
          "line": 12,
          "type": "EventEmitter"
        }
      ],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "dragleave",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 30
        },
        {
          "name": "dragover",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 23
        },
        {
          "name": "drop",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 37
        }
      ],
      "propertiesClass": [
        {
          "name": "classOriginal",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        }
      ],
      "implements": ["OnInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 6
      }
    }
  ],
  "components": [
    {
      "name": "AlertComponent",
      "id": "component-AlertComponent-697a0e2de64bb6490cd5a66b85694300",
      "file": "src/app/modules/alert/alert.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-alert",
      "styleUrls": ["./alert.component.css"],
      "styles": [],
      "templateUrl": ["./alert.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dataAutoId",
          "line": 13,
          "type": "string"
        },
        {
          "name": "heading",
          "line": 10,
          "type": "string"
        },
        {
          "name": "hideClose",
          "defaultValue": "false",
          "line": 12
        },
        {
          "name": "hideIcon",
          "defaultValue": "false",
          "line": 11
        },
        {
          "name": "variation",
          "line": 9,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "hide",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent {\n    @Input() variation: string;\n    @Input() heading: string;\n    @Input() hideIcon = false;\n    @Input() hideClose = false;\n    @Input() dataAutoId: string;\n\n    hide: boolean;\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".ds-c-alert.ds-c-alert--close {\n    background-position: 16px 40px;\n}\n\n.close {\n    text-align: right;\n}",
          "styleUrl": "./alert.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<div\n  *ngIf=\"!hide\"\n  class=\"ds-c-alert ds-c-alert--{{ variation }} ds-c-alert--{{\n    hideIcon ? 'hide-icon' : null\n  }} ds-c-alert--{{ hideClose ? 'hide-close' : 'close' }}\"\n  attr.data-auto-id=\"{{ dataAutoId }}\"\n>\n  <div class=\"close\">\n    <button\n      *ngIf=\"!hideClose\"\n      (click)=\"hide = true\"\n      class=\"ds-c-button ds-c-button--transparent ds-c-dialog__close\"\n    >\n      Close\n    </button>\n  </div>\n  <div class=\"ds-c-alert__body\">\n    <div class=\"ds-c-alert__heading\" *ngIf=\"heading\">\n      {{heading}}\n    </div>\n    <div class=\"ds-c-alert__text\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "AppAccordionComponent",
      "id": "component-AppAccordionComponent-16362cdbd649113e9723dcced5bfa3c1",
      "file": "src/app/modules/accordion/accordion.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-accordion",
      "styleUrls": ["./accordion.component.css"],
      "styles": [],
      "templateUrl": ["./accordion.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "panels",
          "type": "QueryList<AppPanelComponent>",
          "optional": false,
          "description": "",
          "line": 12,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "AppPanelComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "grabDomPanels",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14
        },
        {
          "name": "ngDoCheck",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        },
        {
          "name": "panelStateChange",
          "args": [
            {
              "name": "panel",
              "type": "AppPanelComponent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "panel",
              "type": "AppPanelComponent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, AfterContentInit, ContentChildren, QueryList, DoCheck } from '@angular/core';\nimport { AppPanelComponent } from '../panel/panel.component';\n\n@Component({\n    selector: 'app-accordion',\n    templateUrl: './accordion.component.html',\n    styleUrls: ['./accordion.component.css']\n})\n\nexport class AppAccordionComponent implements AfterContentInit, DoCheck {\n\n    @ContentChildren(AppPanelComponent) panels: QueryList<AppPanelComponent>;\n\n    ngAfterContentInit() {\n        this.grabDomPanels();\n    }\n\n    ngDoCheck() {\n        this.grabDomPanels();\n    }\n\n    grabDomPanels() {\n        if (this.panels) {\n            this.panels.toArray().forEach(panel => {\n                panel.panelClick.subscribe(() => {\n                    this.panelStateChange(panel);\n                });\n            });\n        } else {\n            return;\n        }\n    }\n\n    panelStateChange(panel: AppPanelComponent) {\n        this.panels.toArray().forEach ( p => {\n            if (p !== panel) {\n                p.expand = false;\n            }\n        });\n    }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./accordion.component.css"
        }
      ],
      "stylesData": "",
      "implements": ["AfterContentInit", "DoCheck"],
      "templateData": "<ng-content></ng-content>"
    },
    {
      "name": "AppButtonComponent",
      "id": "component-AppButtonComponent-f8a4b626daaa5e7e7aff4dc341a1b90f",
      "file": "src/app/modules/button/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-button",
      "styleUrls": ["./button.component.css"],
      "styles": [],
      "templateUrl": ["./button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "line": 10,
          "type": "string"
        },
        {
          "name": "ariaSort",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "buttonID",
          "line": 12,
          "type": "string"
        },
        {
          "name": "buttonType",
          "line": 11,
          "type": "string"
        },
        {
          "name": "dataAutoId",
          "line": 14,
          "type": "string"
        },
        {
          "name": "disabled",
          "line": 15,
          "type": "boolean"
        },
        {
          "name": "tabLevel",
          "defaultValue": "\"0\"",
          "line": 16,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "callBack",
          "defaultValue": "new EventEmitter<any>()",
          "line": 17,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "state",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [
        {
          "name": "callBackFunction",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\n\nexport class AppButtonComponent {\n    @Input() ariaLabel: string;\n    @Input() buttonType: string;\n    @Input() buttonID: string;\n    @Input() ariaSort: boolean;\n    @Input() dataAutoId: string;\n    @Input() disabled: boolean;\n    @Input() tabLevel: string = \"0\";\n    @Output() callBack = new EventEmitter<any>();\n\n    state = false;\n\n    callBackFunction(e) {\n        if (!this.disabled) {\n            this.state = !this.state;\n            if (e.key && e.key === 'Enter') { e = false; }\n    \n            if (e) {\n                this.callBack.emit(e);\n            }    \n        }\n    }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./button.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<button\n    type=\"button\"\n    id=\"{{buttonID}}\"\n    (click)=\"callBackFunction($event)\" \n    (keyup.enter)=\"callBackFunction($event)\" \n    attr.aria-label=\"{{ ariaLabel }}\"\n    attr.aria-sort=\"{{ ariaSort }}\"\n    class=\"ds-c-button pointer\"\n    [ngClass]=\"buttonType\"\n    [disabled]=\"disabled\"\n    attr.data-auto-id=\"{{dataAutoId}}\"\n    tabindex=\"{{tabLevel}}\">\n        <ng-content></ng-content>\n</button>"
    },
    {
      "name": "AppCardClusterComponent",
      "id": "component-AppCardClusterComponent-a48fca007b5a680d5c7a996f64980766",
      "file": "src/app/modules/card-cluster/card-cluster.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-card-cluster",
      "styleUrls": ["./card-cluster.component.css"],
      "styles": [],
      "templateUrl": ["./card-cluster.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "buttonClicked",
          "defaultValue": "'CardCluster0'",
          "line": 13
        },
        {
          "name": "cardArray",
          "line": 10,
          "type": "CardClusterModel"
        },
        {
          "name": "dataAutoId",
          "line": 14,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "passButton",
          "defaultValue": "new EventEmitter<any>()",
          "line": 15,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "mainCardWidth",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "numArray",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "numArray1",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "total",
          "defaultValue": "null",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31
        },
        {
          "name": "passAction",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "resize",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 99
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CardClusterModel } from './card-cluster.models';\n\n@Component({\n  selector: 'app-card-cluster',\n  templateUrl: './card-cluster.component.html',\n  styleUrls: ['./card-cluster.component.css'],\n})\nexport class AppCardClusterComponent implements OnInit {\n  @Input() cardArray: CardClusterModel;\n\n  // The following inputs have been deprecated and moved into the CardClusterModel object\n  @Input() buttonClicked = 'CardCluster0'; // DEPRECATED\n  @Input() dataAutoId: string; // DEPRECATED\n  @Output() passButton = new EventEmitter<any>();\n\n  numArray1 = [];\n  numArray = [];\n  total: string = null;\n  mainCardWidth: number;\n\n  constructor() {}\n\n  passAction(e) {\n    if (!e.target.classList.contains('disabled')) {\n      this.passButton.emit(e);\n      this.cardArray.buttonClicked = e.target.id;\n    }\n  }\n\n  ngOnInit() {\n    if (!this.cardArray) {\n      this.cardArray = new CardClusterModel();\n    }\n\n    // TODO: remove this code once this.buttonClicked is fully removed\n    if (this.buttonClicked) {\n      if (!this.cardArray.buttonClicked) {\n        this.cardArray.buttonClicked = this.buttonClicked;\n      }\n      this.buttonClicked = null;\n    }\n\n    // TODO: remove this code once this.dataAutoId is fully removed\n    if (this.dataAutoId) {\n      if (!this.cardArray.dataAutoId) {\n        this.cardArray.dataAutoId = this.dataAutoId;\n      }\n      this.dataAutoId = null;\n    }\n\n    // determine width of main card\n    // the main card will display as full width if there are no other cards, otherwise it will be 3 columns wide\n    if (this.cardArray.cluster.length === 0) {\n      this.mainCardWidth = 12;\n    } else {\n      this.mainCardWidth = 4;\n    }\n\n    // Main card total\n    let cardsTotal: string | number = null;\n    if (this.cardArray.total !== null && this.cardArray.total !== undefined) {\n      cardsTotal = this.cardArray.total;\n    } else {\n      this.cardArray.cluster.map((card) => {\n        if ((card.value || card.value === 0) && typeof card.value === 'number') {\n          // if CardsTotal is not set, but numbers exist as values in the clusters,\n          // change cardsTotal to 0 so that it can be used as a running total\n          if (cardsTotal === null) {\n            cardsTotal = 0;\n          }\n          if (typeof cardsTotal === 'number') {\n            cardsTotal += card.value;\n          }\n        }\n      });\n    }\n\n    // Convert the total value to a string because angular ignores the numerical value of 0\n    if (cardsTotal !== null) {\n      this.total = cardsTotal.toString();\n    }\n\n    // If the amount of items per row is sent into the component, set the defaults\n    if (!this.cardArray.rowMaxItems) {\n      // if there are more than 8 mini-cards in the cluster, show 4 items per row\n      if (this.cardArray.cluster.length > 8) {\n        this.cardArray.rowMaxItems = 4;\n\n        // If there are less than 8 mini-cards in the cluster, split the cluster evenly between two rows\n        // If there is an odd number of mini-cards, show the extra card on the top row\n      } else {\n        this.cardArray.rowMaxItems = Math.ceil(this.cardArray.cluster.length / 2);\n      }\n    }\n    this.resize();\n  }\n\n  resize() {\n    setTimeout(() => {\n      // Iterate through all cards to find the maximum height\n      const cards: any = document.getElementsByClassName('cardHeight');\n      let maxHeight = 0;\n      for (const card of cards) {\n        // reset height\n        card.setAttribute('style', `height: auto;`);\n        // check height of card after it has been reset and store the value of the tallest card in the cluster\n        const elementHeight = card.offsetHeight;\n        if (elementHeight > maxHeight) {\n          maxHeight = elementHeight;\n        }\n      }\n\n      // Iterate through all cards again to set a consistent height based on the maximum height of the cards\n      for (const card of cards) {\n        card.setAttribute('style', `height: ${maxHeight.toString()}px;`);\n      }\n\n      const graphContainer = window.innerWidth;\n      if (this.cardArray.mainCard && this.cardArray.cluster.length && graphContainer >= 1024) {\n        const followHeight = document.getElementById('followCard').clientHeight - 86;\n        document\n          .querySelector('#CardCluster0 .cardClusterContent')\n          .setAttribute('style', `height: ${followHeight.toString()}px;`);\n      } else if (this.cardArray.mainCard && graphContainer < 1024) {\n        document.querySelector('#CardCluster0 .cardClusterContent').setAttribute('style', 'height: auto;');\n      }\n    }, this.cardArray?.resizeTimeout || 250);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".noPoint {\n    pointer-events: none;\n}\n\n.card {\n    border-top: 4px solid #009ec8;\n    padding-top: 4px;\n    box-shadow: 0px 4px 6px #F1F1F1;\n    transition: all 200ms cubic-bezier(.25,.8,.25,1);\n}\n\n.card.active {\n    padding-top: 0;\n    border-top: 8px solid #4C2C92 !important;\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.16), 0 10px 10px rgba(0, 0, 0, 0.23);\n}\n\n.card:hover:not(.active) {\n    border-top: 4px solid #006a86;\n    box-shadow: 0px 4px 9px #d9d9d9;\n}\n\n.card.disabled,\n.card.disabled:hover {\n    border-top-color: #aeb0b5;\n    color: #aeb0b5;\n}\n\n.cardHeight {\n    box-sizing: border-box;\n}\n\n.ds-text {\n    margin-top: 0;\n}\n\n.cardClusterContent {\n    padding-top: 4px;\n    pointer-events: none;\n    transition: all 200ms cubic-bezier(.25,.8,.25,1);\n}\n\n.active .cardClusterContent {\n    padding-top: 0;\n}\n\n@media only screen and (max-width: 768px) {\n    .padding-L-0 {\n        padding-left: 0;\n    }\n}",
          "styleUrl": "./card-cluster.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 20
      },
      "implements": ["OnInit"],
      "templateData": "<div\n  id=\"cardClusterComponent\"\n  attr.data-auto-id=\"{{ cardArray.dataAutoId }}\"\n  class=\"ds-l-row ds-u-justify-content--center ds-u-align-items--center ds-u-padding--1\"\n  (window:resize)=\"resize()\"\n  (window:load)=\"resize()\"\n>\n  <div *ngIf=\"cardArray.mainCard\" class=\"ds-l-lg-col--{{ mainCardWidth }} ds-l-md-col--12 ds-l-sm-col--12\">\n    <div\n      id=\"CardCluster0\"\n      [ngClass]=\"cardArray.buttonClicked === 'CardCluster0' ? 'active' : null\"\n      class=\"ds-u-margin-bottom--2 no-Margin-Bottom pointer card ds-u-padding-top--4 ds-u-padding-bottom--4 ds-u-padding-x--2\"\n      [attr.aria-label]=\"cardArray.ariaLabel || cardArray.mainTitle\"\n      (click)=\"passAction($event)\"\n      (keyup.enter)=\"passAction($event)\"\n      role=\"button\"\n      tabindex=\"0\"\n    >\n      <div class=\"cardClusterContent ds-l-row\">\n        <div *ngIf=\"cardArray.showRadioButton\" class=\"ds-l-col--auto ds-u-padding-right--0\">\n          <app-choice\n            index=\"0\"\n            inputType=\"radio\"\n            size=\"small\"\n            [value]=\"cardArray.mainTitle\"\n            groupName=\"cardClusterCheckbox\"\n            [isChecked]=\"cardArray.buttonClicked === 'CardCluster0'\"\n            [showTitle]=\"false\"\n            tabIndex=\"-1\"\n          >\n          </app-choice>\n        </div>\n        <div class=\"ds-l-col\" [ngClass]=\"{ 'ds-u-padding-left--0': cardArray.showRadioButton }\">\n          <div class=\"ds-u-font-size--h1 ds-u-color--black noPoint\">\n            <fa-icon [icon]=\"cardArray.mainTitleIcon\" *ngIf=\"cardArray.mainTitleIcon\"></fa-icon>\n            {{ cardArray.mainTitle || '&nbsp;' }}\n          </div>\n          <div class=\"ds-u-font-size--h2 ds-u-color--black ds-u-font-weight--bold noPoint\">\n            {{ total === undefined || total === '' ? '&nbsp;' : total }}\n          </div>\n          <div class=\"ds-u-font-size--h3 ds-u-color--black noPoint\">\n            {{ cardArray.mainSub || '&nbsp;' }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"cardArray.cluster.length\"\n    [ngClass]=\"cardArray.mainCard ? 'ds-l-lg-col--8' : 'ds-l-lg-col--12'\"\n    class=\"ds-l-md-col--12 ds-l-sm-col--12\"\n    id=\"followCard\"\n  >\n    <div class=\"ds-l-row\">\n      <ng-container *ngFor=\"let card of cardArray.cluster; let x = index\">\n        <div class=\"ds-l-col\" [ngClass]=\"(x + 1) % 2 === 0 ? 'padding-L-0' : ''\">\n          <div\n            id=\"{{ 'CardCluster' + (x + 1) }}\"\n            [ngClass]=\"{ active: cardArray.buttonClicked === 'CardCluster' + (x + 1), disabled: card.disabled }\"\n            class=\"{{ 'pointer card cardHeight ds-u-padding--1 ds-u-margin-bottom--2 ' + card.classButton }}\"\n            (click)=\"passAction($event)\"\n            (keyup.enter)=\"passAction($event)\"\n            role=\"button\"\n            [attr.tabindex]=\"card.disabled ? null : 0\"\n            [attr.aria-label]=\"card.ariaLabel || card.name\"\n          >\n            <div class=\"cardClusterContent ds-l-row ds-u-margin-x--0\">\n              <div *ngIf=\"cardArray.showRadioButton\" class=\"ds-l-col--auto ds-u-padding-x--0\">\n                <app-choice\n                  [index]=\"x\"\n                  inputType=\"radio\"\n                  size=\"small\"\n                  [value]=\"card.name\"\n                  groupName=\"cardClusterCheckbox\"\n                  [isChecked]=\"cardArray.buttonClicked === 'CardCluster' + (x + 1)\"\n                  [showTitle]=\"true\"\n                  [label]=\"card.ariaLabel\"\n                  [ariaLabel]=\"card.ariaLabel\"\n                  [labelTextClass]=\"'sr-only'\"\n                  [disabled]=\"card.disabled\"\n                  tabIndex=\"-1\"\n                >\n                </app-choice>\n              </div>\n              <div class=\"ds-l-col\" [ngClass]=\"{ 'ds-u-padding-x--0': cardArray.showRadioButton }\">\n                <div class=\"ds-u-font-size--h3 ds-u-font-weight--bold noPoint\" [ngClass]=\"card.classValue\">\n                  <fa-icon [icon]=\"card.valueIcon\" *ngIf=\"card.valueIcon\"></fa-icon>\n                  {{ card.value === undefined || card.value === '' ? '&nbsp;' : card.value }}\n                </div>\n                <div class=\"ds-text noPoint\" [ngClass]=\"card.className\">\n                  <fa-icon [icon]=\"card.nameIcon\" *ngIf=\"card.nameIcon\"></fa-icon>\n                  {{ !card.name ? '&nbsp;' : card.name }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"ds-l-col--12 ds-u-display--none ds-u-lg-display--block\"\n          *ngIf=\"(x + 1) % cardArray.rowMaxItems == 0\"\n        ></div>\n        <div class=\"ds-l-col--12 ds-u-display--block ds-u-lg-display--none\" *ngIf=\"(x + 1) % 2 == 0\"></div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "AppChipFilterComponent",
      "id": "component-AppChipFilterComponent-6df3a3071cddf5ea8e4652ff4dc2e589",
      "file": "src/app/modules/chip-filter/chip-filter.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "DROPDOWN_CONTROL_VALUE_ACCESSOR"
        }
      ],
      "selector": "app-chip-filter",
      "styleUrls": ["./chip-filter.component.scss"],
      "styles": [],
      "templateUrl": ["./chip-filter.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "data",
          "defaultValue": "[]",
          "line": 81,
          "type": "ListItem[]"
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "line": 77
        },
        {
          "name": "loading",
          "defaultValue": "false",
          "line": 83
        },
        {
          "name": "settings",
          "line": 79,
          "type": "IDropdownSettings"
        }
      ],
      "outputsClass": [
        {
          "name": "onDeSelect",
          "defaultValue": "new EventEmitter<any>()",
          "line": 95,
          "type": "EventEmitter<ListItem>"
        },
        {
          "name": "onDeSelectAll",
          "defaultValue": "new EventEmitter<any[]>()",
          "line": 101,
          "type": "EventEmitter<ListItem[]>"
        },
        {
          "name": "onDropDownClose",
          "defaultValue": "new EventEmitter<any>()",
          "line": 89,
          "type": "EventEmitter<ListItem>"
        },
        {
          "name": "onFilterChange",
          "defaultValue": "new EventEmitter<any>()",
          "line": 86,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onScrolledToBottom",
          "defaultValue": "new EventEmitter<boolean>()",
          "line": 104,
          "type": "EventEmitter<boolean>"
        },
        {
          "name": "onSelect",
          "defaultValue": "new EventEmitter<any>()",
          "line": 92,
          "type": "EventEmitter<ListItem>"
        },
        {
          "name": "onSelectAll",
          "defaultValue": "new EventEmitter<any[]>()",
          "line": 98,
          "type": "EventEmitter<ListItem[]>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_sourceDataFields",
          "defaultValue": "[]",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [114]
        },
        {
          "name": "_sourceDataType",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 39,
          "modifierKind": [114]
        },
        {
          "name": "defaultSettings",
          "defaultValue": "{\n    singleSelection: false,\n    idField: 'id',\n    textField: 'text',\n    disabledField: 'isDisabled',\n    enableCheckAll: true,\n    selectAllText: 'Select All Providers',\n    unSelectAllText: 'UnSelect All Providers',\n    allowSearchFilter: false,\n    error: null,\n    limitSelection: -1,\n    clearSearchFilter: true,\n    maxHeight: 197,\n    itemsShowLimit: 999999999999,\n    searchPlaceholderText: 'Search',\n    noDataAvailablePlaceholderText: 'No data available',\n    closeDropDownOnSelection: false,\n    showSelectedItemsAtTop: false,\n    defaultOpen: false,\n    allowRemoteDataSearch: false,\n    hintMessage: null,\n    errorMessage: null,\n    labelName: null,\n    placeholder: 'Select',\n    searchPlaceholder: 'Search',\n  }",
          "type": "IDropdownSettings",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [114]
        },
        {
          "name": "filter",
          "type": "ListItem",
          "optional": false,
          "description": "",
          "line": 43,
          "modifierKind": [114]
        },
        {
          "name": "icon",
          "defaultValue": "faTimes",
          "type": "",
          "optional": false,
          "description": "",
          "line": 42,
          "modifierKind": [114]
        },
        {
          "name": "onChangeCallback",
          "defaultValue": "noop",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "onTouchedCallback",
          "defaultValue": "noop",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "searchFilter",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 75,
          "modifierKind": [114]
        },
        {
          "name": "searchQueryChanged",
          "defaultValue": "new Subject<string>()",
          "type": "Subject<string>",
          "optional": false,
          "description": "",
          "line": 74,
          "modifierKind": [112]
        },
        {
          "name": "selectedItems",
          "defaultValue": "[]",
          "type": "ListItem[]",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "addSelected",
          "args": [
            {
              "name": "item",
              "type": "ListItem"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 279,
          "jsdoctags": [
            {
              "name": "item",
              "type": "ListItem",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "closeDropdown",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 342
        },
        {
          "name": "emittedValue",
          "args": [
            {
              "name": "val",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 300,
          "jsdoctags": [
            {
              "name": "val",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFields",
          "args": [
            {
              "name": "inputData",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 370,
          "jsdoctags": [
            {
              "name": "inputData",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isAllItemsSelected",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 260
        },
        {
          "name": "isLimitSelectionReached",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 256
        },
        {
          "name": "isSelected",
          "args": [
            {
              "name": "clickedItem",
              "type": "ListItem"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 246,
          "jsdoctags": [
            {
              "name": "clickedItem",
              "type": "ListItem",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "itemShowRemaining",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 275
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 125,
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 119
        },
        {
          "name": "objectify",
          "args": [
            {
              "name": "val",
              "type": "ListItem"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 314,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "val",
              "type": "ListItem",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onFilterTextChange",
          "args": [
            {
              "name": "$event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 157,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onItemClick",
          "args": [
            {
              "name": "$event",
              "type": "any"
            },
            {
              "name": "item",
              "type": "ListItem"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 162,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "item",
              "type": "ListItem",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 226,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 231,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "removeSelected",
          "args": [
            {
              "name": "itemSel",
              "type": "ListItem"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 290,
          "jsdoctags": [
            {
              "name": "itemSel",
              "type": "ListItem",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setComponent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 129
        },
        {
          "name": "setData",
          "args": [
            {
              "name": "value",
              "type": "any[]"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 134,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any[]",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setSettings",
          "args": [
            {
              "name": "value",
              "type": "IDropdownSettings"
            }
          ],
          "optional": false,
          "returnType": "IDropdownSettings",
          "typeParameters": [],
          "line": 149,
          "jsdoctags": [
            {
              "name": "value",
              "type": "IDropdownSettings",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleDropdown",
          "args": [
            {
              "name": "evt",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 331,
          "jsdoctags": [
            {
              "name": "evt",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleSelectAll",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 352
        },
        {
          "name": "trackByFn",
          "args": [
            {
              "name": "index",
              "type": ""
            },
            {
              "name": "item",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 242,
          "jsdoctags": [
            {
              "name": "index",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "item",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 184,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "blur",
          "args": [],
          "argsDecorator": [],
          "line": 237
        },
        {
          "name": "scroll",
          "args": [
            {
              "name": "event",
              "type": "any"
            }
          ],
          "argsDecorator": ["$event"],
          "line": 107
        }
      ],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  HostListener,\n  forwardRef,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ListItem, IDropdownSettings } from './chip-filter.model';\nimport { ChipFilterPipe } from './chip-filter.pipe';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nexport const DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AppChipFilterComponent),\n  multi: true,\n};\n\nconst noop = () => {};\n\n@Component({\n  selector: 'app-chip-filter',\n  templateUrl: './chip-filter.component.html',\n  styleUrls: ['./chip-filter.component.scss'],\n  providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AppChipFilterComponent implements ControlValueAccessor, OnInit, OnChanges {\n  public _sourceDataType = null;\n  public _sourceDataFields: string[] = [];\n  public selectedItems: ListItem[] = [];\n  public icon = faTimes;\n  public filter: ListItem;\n  public defaultSettings: IDropdownSettings = {\n    singleSelection: false,\n    idField: 'id',\n    textField: 'text',\n    disabledField: 'isDisabled',\n    enableCheckAll: true,\n    selectAllText: 'Select All Providers',\n    unSelectAllText: 'UnSelect All Providers',\n    allowSearchFilter: false,\n    error: null,\n    limitSelection: -1,\n    clearSearchFilter: true,\n    maxHeight: 197,\n    itemsShowLimit: 999999999999,\n    searchPlaceholderText: 'Search',\n    noDataAvailablePlaceholderText: 'No data available',\n    closeDropDownOnSelection: false,\n    showSelectedItemsAtTop: false,\n    defaultOpen: false,\n    allowRemoteDataSearch: false,\n    hintMessage: null,\n    errorMessage: null,\n    labelName: null,\n    placeholder: 'Select',\n    searchPlaceholder: 'Search',\n  };\n\n  onTouchedCallback: () => void = noop;\n  onChangeCallback: (_: any) => void = noop;\n\n  private searchQueryChanged: Subject<string> = new Subject<string>();\n  public searchFilter: string;\n\n  @Input() disabled = false;\n\n  @Input() settings: IDropdownSettings;\n\n  @Input() data: ListItem[] = [];\n\n  @Input() loading = false;\n\n  @Output('onFilterChange')\n  onFilterChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output('onDropDownClose')\n  onDropDownClose: EventEmitter<ListItem> = new EventEmitter<any>();\n\n  @Output('onSelect')\n  onSelect: EventEmitter<ListItem> = new EventEmitter<any>();\n\n  @Output('onDeSelect')\n  onDeSelect: EventEmitter<ListItem> = new EventEmitter<any>();\n\n  @Output('onSelectAll')\n  onSelectAll: EventEmitter<ListItem[]> = new EventEmitter<any[]>();\n\n  @Output('onDeSelectAll')\n  onDeSelectAll: EventEmitter<ListItem[]> = new EventEmitter<any[]>();\n\n  @Output('onScrolledToBottom')\n  onScrolledToBottom: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @HostListener('scroll', ['$event'])\n  onScroll(event: any) {\n    if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight) {\n      this.onScrolledToBottom.emit(true);\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private listFilterPipe: ChipFilterPipe) {\n    this.searchQueryChanged.pipe(debounceTime(1000), distinctUntilChanged()).subscribe((data) => {\n      this.onFilterChange.emit(data);\n    });\n  }\n\n  ngOnInit() {\n    this.settings = this.setSettings(this.settings);\n    this.setData(this.data);\n    this.filter = new ListItem(this.data);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.setComponent();\n  }\n\n  setComponent(): void {\n    this.settings = this.setSettings(this.settings);\n    this.setData(this.data);\n  }\n\n  setData(value: any[]): void {\n    const firstItem = value[0];\n    this._sourceDataType = typeof firstItem;\n    this._sourceDataFields = this.getFields(firstItem);\n    value.map((item: any) =>\n      typeof item === 'string' || typeof item === 'number'\n        ? new ListItem(item)\n        : new ListItem({\n            id: item[this.settings.idField],\n            text: item[this.settings.textField],\n            isDisabled: item[this.settings.disabledField],\n          })\n    );\n  }\n\n  setSettings(value: IDropdownSettings): IDropdownSettings {\n    if (value) {\n      return Object.assign(this.defaultSettings, value);\n    } else {\n      return Object.assign(this.defaultSettings);\n    }\n  }\n\n  onFilterTextChange($event) {\n    this.searchFilter = $event;\n    this.searchQueryChanged.next($event);\n  }\n\n  onItemClick($event: any, item: ListItem) {\n    if (this.disabled || item.isDisabled) {\n      return false;\n    }\n\n    const found = this.isSelected(item);\n    // tslint:disable-next-line:max-line-length\n    const allowAdd =\n      this.settings.limitSelection === -1 ||\n      (this.settings.limitSelection > 0 && this.selectedItems.length < this.settings.limitSelection);\n    if (!found) {\n      if (allowAdd) {\n        this.addSelected(item);\n      }\n    } else {\n      this.removeSelected(item);\n    }\n    if (this.settings.singleSelection && this.settings.closeDropDownOnSelection) {\n      this.closeDropdown();\n    }\n  }\n\n  writeValue(value: any) {\n    if (value !== undefined && value !== null && value.length > 0) {\n      if (this.settings.singleSelection) {\n        try {\n          if (value.length >= 1) {\n            const firstItem = value[0];\n            this.selectedItems = [\n              typeof firstItem === 'string' || typeof firstItem === 'number'\n                ? new ListItem(firstItem)\n                : new ListItem({\n                    id: firstItem[this.settings.idField],\n                    text: firstItem[this.settings.textField],\n                    isDisabled: firstItem[this.settings.disabledField],\n                  }),\n            ];\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        const data = value.map((item: any) =>\n          typeof item === 'string' || typeof item === 'number'\n            ? new ListItem(item)\n            : new ListItem({\n                id: item[this.settings.idField],\n                text: item[this.settings.textField],\n                isDisabled: item[this.settings.disabledField],\n              })\n        );\n        if (this.settings.limitSelection > 0) {\n          this.selectedItems = data.splice(0, this.settings.limitSelection);\n        } else {\n          this.selectedItems = data;\n        }\n      }\n    } else {\n      this.selectedItems = [];\n    }\n    this.onChangeCallback(value);\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  // Set touched on blur\n  @HostListener('blur')\n  public onTouched() {\n    this.closeDropdown();\n    this.onTouchedCallback();\n  }\n\n  trackByFn(index, item) {\n    return item.id;\n  }\n\n  isSelected(clickedItem: ListItem) {\n    let found = false;\n    this.selectedItems.forEach((item) => {\n      if (clickedItem.id === item.id) {\n        found = true;\n      }\n    });\n    return found;\n  }\n\n  isLimitSelectionReached(): boolean {\n    return this.settings.limitSelection === this.selectedItems.length;\n  }\n\n  isAllItemsSelected(): boolean {\n    // All items cannot be selected if items are being filtered\n    if (this.searchFilter) {\n      return false;\n    }\n    // get disabld item count\n    const filteredItems = this.listFilterPipe.transform(this.data, this.filter);\n    const itemDisabledCount = filteredItems.filter((item) => item.isDisabled).length;\n    // take disabled items into consideration when checking\n    if ((!this.data || this.data.length === 0) && this.settings.allowRemoteDataSearch) {\n      return false;\n    }\n    return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n  }\n\n  itemShowRemaining(): number {\n    return this.selectedItems.length - this.settings.itemsShowLimit;\n  }\n\n  addSelected(item: ListItem) {\n    if (this.settings.singleSelection) {\n      this.selectedItems = [];\n      this.selectedItems.push(item);\n    } else {\n      this.selectedItems.push(item);\n    }\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n    this.onSelect.emit(this.emittedValue(item));\n  }\n\n  removeSelected(itemSel: ListItem) {\n    this.selectedItems.forEach((item) => {\n      if (itemSel.id === item.id) {\n        this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n      }\n    });\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n    this.onDeSelect.emit(this.emittedValue(itemSel));\n  }\n\n  emittedValue(val: any): any {\n    const selected = [];\n    if (Array.isArray(val)) {\n      val.map((item) => {\n        selected.push(this.objectify(item));\n      });\n    } else {\n      if (val) {\n        return this.objectify(val);\n      }\n    }\n    return selected;\n  }\n\n  private objectify(val: ListItem) {\n    if (this._sourceDataType === 'object') {\n      const obj = {};\n      obj[this.settings.idField] = val.id;\n      obj[this.settings.textField] = val.text;\n      if (this._sourceDataFields.includes(this.settings.disabledField)) {\n        obj[this.settings.disabledField] = val.isDisabled;\n      }\n      return obj;\n    }\n    if (this._sourceDataType === 'number') {\n      return Number(val.id);\n    } else {\n      return val.text;\n    }\n  }\n\n  toggleDropdown(evt) {\n    evt.preventDefault();\n    if (this.disabled && this.settings.singleSelection) {\n      return;\n    }\n    this.settings.defaultOpen = !this.settings.defaultOpen;\n    if (!this.settings.defaultOpen) {\n      this.onDropDownClose.emit();\n    }\n  }\n\n  closeDropdown() {\n    this.searchFilter = '';\n    this.settings.defaultOpen = false;\n    // clear search text\n    if (this.settings.clearSearchFilter) {\n      this.filter.text = '';\n    }\n    this.onDropDownClose.emit();\n  }\n\n  toggleSelectAll() {\n    if (this.disabled || this.loading) {\n      return false;\n    }\n    if (!this.isAllItemsSelected()) {\n      // filter out disabled item first before slicing\n      this.selectedItems = this.listFilterPipe\n        .transform(this.data, this.filter)\n        .filter((item) => !item.isDisabled)\n        .slice();\n      this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n    } else {\n      this.selectedItems = [];\n      this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n    }\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n  }\n\n  getFields(inputData) {\n    const fields = [];\n    if (typeof inputData !== 'object') {\n      return fields;\n    }\n    // tslint:disable-next-line:forin\n    for (const prop in inputData) {\n      fields.push(prop);\n    }\n    return fields;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '~@angular/material/theming';\n\n$base-color: #337ab7;\n$disable-background-color: #d6d7d9;\n\napp-chip-filter,\n.app-chip-filter {\n  position: relative;\n  width: 100%;\n  font-size: inherit;\n  font-family: inherit;\n\n  mat-chip-list {\n    width: 80% !important;\n    display: inline-block;\n    text-align: center;\n    margin: 0 auto 0 0;\n  }\n\n  mat-chip {\n    border: 1px solid #999999 !important;\n    max-width: 30%;\n    span {\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n    }\n    fa-icon {\n      opacity: 1 !important;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  //hide mat chip if shown limit is exceeded\n  mat-chip.mat-chip[hidden] {\n    display: none !important;\n  }\n\n  .counter {\n    width: 20% !important;\n    display: inline-block;\n    text-align: right;\n    margin: 0 0 0 auto;\n    span {\n      font-weight: 700;\n    }\n    .arrow {\n      background-color: #fff;\n      background-image: url(data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2210%22%20height%3D%2214%22%20viewBox%3D%220%200%2010%2014%22%3E%20%20%3Cg%20fill%3D%22%23000%22%20fill-rule%3D%22evenodd%22%3E%20%20%20%20%3Cpath%20d%3D%22M.62639628%205.99993896H9.3727389c.25339173.00130856.482416-.15074264.57956202-.38477624.09714598-.2340336.04312294-.50357616-.13670922-.6820964L5.4401815.1835435C5.32475606.06613116%205.1670083%200%205.00236114%200c-.16464716%200-.3223949.06613117-.43782037.1835435L.1835435%204.93306632C.06613116%205.0484918%200%205.20623953%200%205.3708867s.06613117.32239492.1835435.43782038c.1146444.1224934.27508006.19177244.44285278.19123188zM9.3727389%207.9999685H.6263963c-.1662653-.00316183-.32647608.06237894-.4428528.18116705C.0661312%208.296561%200%208.45430875%200%208.61895592s.06613117.32239492.1835435.43782037l4.38099726%204.7596802C4.67996622%2013.9338688%204.83771396%2014%205.00236113%2014s.32239492-.0661312.43782038-.1835435l4.3754102-4.74961537c.17983216-.17852023.2338552-.44806278.13670922-.68209638-.09714602-.2340336-.3261703-.3860848-.579562-.38477625z%22%2F%3E%20%20%3C%2Fg%3E%3C%2Fsvg%3E);\n      background-position: right 8px center;\n      background-repeat: no-repeat;\n      background-size: 10px;\n      padding-right: 28px;\n    }\n  }\n\n  .dropdown-btn {\n    justify-content: space-between;\n    display: flex;\n    align-items: center;\n    min-height: 32px;\n    &:focus {\n      outline: none;\n    }\n\n    .placeholder {\n      width: 80%;\n    }\n\n    .selected-item {\n      border: 1px solid $base-color;\n      margin-right: 4px;\n      background: $base-color;\n      padding: 0px 5px;\n      color: #fff;\n      border-radius: 2px;\n      float: left;\n    }\n\n    .selected-item:hover {\n      box-shadow: 1px 1px #959595;\n    }\n\n    .dropdown-down {\n      display: inline-block;\n      top: 10px;\n      width: 0;\n      height: 0;\n      border-top: 10px solid #adadad;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n    }\n\n    .dropdown-up {\n      display: inline-block;\n      width: 0;\n      height: 0;\n      border-bottom: 10px solid #adadad;\n      border-left: 10px solid transparent;\n      border-right: 10px solid transparent;\n    }\n  }\n\n  .multiselect-dropdown.disabled {\n    border: 2px solid #212121;\n    opacity: 0.7;\n  }\n\n  .arrow.disabled {\n    opacity: 1;\n  }\n\n  .disabled {\n    pointer-events: none;\n    cursor: default;\n    background-color: $disable-background-color !important;\n  }\n\n  .dropdown-list {\n    position: absolute;\n    padding-top: 6px;\n    width: inherit;\n    z-index: 1;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n    background: #fff;\n    margin-top: 1rem;\n    left: 0;\n    box-shadow: 0px 1px 5px #959595;\n\n    ul {\n      padding: 0px;\n      list-style: none;\n      overflow: auto;\n      margin: 0px;\n    }\n\n    li {\n      padding: 6px 10px;\n      cursor: pointer;\n      text-align: left;\n    }\n\n    .filter-textbox {\n      border-bottom: 1px solid #ccc;\n      position: relative;\n      padding: 10px;\n\n      input {\n        border: 0;\n        width: 100%;\n        padding: 0;\n      }\n\n      input:focus {\n        outline: none;\n      }\n    }\n  }\n\n  .multiselect-dropdown {\n    width: 100%;\n    max-width: inherit;\n    min-height: 42px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    position: relative;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  .multiselect-item-checkbox input[type='checkbox'] {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox']:focus + div:before,\n  .multiselect-item-checkbox input[type='checkbox']:hover + div:before {\n    border-color: $base-color;\n    background-color: #f2f2f2;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox']:active + div:before {\n    transition-duration: 0s;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox'] + div {\n    position: relative;\n    padding-left: 2em;\n    vertical-align: middle;\n    user-select: none;\n    cursor: pointer;\n    margin: 0px;\n    color: #000;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox'] + div:before {\n    box-sizing: content-box;\n    content: '';\n    color: $base-color;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    width: 14px;\n    height: 14px;\n    margin-top: -9px;\n    border: 2px solid #212121;\n    text-align: center;\n    transition: all 0.4s ease;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox'] + div:after {\n    box-sizing: content-box;\n    content: '';\n    background-color: $base-color;\n    position: absolute;\n    top: 50%;\n    left: 4px;\n    width: 10px;\n    height: 10px;\n    margin-top: -5px;\n    transform: scale(0);\n    transform-origin: 50%;\n    transition: transform 200ms ease-out;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox']:disabled + div:before {\n    border-color: #cccccc;\n  }\n\n  .multiselect-item-checkbox\n    input[type='checkbox']:disabled:focus\n    + div:before\n    .multiselect-item-checkbox\n    input[type='checkbox']:disabled:hover\n    + div:before {\n    background-color: inherit;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox']:disabled:checked + div:before {\n    background-color: #cccccc;\n    background-color: #cccccc;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox'] + div:after {\n    background-color: transparent;\n    top: 50%;\n    left: 4px;\n    width: 8px;\n    height: 3px;\n    margin-top: -4px;\n    border-style: solid;\n    border-color: #ffffff;\n    border-width: 0 0 3px 3px;\n    border-image: none;\n    transform: rotate(-45deg) scale(0);\n  }\n\n  .multiselect-item-checkbox input[type='checkbox']:checked + div:after {\n    content: '';\n    transform: rotate(-45deg) scale(1);\n    transition: transform 200ms ease-out;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox']:checked + div:before {\n    animation: borderscale 200ms ease-in;\n    background: $base-color;\n    border: 2px solid $base-color;\n  }\n\n  .multiselect-item-checkbox input[type='checkbox']:checked + div:after {\n    transform: rotate(-45deg) scale(1);\n  }\n\n  .spinner--container {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    z-index: 1;\n    background: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  @keyframes borderscale {\n    50% {\n      box-shadow: 0 0 0 2px $base-color;\n    }\n  }\n\n  @media screen and (max-width: 900px) {\n    #other {\n      display: none;\n    }\n  }\n}\n",
          "styleUrl": "./chip-filter.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "listFilterPipe",
            "type": "ChipFilterPipe"
          }
        ],
        "line": 111,
        "jsdoctags": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "listFilterPipe",
            "type": "ChipFilterPipe",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["ControlValueAccessor", "OnInit", "OnChanges"],
      "templateData": "<label *ngIf=\"settings?.labelName\" [ngClass]=\"settings.labelClass\" class=\"ds-c-label ds-u-margin-top--0 ds-u-sans\">\n  <span class=\"ds-u-font-weight--bold\">{{ settings?.labelName }}</span>\n  <span *ngIf=\"settings.hintMessage\" class=\"ds-c-field__hint ds-c-field__hint--inverse\">{{\n    settings?.hintMessage\n  }}</span>\n  <span *ngIf=\"settings.error\" class=\"ds-c-field__hint ds-u-color--error\" id=\"undefined-message\" role=\"alert\">{{\n    settings?.errorMessage\n  }}</span>\n</label>\n\n<div\n  tabindex=\"=0\"\n  (blur)=\"onTouched()\"\n  class=\"multiselect-dropdown ds-c-field\"\n  [class.disabled]=\"disabled\"\n  (clickOutside)=\"closeDropdown()\"\n>\n  <div id=\"chip-container\">\n    <div tabindex=\"-1\" class=\"dropdown-btn\" (click)=\"toggleDropdown($event)\">\n      <span class=\"placeholder\" *ngIf=\"selectedItems.length == 0\">{{ settings.placeholder }}</span>\n      <mat-chip-list>\n        <mat-chip\n          selected\n          color=\"secondary\"\n          *ngFor=\"let item of selectedItems; trackBy: trackByFn; let k = index\"\n          [removable]=\"true\"\n          (removed)=\"removeSelected(item)\"\n          [hidden]=\"k > settings.itemsShowLimit - 1\"\n        >\n          <span>{{ item.text }}</span>\n          <fa-icon [icon]=\"icon\" matChipRemove></fa-icon>\n        </mat-chip>\n      </mat-chip-list>\n      <div class=\"counter\">\n        <span *ngIf=\"itemShowRemaining() > 0 && !isAllItemsSelected()\"\n          >+{{ itemShowRemaining() }} <span id=\"other\">Other</span></span\n        >\n        <span *ngIf=\"isAllItemsSelected()\" id=\"other\">All Selected</span>\n        <span class=\"arrow\" [class.disabled]=\"disabled\"></span>\n      </div>\n    </div>\n  </div>\n  <div class=\"dropdown-list\" [hidden]=\"!settings?.defaultOpen\">\n    <ul class=\"item1\">\n      <li\n        (click)=\"toggleSelectAll()\"\n        *ngIf=\"\n          (data.length > 0 || settings.allowRemoteDataSearch) &&\n          !settings.singleSelection &&\n          settings.enableCheckAll &&\n          !searchFilter &&\n          settings.limitSelection === -1\n        \"\n        class=\"multiselect-item-checkbox\"\n        style=\"border-bottom: 1px solid #ccc; padding: 10px\"\n      >\n        <input\n          type=\"checkbox\"\n          aria-label=\"multiselect-select-all\"\n          [checked]=\"isAllItemsSelected()\"\n          [disabled]=\"disabled || isLimitSelectionReached() || loading\"\n        />\n        <div>{{ !isAllItemsSelected() ? settings.selectAllText : settings.unSelectAllText }}</div>\n      </li>\n      <li\n        class=\"filter-textbox\"\n        *ngIf=\"(data.length > 0 || settings.allowRemoteDataSearch) && settings.allowSearchFilter\"\n      >\n        <input\n          type=\"text\"\n          aria-label=\"multiselect-search\"\n          [readOnly]=\"disabled || loading\"\n          [placeholder]=\"settings.searchPlaceholder\"\n          [(ngModel)]=\"filter.text\"\n          (ngModelChange)=\"onFilterTextChange($event)\"\n        />\n      </li>\n    </ul>\n    <ul class=\"item2\" [style.maxHeight]=\"settings.maxHeight + 'px'\" (scroll)=\"onScroll($event)\">\n      <div class=\"spinner--container\" [style.height]=\"settings.maxHeight + 'px'\" *ngIf=\"loading\">\n        <app-spinner\n          [dataAutoId]=\"'data-table-page-spinner'\"\n          [inversed]=\"false\"\n          [filled]=\"false\"\n          [color]=\"'muted'\"\n          [size]=\"'big'\"\n        >\n        </app-spinner>\n      </div>\n      <li\n        *ngFor=\"let item of data | chipSelectFilter: filter; let i = index\"\n        (click)=\"onItemClick($event, item)\"\n        class=\"multiselect-item-checkbox\"\n      >\n        <input\n          type=\"checkbox\"\n          aria-label=\"multiselect-item\"\n          [checked]=\"isSelected(item)\"\n          [disabled]=\"disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled || loading\"\n        />\n        <div>{{ item.text }}</div>\n      </li>\n      <li class=\"no-data\" *ngIf=\"data.length == 0 && !settings.allowRemoteDataSearch\">\n        <h5>{{ settings.noDataAvailablePlaceholderText }}</h5>\n      </li>\n    </ul>\n  </div>\n</div>\n"
    },
    {
      "name": "AppChoiceComponent",
      "id": "component-AppChoiceComponent-d006e29d51167f0590152f2ba30fd909",
      "file": "src/app/modules/choice/choice.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-choice",
      "styleUrls": ["./choice.component.css"],
      "styles": [],
      "templateUrl": ["./choice.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "line": 13,
          "type": "string"
        },
        {
          "name": "dataAutoId",
          "line": 22,
          "type": "string"
        },
        {
          "name": "disabled",
          "line": 21,
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "line": 19,
          "type": "string"
        },
        {
          "name": "groupName",
          "line": 15,
          "type": "string"
        },
        {
          "name": "index",
          "defaultValue": "'main'",
          "line": 10
        },
        {
          "name": "inputClass",
          "line": 18,
          "type": "string"
        },
        {
          "name": "inputType",
          "defaultValue": "'checkbox'",
          "line": 9
        },
        {
          "name": "isChecked",
          "line": 20,
          "type": "boolean"
        },
        {
          "name": "label",
          "line": 12,
          "type": "string"
        },
        {
          "name": "labelClass",
          "line": 17,
          "type": "string"
        },
        {
          "name": "labelTextClass",
          "line": 24,
          "type": "string"
        },
        {
          "name": "showTitle",
          "defaultValue": "true",
          "line": 16
        },
        {
          "name": "size",
          "line": 11,
          "type": "string"
        },
        {
          "name": "tabIndex",
          "line": 23,
          "type": "number"
        },
        {
          "name": "value",
          "line": 14,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "choiceChange",
          "defaultValue": "new EventEmitter<any>()",
          "line": 26,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "choiceSize",
          "defaultValue": "ChoiceSize",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32
        },
        {
          "name": "onChange",
          "args": [
            {
              "name": "$event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-choice',\n  templateUrl: './choice.component.html',\n  styleUrls: ['./choice.component.css']\n})\nexport class AppChoiceComponent implements OnInit {\n  @Input() inputType = 'checkbox';\n  @Input() index = 'main';\n  @Input() size: string;\n  @Input() label: string;\n  @Input() ariaLabel: string;\n  @Input() value: string;\n  @Input() groupName: string;\n  @Input() showTitle = true;\n  @Input() labelClass: string;\n  @Input() inputClass: string;\n  @Input() errorMessage: string;\n  @Input() isChecked: boolean;\n  @Input() disabled: boolean;\n  @Input() dataAutoId: string;\n  @Input() tabIndex: number;\n  @Input() labelTextClass: string;\n\n  @Output() choiceChange = new EventEmitter<any>();\n\n  choiceSize = ChoiceSize;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  onChange($event) {\n    this.choiceChange.emit($event);\n  }\n}\n\nenum ChoiceSize {\n  'small' = 'ds-c-choice--small',\n  'medium' = ''\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".bold {\n    font-weight:bold;\n}\n\nlabel { \n    margin-left: 5px;\n}",
          "styleUrl": "./choice.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 28
      },
      "implements": ["OnInit"],
      "templateData": "<div *ngIf=\"errorMessage\" class=\"ds-c-field__hint ds-u-color--error ds-u-margin-y--2\" role=\"alert\">\n  {{ errorMessage }}\n</div>\n<input\n  [type]=\"inputType\"\n  class=\"ds-c-choice {{ choiceSize[size] }} {{ inputClass }}\"\n  id=\"{{ value + '-' + index }}\"\n  name=\"{{ groupName }}\"\n  [attr.value]=\"value\"\n  [checked]=\"isChecked\"\n  attr.data-auto-id=\"{{ dataAutoId }}\"\n  (change)=\"onChange($event)\"\n  attr.aria-label=\"{{ ariaLabel }}\"\n  [attr.tabindex]=\"tabIndex ? tabIndex : null\"\n  [disabled]=\"disabled\"\n/>\n<label for=\"{{ value + '-' + index }}\" class=\"{{ labelClass }}\" id=\"{{ value + '-' + index + '-label' }}\">\n  <span *ngIf=\"showTitle\" class=\"{{ labelTextClass }}\">{{ label ? label : value }}</span>\n</label>\n"
    },
    {
      "name": "AppCircleGraphComponent",
      "id": "component-AppCircleGraphComponent-6558f12b74df4c3569ea7deb983a4dda",
      "file": "src/app/modules/circle-graph/circle-graph.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-circle-graph",
      "styleUrls": ["./circle-graph.component.css"],
      "styles": [],
      "templateUrl": ["./circle-graph.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "animations",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "arcWidth",
          "line": 23,
          "type": "number"
        },
        {
          "name": "buttonClicked",
          "defaultValue": "'pieGraphCard0'",
          "line": 35
        },
        {
          "name": "customColors",
          "line": 16,
          "type": "object"
        },
        {
          "name": "data",
          "line": 12,
          "type": "any[]"
        },
        {
          "name": "dataAutoId",
          "line": 27,
          "type": "string"
        },
        {
          "name": "doughnut",
          "line": 22,
          "type": "boolean"
        },
        {
          "name": "explodeSlices",
          "line": 21,
          "type": "boolean"
        },
        {
          "name": "firstColumnName",
          "line": 30,
          "type": "string"
        },
        {
          "name": "gradient",
          "line": 24,
          "type": "boolean"
        },
        {
          "name": "hideGraph",
          "line": 28,
          "type": "boolean"
        },
        {
          "name": "labels",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "maxLabelLength",
          "line": 20,
          "type": "number"
        },
        {
          "name": "scheme",
          "defaultValue": "{\n        domain: ['#2E8540', '#D7EAD3']\n    }",
          "line": 13,
          "type": "any"
        },
        {
          "name": "title",
          "line": 26,
          "type": "string"
        },
        {
          "name": "tooltipDisabled",
          "line": 25,
          "type": "object"
        },
        {
          "name": "trimLabels",
          "line": 19,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "passButton",
          "defaultValue": "new EventEmitter<any>()",
          "line": 31,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "centerNum",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "totalValues",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "view",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        },
        {
          "name": "onActivate",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 79,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onDeactivate",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onSelect",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "passAction",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "resize",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 56
        },
        {
          "name": "setPosition",
          "args": [
            {
              "name": "height",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "jsdoctags": [
            {
              "name": "height",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'app-circle-graph',\n    templateUrl: './circle-graph.component.html',\n    styleUrls: ['./circle-graph.component.css']\n})\n\nexport class AppCircleGraphComponent implements OnInit {\n    view: any[];\n\n    @Input() data: any[];\n    @Input() scheme: any = {\n        domain: ['#2E8540', '#D7EAD3']\n    };\n    @Input() customColors: object;\n    @Input() animations: boolean;\n    @Input() labels: boolean;\n    @Input() trimLabels: boolean;\n    @Input() maxLabelLength: number;\n    @Input() explodeSlices: boolean;\n    @Input() doughnut: boolean;\n    @Input() arcWidth: number;\n    @Input() gradient: boolean;\n    @Input() tooltipDisabled: object;\n    @Input() title: string;\n    @Input() dataAutoId: string;\n    @Input() hideGraph: boolean;\n\n    @Input() firstColumnName: string;\n    @Output() passButton = new EventEmitter<any>();\n\n    totalValues = 0;\n    centerNum: string;\n    @Input() buttonClicked = 'pieGraphCard0';\n\n    ngOnInit() {\n        this.resize();\n\n        let rate;\n\n        (this.data).map(x => {\n            this.totalValues += x.value;\n\n            if (x.attr && x.attr === 'rate') { rate = x.value; }\n        });\n\n        this.centerNum = Math.floor(100 * (rate / this.totalValues)) + '%';\n    }\n\n    passAction(e) {\n        this.passButton.emit(e);\n        this.buttonClicked = e.target.id;\n    }\n\n    resize() {\n        if (!this.hideGraph) {\n            const graphContainer = document.getElementsByClassName('circleGraphShell')[0].clientWidth;\n            this.view = [graphContainer, graphContainer - 50];\n\n            this.setPosition(graphContainer);\n        }\n    }\n\n    setPosition(height) {\n        const circle = document.querySelectorAll('.circleGraphShell')[0].getBoundingClientRect();\n        const text = document.getElementById('centerText').style;\n        const sub = document.getElementById('subText').style;\n\n        sub.width = circle.width + 'px';\n        text.width = circle.width + 'px';\n        text.top = height / 2 - 50 + 'px';\n    }\n\n    onSelect(e) {\n        console.log(e);\n    }\n\n    onActivate(e) {\n        console.log(e);\n    }\n\n    onDeactivate(e) {\n        console.log(e);\n    }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host ::ng-deep .tick text {\n    font-size: 15px !important;\n    fill: #5B616B !important;\n}\n\n.circleGraphShell {\n    width: 275px;\n    height: 275px;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.centerTextShell {\n    position: relative;\n}\n\n.centerText {\n    position: absolute;\n    text-align: center;\n    font-size: 36px;\n}\n\n.subText {\n    text-align: center;\n    font-size: 24px;\n    margin-bottom:16px;\n}\n\n.noPoint {\n    pointer-events: none;\n}\n\n.active {\n    border-top: 6px solid #4C2C92 !important;\n    box-shadow: 0px 4px 9px #d9d9d9 !important;\n}\n\n.card {\n    border-top: 6px solid #A5E9FF;\n    box-shadow: 0px 4px 6px #F1F1F1;\n    transition: all 200ms cubic-bezier(.25,.8,.25,1);\n}\n\n.cardHeight {\n    height: 60px;\n    overflow: hidden;\n}\n\n.card:hover {\n    border-top: 6px solid #00A6D2;\n    box-shadow: 0px 4px 9px #d9d9d9;\n}\n\n.ds-text {\n    margin-top: 0;\n}\n\n.hide {\n    display: none;\n}\n\n@media only screen and (min-width: 768px) {\n    \n    .padding-L-R {\n        padding-left: 0;\n        padding-right: 0;\n    }\n    \n    .margin-Bottom {\n        margin-bottom: 0;\n    }\n    \n    .padding-margin-adjust:first-of-type {\n        margin-bottom: 16px;\n    }\n}\n\n@media only screen and (max-width: 768px) {\n    .padding-margin-adjust:first-of-type {\n        padding-right: 8px;\n        margin-bottom: 0;\n    }\n    \n    .padding-margin-adjust:nth-of-type(2) {\n        padding-left: 8px;\n    }\n    \n    .margin-Bottom {\n        margin-bottom: 16px;\n    }\n}",
          "styleUrl": "./circle-graph.component.css"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData": "<div class=\"ds-l-row ds-u-justify-content--center ds-u-align-items--center ds-u-padding--1\"\n    attr.data-auto-id=\"{{dataAutoId}}\">\n    <div class=\"ds-l-lg-col--4 ds-l-md-col--4 ds-l-sm-col--12\" [ngClass]=\"hideGraph ? 'hide' : null\">\n        <div class=\"mainGraphClass circleGraphShell\" (window:load)=\"resize()\" (window:resize)=\"resize()\"\n            id=\"strictCircleGraph\"\n            aria-label=\"pie chart expressing the results of errors and non error submitted, tab to hear results\">\n            <ngx-charts-pie-chart [view]=\"view\" [results]=\"data\" [scheme]=\"scheme\" [customColors]=\"customColors\"\n                [animations]=\"animations\" [labels]=\"labels\" [trimLabels]=\"trimLabels\" [maxLabelLength]=\"maxLabelLength\"\n                [explodeSlices]=\"explodeSlices\" [doughnut]=\"doughnut\" [arcWidth]=\"arcWidth\" [gradient]=\"gradient\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                (select)=\"onSelect($event)\" (activate)=\"onActivate($event)\" (deactivate)=\"onDeactivate($event)\">\n                <ng-template #tooltipTemplate let-model=\"model\">\n                    <div>\n                        <h1 class=\"ds-h6\" style=\"margin: 2px; font-weight: normal; color: white\">\n                            {{model.name}}\n                        </h1>\n                        <h3 class=\"ds-h4\" style=\"margin: 2px; font-weight: bold\">\n                            {{ model.value | graphToolTip}}\n                        </h3>\n                    </div>\n                </ng-template>\n            </ngx-charts-pie-chart>\n\n            <div class=\"centerTextShell\">\n                <div id=\"centerText\" class=\"centerText\">\n                    {{ centerNum }}\n                </div>\n            </div>\n\n            <div id=\"subText\" class=\"subText\">\n                {{ title }}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"{{ hideGraph ? 'ds-l-lg-col--6 ds-l-md-col--6' : 'ds-l-lg-col--4 ds-l-md-col--4' }} ds-l-sm-col--12 padding-L-R\">\n        <div tabindex=\"0\" role=\"button\" id=\"pieGraphCard0\"\n            [ngClass]=\"buttonClicked === 'pieGraphCard0' ? 'active': null\"\n            class=\"margin-Bottom pointer card ds-u-padding-top--6 ds-u-padding-bottom--6 ds-u-padding-x--1\"\n            (click)=\"passAction($event)\" (keyup.enter)=\"passAction($event)\">\n            <div class=\"ds-u-font-size--h1 ds-u-color--black ds-u-font-weight--bold noPoint\">\n                {{ totalValues }}\n            </div>\n            <div class=\"ds-u-font-size--h3 ds-u-color--black noPoint\">\n                {{ firstColumnName }}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"{{ hideGraph ? 'ds-l-lg-col--6 ds-l-md-col--6' : 'ds-l-lg-col--4 ds-l-md-col--4' }} ds-l-sm-col--12\">\n        <div class=\"ds-l-row\">\n            <div *ngFor=\"let d of data; let x = index\"\n                class=\"ds-l-lg-col--12 ds-l-md-col--12 ds-l-sm-col--6 ds-l-col--6 padding-margin-adjust\">\n                <div id=\"{{'pieGraphCard' + (x+1)}}\" [ngClass]=\"buttonClicked === 'pieGraphCard'+(x+1) ? 'active': null\"\n                    class=\"cardHeight pointer card ds-u-padding--1\" (click)=\"passAction($event)\"\n                    (keyup.enter)=\"passAction($event)\" role=\"button\" tabindex=\"0\">\n                    <div class=\"ds-u-font-size--h2 ds-u-color--black ds-u-font-weight--bold noPoint\">\n                        {{ d.value}}\n                    </div>\n                    <div class=\"ds-text ds-u-color--black noPoint\">\n                        {{ d.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>"
    },
    {
      "name": "AppComponent",
      "id": "component-AppComponent-017e0c17eb9cd35b252203a68ab6a56f",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [
        {
          "name": "ExampleModalComponent",
          "type": "component"
        }
      ],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ModalService"
        }
      ],
      "selector": "app-root",
      "styleUrls": ["./app.component.css"],
      "styles": [],
      "templateUrl": ["./app.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "appTableModalComponent",
          "defaultValue": "AppTableModalComponent",
          "type": "",
          "optional": false,
          "description": "",
          "line": 131
        },
        {
          "name": "barData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "chartData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "cluster",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "codeSnippetModel",
          "defaultValue": "new CodeSnippetModel({\n    label: 'XPath',\n    copyLinkLabel: 'Copy!!',\n    contentItems: [\n      new CodeSnippetContentItemModel({ content: 'line1' }),\n      new CodeSnippetContentItemModel({ content: '  - line 2' }),\n      new CodeSnippetContentItemModel({\n        content: '     - line 3',\n        className: 'ds-u-fill--error-lightest ds-u-color--error-dark',\n        lineNumber: 150,\n      }),\n      new CodeSnippetContentItemModel({\n        content:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      }),\n    ],\n    // copyContent: 'copy override',\n  })",
          "type": "",
          "optional": false,
          "description": "",
          "line": 101
        },
        {
          "name": "dataSet",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "dropDown",
          "defaultValue": "[\n    {\n      content: 'option1',\n      value: 'op1',\n    },\n    {\n      content: 'option2',\n      value: 'op2',\n    },\n    {\n      content: 'option3',\n      value: 'op3',\n    },\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "fileUploadModel",
          "defaultValue": "new FileUploadModel({\n    label: 'Drag and Drop',\n    ariaLabel: 'Drag and Drop',\n    id: 'drag_drop',\n    dataAutoId: 'drag-drop-auto',\n    height: 250,\n  })",
          "type": "",
          "optional": false,
          "description": "",
          "line": 123
        },
        {
          "name": "lineData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "modalData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "openAll",
          "type": "",
          "optional": false,
          "description": "",
          "line": 60
        },
        {
          "name": "pieData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "popoverModel",
          "defaultValue": "new PopoverModel({\n    items: [\n      new PopoverItemModel({\n        label: 'Menu Item 1',\n      }),\n      new PopoverItemModel({\n        label: 'Menu Item 2',\n        url: 'https://www.google.com',\n      }),\n    ],\n    showArrow: false,\n    icon: faEllipsisV,\n    label: null,\n    mdePopoverPositionX: mdePopoverPositionXEnum.AFTER,\n    mdePopoverPositionY: mdePopoverPositionYEnum.BELOW,\n  })",
          "type": "PopoverModel",
          "optional": false,
          "description": "",
          "line": 135
        },
        {
          "name": "resetSearch",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "searchText",
          "type": "",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "searchValue",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "singleTableData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 61
        },
        {
          "name": "tabDesc",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 121
        },
        {
          "name": "table2Component",
          "type": "TableComponent",
          "optional": false,
          "description": "",
          "line": 398,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'tableComponent'"
            }
          ]
        },
        {
          "name": "tableData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "tableHeaderData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "tableModel",
          "defaultValue": "new TableModel({\n    id: 'storiesTable',\n    headers: [\n      new TableHeaderModel({\n        label: 'Select All',\n        ariaLabel: 'Activate enter key to select all rows',\n        type: TableCellTypeEnum.CHECKBOX,\n        columnKey: 'checkbox',\n      }),\n      new TableHeaderModel({\n        label: 'Label',\n        columnKey: 'label',\n        modalText: 'This is my modal.  Do you like it?',\n      }),\n      new TableHeaderModel({\n        label: 'Date',\n        columnKey: 'date',\n        isRowHeader: true,\n      }),\n      new TableHeaderModel({\n        label: 'User',\n        columnKey: 'user',\n        type: TableHeaderTypeEnum.SORT,\n      }),\n      new TableHeaderModel({\n        label: 'Long Text Long Text',\n        columnKey: 'longText',\n        modalText: `\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. <strong>Mauris ut semper diam. Ut ultrices ullamcorper neque</strong>,\n            sed congue elit porttitor in. In at justo libero. Sed elementum bibendum ante id elementum. Aenean maximus ex at ornare tempor.\n            Vivamus vitae consequat justo.\n          </p>\n          <p>\n            Vivamus sed volutpat leo. Fusce placerat ante quis nulla tincidunt, quis viverra augue convallis.\n            Vestibulum et pretium eros, vel posuere nibh. Morbi ultrices, justo eu iaculis bibendum, turpis magna blandit mi, et tincidunt\n            nunc odio sed enim. Nulla eros mauris, facilisis sed fermentum id, dictum sollicitudin arcu. Donec id ligula interdum nisl\n            dignissim congue sit amet a velit. Integer velit justo, mattis eget ante sed, aliquam bibendum magna. Suspendisse bibendum,\n            enim quis pretium sollicitudin, odio felis posuere mi, id auctor ligula est sit amet magna.\n          </p>\n        `,\n      }),\n      new TableHeaderModel({\n        label: 'Status',\n        columnKey: 'status',\n        type: TableHeaderTypeEnum.SORT,\n      }),\n      new TableHeaderModel({\n        label: 'Action',\n        columnKey: 'action',\n      }),\n    ],\n    rows: [\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 1',\n            ariaLabel: 'Activate spacebar to select row 1',\n            checkboxValue: '1',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 1',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '1/1/2000',\n          }),\n          new TableCellModel({\n            label: 'Jim <span class=\"ds-c-badge ds-c-badge--alert\">New</span>',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Active',\n            icon: faCircle,\n            iconClass: 'ds-u-color--success',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 2',\n            ariaLabel: 'Activate spacebar to select row 2',\n            checkboxValue: '2',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 2',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '2/2/2002',\n          }),\n          new TableCellModel({\n            label: 'Pam',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Suspended',\n            icon: faCircle,\n            iconClass: 'ds-u-color--error',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 3',\n            ariaLabel: 'Activate spacebar to select row 3',\n            checkboxValue: '3',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 3',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '2/1/2004',\n          }),\n          new TableCellModel({\n            label: 'Dwight',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Active',\n            icon: faCircle,\n            iconClass: 'ds-u-color--success',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 4',\n            ariaLabel: 'Activate spacebar to select row 4',\n            checkboxValue: '4',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 4',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '1/5/2010',\n          }),\n          new TableCellModel({\n            label: 'Jim',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Inactive',\n            icon: faCircle,\n            iconClass: 'ds-u-color--gray',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 5',\n            ariaLabel: 'Activate spacebar to select row 5',\n            checkboxValue: '5',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 5',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '2/5/2010',\n          }),\n          new TableCellModel({\n            label: 'Stanley',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Inactive',\n            icon: faCircle,\n            iconClass: 'ds-u-color--gray',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n    ],\n    totalRows: 20,\n    summary: 'This table is an example implementation of the Table Component',\n    pagination: new TablePaginationModel({\n      isEnabled: true,\n      perPage: 5,\n      currentPage: 1,\n    }),\n  })",
          "type": "TableModel",
          "optional": false,
          "description": "",
          "line": 152
        },
        {
          "name": "tabs",
          "defaultValue": "[\n    {\n      title: 'tab1',\n      id: 'tab1',\n      ariaLabel: 'tab1 hello',\n      description: 'Files acceptable are whatever you want to upload.',\n    },\n    {\n      title: 'tab2',\n      ariaLabel: 'tab1 yellow',\n      description: 'Files acceptable are TXT, TSV, CSV.',\n    },\n    {\n      title: 'tab3',\n      id: 'tab3',\n      ariaLabel: 'tab3 mellow',\n      description: 'Files acceptable are cat and dog pictures.',\n      disabled: true,\n    },\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 80
        },
        {
          "name": "tabTitle",
          "defaultValue": "'not clicked'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 120
        },
        {
          "name": "TooltipPlacementEnum",
          "defaultValue": "TooltipPlacementEnum",
          "type": "",
          "optional": false,
          "description": "",
          "line": 396
        },
        {
          "name": "TooltipTriggerTypeEnum",
          "defaultValue": "TooltipTriggerTypeEnum",
          "type": "",
          "optional": false,
          "description": "",
          "line": 395
        },
        {
          "name": "totalRows",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 62
        },
        {
          "name": "uploader",
          "type": "FileUploadComponent",
          "optional": false,
          "description": "",
          "line": 133,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'uploader'"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "announce",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 452,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "buttonClick",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 402,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "clear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 457
        },
        {
          "name": "countTableRows",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 448,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 417
        },
        {
          "name": "searchFunction",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 436,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "showToast",
          "args": [
            {
              "name": "message",
              "type": ""
            },
            {
              "name": "title",
              "type": ""
            },
            {
              "name": "variation",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 471,
          "jsdoctags": [
            {
              "name": "message",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "title",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "variation",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "tabSelected",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 461,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "uploadFile",
          "args": [
            {
              "name": "$event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 466,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport modalData from '../assets/data/modalData.json';\nimport chartData from '../assets/data/chart-data.json';\nimport tableData from '../assets/data/table-data.json';\nimport tableHeaderData from '../assets/data/table-header-data.json';\nimport lineData from '../assets/data/line-data.json';\nimport dataSet from '../assets/data/publicReportingData.json';\nimport pieData from '../assets/data/pie-data.json';\nimport barData from '../assets/data/bar-data.json';\nimport cluster from '../assets/data/cluster-data.json';\nimport singleTableData from '../assets/data/single-table-data.json';\nimport dropDownData from '../assets/data/drop-down-data.json';\nimport { ModalService } from './services/modal/modal.service';\nimport { ExampleModalComponent } from './components/example-modal/example-modal.component';\nimport { AppTableModalComponent } from './modules/table/table-modal/table-modal.component';\n\nimport { FileUploadModel } from './modules/file-upload/file-upload.model';\nimport { CodeSnippetModel, CodeSnippetContentItemModel } from './modules/code-snippet/code-snippet.model.js';\nimport { FileUploadComponent } from './modules/file-upload/file-upload.component.js';\nimport { ToastService } from './modules/toast/service/toast.service';\nimport {\n  TableModel,\n  TableHeaderModel,\n  TableCellTypeEnum,\n  TableHeaderTypeEnum,\n  TableRowModel,\n  TableCellModel,\n  TablePaginationModel,\n} from './modules/table2/table.models.js';\nimport { faUser, faCircle } from '@fortawesome/free-regular-svg-icons';\nimport {\n  PopoverModel,\n  PopoverItemModel,\n  mdePopoverPositionXEnum,\n  mdePopoverPositionYEnum,\n} from './modules/popover/popover.model.js';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { TableComponent } from './modules/table2/table.component.js';\nimport { TooltipPlacementEnum, TooltipTriggerTypeEnum } from './modules/tooltip/tooltip.models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ModalService],\n  entryComponents: [ExampleModalComponent],\n})\nexport class AppComponent implements OnInit {\n  modalData;\n  chartData;\n  tableData;\n  tableHeaderData;\n  lineData;\n  dataSet;\n  pieData;\n  barData;\n  cluster;\n  searchText;\n  openAll;\n  singleTableData;\n  totalRows = 0;\n  resetSearch: boolean;\n  searchValue: string;\n  dropDown = [\n    {\n      content: 'option1',\n      value: 'op1',\n    },\n    {\n      content: 'option2',\n      value: 'op2',\n    },\n    {\n      content: 'option3',\n      value: 'op3',\n    },\n  ];\n\n  tabs = [\n    {\n      title: 'tab1',\n      id: 'tab1',\n      ariaLabel: 'tab1 hello',\n      description: 'Files acceptable are whatever you want to upload.',\n    },\n    {\n      title: 'tab2',\n      ariaLabel: 'tab1 yellow',\n      description: 'Files acceptable are TXT, TSV, CSV.',\n    },\n    {\n      title: 'tab3',\n      id: 'tab3',\n      ariaLabel: 'tab3 mellow',\n      description: 'Files acceptable are cat and dog pictures.',\n      disabled: true,\n    },\n  ];\n\n  codeSnippetModel = new CodeSnippetModel({\n    label: 'XPath',\n    copyLinkLabel: 'Copy!!',\n    contentItems: [\n      new CodeSnippetContentItemModel({ content: 'line1' }),\n      new CodeSnippetContentItemModel({ content: '  - line 2' }),\n      new CodeSnippetContentItemModel({\n        content: '     - line 3',\n        className: 'ds-u-fill--error-lightest ds-u-color--error-dark',\n        lineNumber: 150,\n      }),\n      new CodeSnippetContentItemModel({\n        content:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      }),\n    ],\n    // copyContent: 'copy override',\n  });\n\n  tabTitle: string = 'not clicked';\n  tabDesc: string = '';\n\n  fileUploadModel = new FileUploadModel({\n    label: 'Drag and Drop',\n    ariaLabel: 'Drag and Drop',\n    id: 'drag_drop',\n    dataAutoId: 'drag-drop-auto',\n    height: 250,\n  });\n\n  appTableModalComponent = AppTableModalComponent;\n\n  @ViewChild('uploader') uploader: FileUploadComponent;\n\n  popoverModel: PopoverModel = new PopoverModel({\n    items: [\n      new PopoverItemModel({\n        label: 'Menu Item 1',\n      }),\n      new PopoverItemModel({\n        label: 'Menu Item 2',\n        url: 'https://www.google.com',\n      }),\n    ],\n    showArrow: false,\n    icon: faEllipsisV,\n    label: null,\n    mdePopoverPositionX: mdePopoverPositionXEnum.AFTER,\n    mdePopoverPositionY: mdePopoverPositionYEnum.BELOW,\n  });\n\n  tableModel: TableModel = new TableModel({\n    id: 'storiesTable',\n    headers: [\n      new TableHeaderModel({\n        label: 'Select All',\n        ariaLabel: 'Activate enter key to select all rows',\n        type: TableCellTypeEnum.CHECKBOX,\n        columnKey: 'checkbox',\n      }),\n      new TableHeaderModel({\n        label: 'Label',\n        columnKey: 'label',\n        modalText: 'This is my modal.  Do you like it?',\n      }),\n      new TableHeaderModel({\n        label: 'Date',\n        columnKey: 'date',\n        isRowHeader: true,\n      }),\n      new TableHeaderModel({\n        label: 'User',\n        columnKey: 'user',\n        type: TableHeaderTypeEnum.SORT,\n      }),\n      new TableHeaderModel({\n        label: 'Long Text Long Text',\n        columnKey: 'longText',\n        modalText: `\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. <strong>Mauris ut semper diam. Ut ultrices ullamcorper neque</strong>,\n            sed congue elit porttitor in. In at justo libero. Sed elementum bibendum ante id elementum. Aenean maximus ex at ornare tempor.\n            Vivamus vitae consequat justo.\n          </p>\n          <p>\n            Vivamus sed volutpat leo. Fusce placerat ante quis nulla tincidunt, quis viverra augue convallis.\n            Vestibulum et pretium eros, vel posuere nibh. Morbi ultrices, justo eu iaculis bibendum, turpis magna blandit mi, et tincidunt\n            nunc odio sed enim. Nulla eros mauris, facilisis sed fermentum id, dictum sollicitudin arcu. Donec id ligula interdum nisl\n            dignissim congue sit amet a velit. Integer velit justo, mattis eget ante sed, aliquam bibendum magna. Suspendisse bibendum,\n            enim quis pretium sollicitudin, odio felis posuere mi, id auctor ligula est sit amet magna.\n          </p>\n        `,\n      }),\n      new TableHeaderModel({\n        label: 'Status',\n        columnKey: 'status',\n        type: TableHeaderTypeEnum.SORT,\n      }),\n      new TableHeaderModel({\n        label: 'Action',\n        columnKey: 'action',\n      }),\n    ],\n    rows: [\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 1',\n            ariaLabel: 'Activate spacebar to select row 1',\n            checkboxValue: '1',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 1',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '1/1/2000',\n          }),\n          new TableCellModel({\n            label: 'Jim <span class=\"ds-c-badge ds-c-badge--alert\">New</span>',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Active',\n            icon: faCircle,\n            iconClass: 'ds-u-color--success',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 2',\n            ariaLabel: 'Activate spacebar to select row 2',\n            checkboxValue: '2',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 2',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '2/2/2002',\n          }),\n          new TableCellModel({\n            label: 'Pam',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Suspended',\n            icon: faCircle,\n            iconClass: 'ds-u-color--error',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 3',\n            ariaLabel: 'Activate spacebar to select row 3',\n            checkboxValue: '3',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 3',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '2/1/2004',\n          }),\n          new TableCellModel({\n            label: 'Dwight',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Active',\n            icon: faCircle,\n            iconClass: 'ds-u-color--success',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 4',\n            ariaLabel: 'Activate spacebar to select row 4',\n            checkboxValue: '4',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 4',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '1/5/2010',\n          }),\n          new TableCellModel({\n            label: 'Jim',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Inactive',\n            icon: faCircle,\n            iconClass: 'ds-u-color--gray',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n      new TableRowModel({\n        cells: [\n          new TableCellModel({\n            label: 'Row 5',\n            ariaLabel: 'Activate spacebar to select row 5',\n            checkboxValue: '5',\n            type: TableCellTypeEnum.CHECKBOX,\n            columnKey: 'checkbox',\n          }),\n          new TableCellModel({\n            label: 'Row 5',\n            type: TableCellTypeEnum.BUTTON,\n            class: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          }),\n          new TableCellModel({\n            label: '2/5/2010',\n          }),\n          new TableCellModel({\n            label: 'Stanley',\n            icon: faUser,\n            iconClass: 'ds-u-color--primary',\n          }),\n          new TableCellModel({\n            label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n          }),\n          new TableCellModel({\n            label: 'Inactive',\n            icon: faCircle,\n            iconClass: 'ds-u-color--gray',\n          }),\n          new TableCellModel({\n            type: TableCellTypeEnum.POPOVER,\n            popoverModel: this.popoverModel,\n          }),\n        ],\n      }),\n    ],\n    totalRows: 20,\n    summary: 'This table is an example implementation of the Table Component',\n    pagination: new TablePaginationModel({\n      isEnabled: true,\n      perPage: 5,\n      currentPage: 1,\n    }),\n  });\n\n  TooltipTriggerTypeEnum = TooltipTriggerTypeEnum;\n  TooltipPlacementEnum = TooltipPlacementEnum;\n\n  @ViewChild('tableComponent') table2Component: TableComponent;\n\n  constructor(private modalService: ModalService, private toastService: ToastService) {}\n\n  buttonClick(e) {\n    if (e.button) {\n      console.log(e);\n      this.modalService.appendComponentToBody(\n        AppTableModalComponent,\n        e.event.target.id,\n        'Modal Example',\n        e.button.array,\n        'cancelButton1'\n      );\n    } else {\n      console.log('Button pressed.');\n    }\n  }\n\n  ngOnInit() {\n    this.modalData = modalData;\n    this.chartData = chartData;\n    this.tableData = tableData;\n    this.tableHeaderData = tableHeaderData;\n    this.lineData = lineData;\n    this.dataSet = dataSet;\n    this.pieData = pieData;\n    this.cluster = cluster;\n    this.barData = barData;\n    this.singleTableData = singleTableData;\n    // console.log(this.tabTitle);\n    this.modalService.modalDestroyed.subscribe({\n      next: (id) => {\n        console.log(`The #${id} modal has just closed`);\n      },\n    });\n  }\n\n  searchFunction(e) {\n    if (e.target.value.trim() !== '') {\n      this.openAll = true;\n      this.searchText = e.target.value;\n      this.totalRows = 0;\n    } else {\n      this.openAll = false;\n      this.searchText = false;\n      this.totalRows = 0;\n    }\n  }\n\n  countTableRows(e) {\n    this.totalRows += e;\n  }\n\n  announce(e) {\n    console.log(e);\n    this.searchValue = e;\n  }\n\n  clear() {\n    this.resetSearch = true;\n  }\n\n  tabSelected(e) {\n    this.tabTitle = e.target.innerText;\n    this.tabDesc = this.tabs.filter((tab) => tab.title === e.target.innerText)[0].description;\n  }\n\n  uploadFile($event) {\n    console.log($event);\n    console.log(this.uploader.promptUpload());\n  }\n\n  showToast(message, title, variation) {\n    this.toastService.showToast(message, title, variation);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".ds-l-col--12 {\n    transition: all 1000ms ease-out;\n}\n\n.container {\n    width: 50%;\n    margin: 0 auto;\n    border: solid 1px black;\n}\n\n.ds-l-container {\n    max-width: 1680px;\n}",
          "styleUrl": "./app.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalService",
            "type": "ModalService"
          },
          {
            "name": "toastService",
            "type": "ToastService"
          }
        ],
        "line": 398,
        "jsdoctags": [
          {
            "name": "modalService",
            "type": "ModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "toastService",
            "type": "ToastService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<section class=\"ds-l-container preview__grid\">\n  <!-- UNCOMMENT CODE ON THIS PAGE TO SEE EXAMPLES OF COMPONENTS\n<br>\n<br> -->\n  <!-- \n<p>ACCORDION COMPONENT EXAMPLE</p>\n<app-accordion>\n    <app-panel\n        (panelClick) = \"announce($event)\"  \n        title ='Accordion Example' \n        extTitleClass = 'customizeExtra'\n        dataAutoId = 'dataID'\n        [extTitle] = true \n        [expand] = true\n        expandedClass = 'ds-u-fill--gray-lightest ds-u-border-top--0 ds-u-border--1 ds-u-border--dark ds-u-padding--2'\n        [openAll] = false>\n        <span>\n            Additional Title\n        </span>\n        <div>\n            Content Structure\n        </div>\n    </app-panel>\n    <app-panel \n        (panelClick) = \"announce($event)\"  \n        title ='Accordion Example' \n        extTitleClass = 'customizeExtra'\n        dataAutoId = 'dataID'\n        [extTitle] = true  \n        [expand] = false\n        [openAll] = false>\n        <span>\n            Additional Title 2\n        </span>\n        <div>\n            Content Structure 2\n        </div>\n    </app-panel>\n    <app-panel \n        (panelClick) = \"announce($event)\"  \n        title ='Accordion Example' \n        titleClass='ds-u-fill--success'\n        extTitleClass = 'customizeExtra'\n        dataAutoId = 'dataID'\n        [extTitle] = true  \n        [expand] = true\n        expandedClass = 'ds-u-padding-x--0'\n        [openAll] = false>\n        <div>\n                <div class='ds-u-fill--gray-lightest'>hey</div>\n                <div class='ds-u-fill--white'>hey</div>\n                <div class='ds-u-fill--gray-lightest'>hey</div>\n        </div>\n    </app-panel>\n</app-accordion> -->\n\n  <!-- ALERT COMPONENT EXAMPLE\n<app-alert\n    dataAutoId = 'dataID'\n    variation = 'Warn'\n    heading = 'Alert missing Documents'\n    [hideIcon] = false\n    [hideClose] = false\n    dataAutoId = 'testingID'>\n        you need to add more document examples<br />\n        i have added more examples\n</app-alert> -->\n\n  <!-- BAR GRAPH COMPONENT EXAMPLE\n<app-bar-graph\n    [data]=\"barData\"\n    title='Bar Graph Example'\n    id=1\n    colorScheme = 'aqua'\n    [showXAxis] = true\n    [showYAxis] = true\n    [showXAxisLabel] = true\n    [showYAxisLabel] = true\n    xAxisLabel = 'x label'  \n    yAxisLabel = 'y label'\n    [animations] = true\n    [roundDomains] = false\n    [gradient] = false\n    [compareBars] = false\n    [tooltipDisabled] = true\n    [barPadding] = 20\n    [showGridLines] = true\n    [roundEdges] = true\n    dataAutoId = 'testingID'>\n</app-bar-graph> -->\n\n  <!-- BUTTON COMPONENT EXAMPLE\n<app-button\n    ariaLabel = 'Button Example'\n    buttonType = 'ds-c-button--danger'\n    buttonID = 'Button1'\n    [ariaSort] = true\n    dataAutoId = 'testingID'\n    [disabled]='true'\n    (callBack) = 'announce($event)'>\n        Example Button\n</app-button> -->\n\n  <!-- CARD CLUSTER COMPONENT EXAMPLE\n<app-card-cluster \n    [cardArray]=\"cluster\"\n    buttonClicked='CardCluster1'\n    dataAutoId = 'testingID'\n    (passButton)=\"buttonClick($event)\">\n</app-card-cluster> -->\n\n  <!-- Choice COMPONENT EXAMPLE\n<app-choice\n    index = 0\n    value = 'choiceExample'\n    groupName = 'choicetoendallchoice'\n    [showTitle] = true\n    labelClass = 'choiceEx'\n    dataAutoId = 'testingID'\n    errorMessage = 'please check me'>\n</app-choice> -->\n\n  <!-- CIRCLE GRAPH COMPONENT EXAMPLE\n<app-circle-graph\n    dataAutoId = 'testingID'\n    [data]='pieData'\n    [animations]=true\n    [trimLabels]=true\n    [labels]=false\n    [doughnut]=true\n    arcWidth='.25'\n    [tooltipDisabled]=true\n    title='Error Free'\n    [hideGraph] = false\n    tableSummary='An example of a pie chart with a legend'\n    firstColumnName='Total Files'\n    buttonClicked='pieGraphCard1'\n    (passButton)='buttonClick($event)'>\n</app-circle-graph> -->\n\n  <!-- DATE-PICKER COMPONENT EXAMPLE\n<app-date-picker \n    label = 'Date Example'\n    dataAutoId = 'testingID'>\n</app-date-picker> -->\n\n  <!-- DOWNLOAD-QUE COMPONENT EXAMPLE\n<app-download-que>\n</app-download-que> -->\n\n  <!-- DROP DOWN COMPONENT EXAMPLE\n<app-drop-down\n    [options] = 'dropDown'\n    labelName = 'Drop down example'\n    selectClass = 'ds-c-field--medium'\n    [id] = 1\n    [defaultSelected] = 0\n    hintMessage = 'please choose a response'\n    errorMessage = 'please input correct response'\n    [error] = false\n    dataAutoId = 'testingID'\n    (selectedOption) = 'announce($event)'>\n</app-drop-down> -->\n\n  <!-- LINE GRAPH COMPONENT EXAMPLE\n<app-line-graph\n    [data]= 'lineData'\n    [animations] = true\n    [gradient] = true\n    [gridLines] = true\n    [roundDomain] = true\n    [xAxis] = true\n    [yAxis] = true\n    [showXLabel] = true\n    [showYLabel] = true\n    xLabel = 'X Label'\n    yLabel = 'Y Label'\n    [autoScale] = true\n    [timeLine] = true\n    [toolTip] = true\n    dataAutoId = 'testingID'\n    (LineClick) = \"announce($event)\">\n</app-line-graph> -->\n\n  <!-- SEARCH_FIELD COMPONENT EXAMPLE\n<div style='width: 460px;'>\n    <app-search-field \n        [reset]='resetSearch'\n        showReset = true \n        placeHolder='Search' \n        title='Search Field' \n        id='tableSearch' \n        inputClass='searchInput'\n        labelClass='searchLabel' \n        hint='Enter a search here' \n        hintClass='searchHint' \n        dataAutoId='testingID'\n        (userInput)='announce($event)' \n        (changes)=\"resetSearch = $event\">\n    </app-search-field>\n</div>\n<button (key.up)=\"clear()\" (click)=\"clear()\">\n    reset example\n</button> -->\n\n  <!-- SPINNER COMPONENT EXAMPLE\n<app-spinner\n    size = 'big'\n    color = 'success'\n    [filled] = true\n    [inversed] = true\n    [hide] = 'false'\n    dataAutoId = 'testingID'>\n</app-spinner> -->\n\n  <!-- STAR RATING COMPONENT EXAMPLE\n<app-star-rating\n    dataAutoId = 'testingID'\n    [width]=\"'10px'\"\n    [height]=\"'10px'\"\n    [starAmount]=\"5\"\n    [rating]=\"2\">\n</app-star-rating> -->\n\n  <!-- TABLE, SEARCH AND ACCORDION EXAMPLE\n<br/>\n<input type=\"text\" (keyup.enter)=\"searchFunction($event)\"/>\n<span>{{ totalRows }} results</span>\n<br/>\n<br/>\n<app-accordion>\n    <ng-container *ngFor=\"let dataObj of dataSet; let i = index\">\n        <app-panel *ngIf=\"dataObj\" \n                    [title]=\"dataObj.measureGroupName\"\n                    [openAll]=\"openAll\">\n            <span> data data data<br/> data data data</span>\n            <div *ngFor=\"let data of dataObj.measureSets; let in = index\">\n                <app-table\n                    [starRating]=\"3\"\n                    [index]=\"i + '_' + in\"\n                    [headers]=\"data ? data.tableHeaders: false\" \n                    [dataRows]=\"data.tableRows\"\n                    [searchText]=\"searchText\"\n                    [highlightSearch]=\"true\"\n                    [paginate]=\"true\"\n                    [maxRows]=\"4\"\n                    [tableTitle]=\"data.tableHeading\"\n                    [tableSummary]=\"data.tableSummary\"\n                    [linearScore]=\"'Linear Score (1-100): 61'\"\n                    [reportingPeriod]=\"'(Q1)2016-(Q2)2016'\"\n                    (buttonClick)=\"buttonClick($event)\"\n                    (paginateNext)=\"announce($event)\"\n                    (sortServer)=\"announce($event)\"\n                    (tableRowsFiltered)=\"countTableRows($event)\">\n                </app-table>\n            </div>\n        </app-panel>\n        <div *ngIf=\"!dataObj\" class=\"displayNone\" role=\"alert\">\n            No Results Found\n        </div>\n    </ng-container>\n</app-accordion> -->\n\n  <!--     \nTABLE AND PAGINATION\n<br/>\n<app-table\n    [headers]=\"singleTableData.tableHeaders\" \n    [dataRows]=\"singleTableData.tableRows\"\n    [paginate]=\"true\"\n    [total]=\"singleTableData.count\"\n    [maxRows]=10\n    (buttonClick)=\"buttonClick($event)\"\n    (paginateNext)=\"announce($event)\">\n</app-table> -->\n\n  <!-- TAB\n<br/>\n<app-tabs\n    [tabs]=\"tabs\"\n    tablistClassName=\"myTabs\"\n    defaultSelectedId=\"tab3\"\n    (onChange)=\"announce($event)\">\n</app-tabs> -->\n\n  <!-- TICKET COMPONENT EXAMPLE\n<div class=\"ds-l-row ds-u-padding-y--1\" style='max-width: 1280px;'>\n    <div class=\"ds-l-lg-col--4 ds-l-md-col--6 ds-l-sm-col--12\">\n        <app-ticket\n            dataAutoId = 'testingID'\n            [id]=\"'ticketComp'\"\n            [title]=\"'eCQM'\"\n            [description]=\"'Track status and validation of EHR patients.'\"\n            (buttonClick)=\"announce($event)\">\n            <img src=\"../assets/images/performance.svg\" width=\"50px\" height=\"50px\" alt=\"Place holder image\">\n        </app-ticket>\n    </div>\n    <div class=\"ds-l-lg-col--4 ds-l-md-col--6 ds-l-sm-col--12\">\n        <app-ticket\n            dataAutoId = 'testingID'\n            [id]=\"'ticketComp'\"\n            [title]=\"'eCQM'\"\n            [description]=\"'Track status and validation of EHR patients.'\"\n            (buttonClick)=\"announce($event)\">\n            <img src=\"../assets/images/performance.svg\" width=\"50px\" height=\"50px\" alt=\"Place holder image\">\n        </app-ticket>\n    </div>\n    <div class=\"ds-l-lg-col--4 ds-l-md-col--6 ds-l-sm-col--12\">\n        <app-ticket\n            dataAutoId = 'testingID'\n            [id]=\"'ticketComp'\"\n            [title]=\"'eCQM'\"\n            [description]=\"'Track status and validation of EHR patients. Track status Track status and validation of EHR patients. Track status Track status and validation of EHR patients. Track status'\"\n            (buttonClick)=\"announce($event)\">\n            <img src=\"../assets/images/performance.svg\" width=\"50px\" height=\"50px\" alt=\"Place holder image\">\n        </app-ticket>\n    </div>\n</div> -->\n\n  <!-- File Upload Component\n<app-file-upload [fileUploadModel]=\"fileUploadModel\" (onFileUpload)=\"announce($event)\" #uploader></app-file-upload>\n\n<app-button\n    (click)=\"uploadFile($event)\"\n>\n    Upload\n</app-button> -->\n\n  <!-- Code Snippet\n<app-code-snippet [codeSnippetModel]=\"codeSnippetModel\" #uploader></app-code-snippet> -->\n\n  <!-- Modal Component<br /> -->\n  <!-- <app-modal\n    id='modalExample'\n    modalTitle='modalTitle'\n    [modalData]='modalData'\n    content='Open Modal'\n    [modalComponent]='appTableModalComponent'\n>\n</app-modal> -->\n\n  <!-- Toast Component / Service<br />\n<app-button (click)=\"showToast('Error Message', 'Error Title', 'error')\">Show Error Toast</app-button><br />\n<app-button (click)=\"showToast('Success Message', 'Success Title', 'success')\">Show Success Toast</app-button><br />\n<app-button (click)=\"showToast('Warn Message', 'Warn Title', 'warn')\">Show Warn Toast</app-button><br />\n<app-button (click)=\"showToast('Normal Message', 'Normal Title', null)\">Show Normal Toast</app-button><br />\n\n\n</section> -->\n\n  <app-table-2 #tableComponent [tableModel]=\"tableModel\"> </app-table-2>\n\n  <hr />\n\n  <div class=\"ds-u-fill--primary-darkest ds-u-margin-bottom--2 ds-u-padding--6 ds-u-text-align--center\">\n    <app-tooltip\n      [tooltipModel]=\"{\n        id: 'tooltipButton',\n        triggerType: TooltipTriggerTypeEnum.BUTTON,\n        triggerContent: 'hover or click me!',\n        tooltipContent: 'hey this is my content and my colors are inverted!',\n        ariaLabel: 'this is my aria label',\n        triggerClass: 'ds-c-button--primary',\n        inversed: true\n      }\"\n    ></app-tooltip>\n  </div>\n  <div class=\"ds-u-padding--6 ds-u-text-align--center\">\n    <app-tooltip\n      [tooltipModel]=\"{\n        id: 'tooltipLink',\n        triggerType: TooltipTriggerTypeEnum.LINK,\n        triggerContent: 'hover or click me!',\n        tooltipContent: 'hey this is my content!',\n        ariaLabel: 'this is my aria label',\n        placement: TooltipPlacementEnum.RIGHT\n      }\"\n    ></app-tooltip>\n  </div>\n</section>\n"
    },
    {
      "name": "AppDatepickerComponent",
      "id": "component-AppDatepickerComponent-3bdc839b57f51145991d86e1042039ef",
      "file": "src/app/modules/date-picker/date-picker.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-date-picker",
      "styleUrls": ["./date-picker.component.css"],
      "styles": [],
      "templateUrl": ["./date-picker.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dataAutoId",
          "line": 10,
          "type": "string"
        },
        {
          "name": "label",
          "line": 9,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "currentDay",
          "defaultValue": "this.date.getDate()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "currentMonth",
          "defaultValue": "this.date.getMonth() + 1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "currentYear",
          "defaultValue": "this.date.getFullYear()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "date",
          "defaultValue": "new Date()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "errorMessage",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "max",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "selectedInput",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "valid",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "validateDate",
          "args": [
            {
              "name": "date",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-date-picker',\n    templateUrl: './date-picker.component.html',\n    styleUrls: ['./date-picker.component.css']\n})\nexport class AppDatepickerComponent {\n    @Input() label: string;\n    @Input() dataAutoId: string;\n\n    date = new Date();\n    currentDay = this.date.getDate();\n    currentMonth = this.date.getMonth() + 1;\n    currentYear = this.date.getFullYear();\n    valid = true;\n    selectedInput;\n    max: number;\n    errorMessage: string;\n\n    validateDate(date) {\n        const month = this.currentMonth;\n        const day = this.currentDay;\n        const year = this.currentYear;\n        const monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        // leap year check\n        if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\n          monthLength[1] = 29;\n        }\n        this.max = monthLength[month - 1]\n\n        if (month > 1 && month < 12) {\n            if (day < 0 || day > monthLength[month - 1]) {\n                // day is invalid\n                this.valid = false;\n                this.errorMessage = 'Day does not exist in this month';\n                this.selectedInput = 'day';\n                document.getElementById(this.selectedInput).focus();\n            } else {\n                this.valid = true;\n                this.errorMessage = '';\n            }\n        } else if (month < 1 || month > 12){\n            // month is invalid\n            this.valid = false;\n            this.errorMessage = 'Month entered does not exist';\n            this.selectedInput = 'month';\n            document.getElementById(this.selectedInput).focus();\n        } else {\n            this.valid = true;\n            this.errorMessage = '';\n        }\n    }\n}",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./date-picker.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<form #f=\"ngForm\" (input)=\"validateDate(f)\" attr.data-auto-id=\"{{dataAutoId}}\">\n    <fieldset class=\"ds-c-fieldset\">\n        <legend class=\"ds-c-label--error\">\n            <span *ngIf=\"label\" class=\"ds-u-font-weight--bold\">\n                {{label}}\n            </span>\n            <span *ngIf=\"!valid\" class=\"ds-c-field__hint ds-u-color--error\">\n                {{ errorMessage }}\n            </span>\n        </legend>\n        <div class=\"ds-l-form-row\">\n            <div class=\"ds-l-col--auto\">\n                <label class=\"ds-c-label ds-u-font-weight--normal ds-u-margin-top--1\" for=\"month\">\n                    Month\n                </label>\n                <input\n                    [disabled]=\"this.selectedInput !== 'month' && !valid\"\n                    [(ngModel)]=\"currentMonth\"\n                    class=\"ds-c-field ds-c-field--month\"\n                    [ngClass]=\"{'ds-c-field--error': selectedInput === 'month' && !valid}\"\n                    type=\"number\" \n                    min=\"1\" \n                    max=\"12\"\n                    id=\"month\"\n                    name=\"month\">\n            </div>\n            <div class=\"ds-l-col--auto\">\n                <label class=\"ds-c-label ds-u-font-weight--normal ds-u-margin-top--1\" for=\"day\">\n                    Day\n                </label>\n                <input\n                    [disabled]=\"this.selectedInput !== 'day' && !valid\"\n                    [ngClass]=\"{'ds-c-field--error': selectedInput === 'day' && !valid}\"\n                    [(ngModel)]=\"currentDay\"\n                    class=\"ds-c-field ds-c-field--day\" \n                    type=\"number\" \n                    min=\"1\" \n                    [max]=\"max\" \n                    id=\"day\"\n                    name=\"day\">\n            </div>\n            <div class=\"ds-l-col--auto\">\n                <label class=\"ds-c-label ds-u-font-weight--normal ds-u-margin-top--1\" for=\"year\">\n                    Year\n                </label>\n                <input\n                    [disabled]=\"this.selectedInput !== 'year' && !valid\"\n                    [ngClass]=\"{'ds-c-field--error': selectedInput === 'year' && !valid}\"\n                    [(ngModel)]=\"currentYear\"\n                    class=\"ds-c-field ds-c-field--year\" \n                    type=\"number\" \n                    id=\"year\"\n                    name=\"year\">\n            </div>\n        </div>\n    </fieldset>\n</form>"
    },
    {
      "name": "AppDropDownComponent",
      "id": "component-AppDropDownComponent-33f2cdb0d44b0b754174e7c6a079f67f",
      "file": "src/app/modules/drop-down/drop-down.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-drop-down",
      "styleUrls": ["./drop-down.component.css"],
      "styles": [],
      "templateUrl": ["./drop-down.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "line": 13,
          "type": "string"
        },
        {
          "name": "dataAutoId",
          "line": 20,
          "type": "string"
        },
        {
          "name": "defaultSelected",
          "defaultValue": "0",
          "line": 15
        },
        {
          "name": "defaultSelectedValue",
          "defaultValue": "''",
          "line": 16
        },
        {
          "name": "disabled",
          "line": 21,
          "type": "boolean"
        },
        {
          "name": "error",
          "line": 19,
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "line": 18,
          "type": "string"
        },
        {
          "name": "hintMessage",
          "line": 17,
          "type": "string"
        },
        {
          "name": "id",
          "defaultValue": "1",
          "line": 14
        },
        {
          "name": "labelClass",
          "line": 11,
          "type": "string"
        },
        {
          "name": "labelName",
          "line": 10,
          "type": "string"
        },
        {
          "name": "options",
          "line": 9
        },
        {
          "name": "selectClass",
          "line": 12,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "selectedOption",
          "defaultValue": "new EventEmitter<any>()",
          "line": 22,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "selectOption",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-drop-down',\n    templateUrl: './drop-down.component.html',\n    styleUrls: ['./drop-down.component.css']\n})\nexport class AppDropDownComponent {\n    @Input() options;\n    @Input() labelName: string;\n    @Input() labelClass: string;\n    @Input() selectClass: string;\n    @Input() ariaLabel: string;\n    @Input() id = 1;\n    @Input() defaultSelected = 0;\n    @Input() defaultSelectedValue = '';\n    @Input() hintMessage: string;\n    @Input() errorMessage: string;\n    @Input() error: boolean;\n    @Input() dataAutoId: string;\n    @Input() disabled: boolean;\n    @Output() selectedOption = new EventEmitter<any>();\n\n    selectOption(e) {\n        const selectedValue = e.target.value;\n        this.defaultSelectedValue = selectedValue;\n        this.defaultSelected = this.options.findIndex(option => option.value === selectedValue);\n\n        this.selectedOption.emit(selectedValue);\n    }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "select::-ms-expand {\n    display: none;\n}\n\n.disabled {\n  border: 2px solid #212121;\n}\n",
          "styleUrl": "./drop-down.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<label\n    *ngIf=\"labelName\" [ngClass]=\"labelClass\"\n    class=\"ds-c-label ds-u-margin-top--0 ds-u-sans\"\n    for=\"{{'dropdown-' + id}}\">\n    <span class=\"ds-u-font-weight--bold\">{{labelName}}</span>\n    <span *ngIf=\"hintMessage\" class=\"ds-c-field__hint ds-c-field__hint--inverse\">{{ hintMessage }}</span>\n    <span *ngIf=\"error\" class=\"ds-c-field__hint ds-u-color--error\" id=\"undefined-message\" role=\"alert\">{{ errorMessage }}</span>\n</label>\n<select\n        id=\"{{'dropdown-' + id}}\"\n        class=\"ds-c-field {{selectClass}} ds-u-margin-bottom--0 ds-u-display--inline-block\"\n        [ngClass]=\"{'ds-c-field--error': error, 'disabled': disabled}\"\n        [disabled]='disabled'\n        name=\"options\"\n        attr.aria-label=\"{{ ariaLabel || labelName }}\"\n        (change)=\"selectOption($event)\"\n        attr.data-auto-id=\"{{dataAutoId}}\">\n    <ng-container *ngFor=\"let option of options; let i = index\">\n        <option value=\"{{ option.value }}\" [selected]=\"i === defaultSelected || option.value === defaultSelectedValue\">\n            {{ option.content }}\n        </option>\n    </ng-container>\n</select>\n"
    },
    {
      "name": "AppLineGraphComponent",
      "id": "component-AppLineGraphComponent-5af9035231411edf6cbad155522befc7",
      "file": "src/app/modules/line-graph/line-graph.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-line-graph",
      "styleUrls": ["./line-graph.component.css"],
      "styles": [],
      "templateUrl": ["./line-graph.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "lineGraphModel",
          "line": 18,
          "type": "LineGraphModel"
        }
      ],
      "outputsClass": [
        {
          "name": "LineClick",
          "defaultValue": "new EventEmitter<object>()",
          "line": 20,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "alert",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "changeLegend",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "current",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "errorMessage",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "faInfoCircle",
          "defaultValue": "faInfoCircle",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "filterValues",
          "defaultValue": "[]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "flattenedDataArray",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "focusDot",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "legendDataArray",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "openInfoArea",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "rangeFrom",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "rangeTo",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "rFI",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "rTI",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "shadowData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "shadowDataCopy",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "TIMELINE_PLACEHOLDER",
          "defaultValue": "'TIMELINE_PLACEHOLDER'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "updateWidthClass",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "view",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "methodsClass": [
        {
          "name": "findTab",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 225,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "highlight",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 252,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "moveDot",
          "args": [
            {
              "name": "num",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 221,
          "jsdoctags": [
            {
              "name": "num",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 171
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        },
        {
          "name": "onSelect",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 343,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "openInfo",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 257,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "resize",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 265
        },
        {
          "name": "seeModel",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 261,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setNewRange",
          "args": [
            {
              "name": "rF",
              "type": ""
            },
            {
              "name": "rT",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 282,
          "jsdoctags": [
            {
              "name": "rF",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "rT",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setPosition",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 230
        },
        {
          "name": "setRangeFrom",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 333,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setRangeTo",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 338,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateSingleDataPointPaths",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 181
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit } from '@angular/core';\nimport { LineGraphModel } from './line-graph.model';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons'; \n\n\n@Component({\n  selector: 'app-line-graph',\n  templateUrl: './line-graph.component.html',\n  styleUrls: ['./line-graph.component.css']\n})\n\nexport class AppLineGraphComponent implements OnInit, AfterViewInit {\n    view: any[];\n    filterValues: any[] = [];\n    rangeFrom;\n    rangeTo;\n\n    @Input() lineGraphModel: LineGraphModel;\n\n    @Output() LineClick = new EventEmitter<object>();\n\n    current;\n    shadowData;\n    shadowDataCopy; // Used to reset the filter\n    errorMessage: string;\n    openInfoArea = false;\n    focusDot = 0;\n    flattenedDataArray = [];\n    legendDataArray = [];\n    rFI = null;\n    rTI = null;\n    updateWidthClass;\n    changeLegend;\n    alert;\n    faInfoCircle = faInfoCircle;\n\n    TIMELINE_PLACEHOLDER = 'TIMELINE_PLACEHOLDER';\n\n    ngOnInit() {\n\n        if (typeof SVGElement.prototype.contains === 'undefined') {\n            SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n        }\n\n        (function (window) {\n            try {\n                MouseEvent('test', false);\n                return false; // No need to polyfill\n            } catch (e) {\n            // Need to polyfill - fall through\n            }\n\n            // Polyfills DOM4 MouseEvent\n\n            var MouseEvent = function (eventType, params) {\n                params = params || { bubbles: false, cancelable: false };\n\n                const mouseEvent = document.createEvent('MouseEvent');\n\n                mouseEvent\n                .initMouseEvent(eventType, params.bubbles, params.cancelable, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n                return mouseEvent;\n            };\n\n            MouseEvent.prototype = Event.prototype;\n\n            (<any>window).MouseEvent = MouseEvent;\n        })(window);\n\n        this.resize();\n\n        this.shadowData = [];\n\n        // If xAxisValues is passed in, generate a new series and add it to the graph as the first line.\n        if (this.lineGraphModel.xAxisValues) {\n\n            // Find the smallest value from all other data series, and use that as the value for this new\n            // series in order to not skew the chart\n            let smallestValue;\n            for (const series of this.lineGraphModel.data) {\n                for (const seriesData of series.series) {\n                    if (!this.lineGraphModel.xAxisValues.includes(seriesData.name)) {\n                        console.warn(`The series ${series.name} has a datapoint for ${seriesData.name} but that was not included in the xAxisValues array.  This may cause unexpected issues and should be fixed.`)\n                    }\n\n                    if (!smallestValue || smallestValue > seriesData.value) {\n                        smallestValue = seriesData.value;\n                    }\n                }\n            }\n\n            // Create the new series using the smallest value\n            const xAxisValuesSeries = [];\n            for (const xAxisValue of this.lineGraphModel.xAxisValues) {\n                xAxisValuesSeries.push({\n                    name: xAxisValue,\n                    value: smallestValue,\n                });\n            }\n\n            // The graph has been configured to hide any series named 'TIMELINE_PLACEHOLDER' from the tooltip\n            this.shadowData.push({\n                name: this.TIMELINE_PLACEHOLDER,\n                series: xAxisValuesSeries\n            });\n        }\n\n        // ShadowData is now either an empty array or a newly generated series\n        // Append the rest of the data to this array\n        this.shadowData = this.shadowData.concat(this.lineGraphModel.data);\n\n        this.shadowDataCopy = this.shadowData.slice();\n\n        for (let x = 0; x <= this.shadowData[0].series.length; x++) {\n            if (this.shadowData[0].series[x]) {\n                this.filterValues.push({value : this.shadowData[0].series[x].name, content: this.shadowData[0].series[x].name});\n            }\n        }\n\n        this.rangeFrom = this.filterValues[0].value;\n        this.rangeTo = this.filterValues[this.filterValues.length - 1].value;\n\n        // use this function for the dots on the side START\n        let flattenedData: any = this.lineGraphModel.data;\n\n        flattenedData = flattenedData.map((x, ind) => {\n            return x.series.map(y => {\n                const val = (y.value === '') ? 'N/A' : y.value;\n                return {\n                    name: y.name,\n                    series: x.name,\n                    value: val,\n                    color: this.lineGraphModel.colorScheme.domain[ind]\n                };\n            });\n        });\n\n        flattenedData = flattenedData.reduce((acc, val) => acc.concat(val), []);\n\n        for (let x = 0; x < this.lineGraphModel.data[0].series.length; x++) {\n            const verticalTarget = this.lineGraphModel.data[0].series[x].name;\n            let label = '';\n\n            flattenedData.map(y => {\n                if (verticalTarget === y.name) {\n                    label += y.series.concat('-' + y.value + ' ');\n                }\n            });\n\n            this.flattenedDataArray.push(verticalTarget + ':' + label);\n        }\n        // use this function for the dots on the side END\n\n        // use this function for the legend START\n        for (let x = 0; x < this.shadowData[0].series.length; x++) {\n            const verticalTarget = this.shadowData[0].series[x].name;\n            const label = [];\n\n            flattenedData.map(y => {\n                if (verticalTarget === y.name) {\n                    label.push({ 'name' : y.series, 'value': y.value, 'color': y.color});\n                }\n            });\n\n            this.legendDataArray.push({ 'series' : verticalTarget, 'description' : label });\n        }\n        // use this function for the legend END\n    }\n\n    ngAfterViewInit() {\n        if (document.getElementsByClassName('tooltip-anchor')[0]) {\n            document.getElementsByClassName('tooltip-anchor')[0].setAttribute('width', '4');\n            this.updateSingleDataPointPaths();\n        }\n    }\n\n    // updateSingleDataPointPaths parses through all path dom elements and finds paths that have only one x/y data point\n    // Since paths with that criteria do not display, we have to \"smudge\" the path and add a second data point near the\n    // first one in order for it to show.\n    updateSingleDataPointPaths() {\n        const lineDotClass = 'lineDot';\n\n        // Remove the lineDot class from all elements\n        const allLineDots = document.querySelectorAll(`.${lineDotClass}`);\n        [].forEach.call(allLineDots, function(el: Element) {\n            el.classList.remove(lineDotClass);\n        });\n\n        const paths = document.querySelectorAll('path');\n        let pathCounter = 0;\n        Array.from(paths).forEach((path) => {\n            const pathData = path.getAttribute('d');\n            if (pathData) {\n                const pathDataParts = pathData.split(',');\n                if (pathDataParts.length === 2) {\n                    const startX = parseInt(pathDataParts[0].replace('M', ''), 10) - 1;\n                    const startY = parseInt(pathDataParts[1].replace('Z', ''), 10) - 1;\n                    const endX = startX + 2;\n                    const endY = startY + 2;\n\n                    pathDataParts[0] = `M${startX}`;\n                    pathDataParts[1] = `${startY}`;\n                    pathDataParts.push(`${endX}`);\n                    pathDataParts.push(`${endY}Z`);\n\n                    const pathDataNew = pathDataParts.join(',');\n                    const lineClass = document.querySelectorAll('path')[pathCounter].getAttribute('class');\n\n                    document.querySelectorAll('path')[pathCounter].setAttribute('d', pathDataNew);\n                    document.querySelectorAll('path')[pathCounter].setAttribute('stroke-linecap', 'round');\n                    document.querySelectorAll('path')[pathCounter].setAttribute('class', `${lineClass} lineDot`);\n\n                }\n            }\n            pathCounter++;\n        });\n        this.resize();\n    }\n\n    moveDot(num) {\n        this.focusDot += num;\n    }\n\n    findTab(e) {\n        if (e.target.id === 'lastModalTab') { document.getElementById('dropdown-' + this.lineGraphModel.xLabel + '_2').focus(); }\n        if (e.target.id === 'firstModalTab') { document.getElementById('marker_0').focus(); }\n    }\n\n    setPosition() {\n        setTimeout( () => {\n            const tickTransform = document.querySelectorAll('.x.axis .tick');\n            const container = document.getElementById('dotsContainer').getBoundingClientRect().left;\n\n            for (let x = 0; x < tickTransform.length; x++) {\n                const tick = tickTransform[x].getBoundingClientRect();\n                const left = tick.left - container;\n                const width = tick.width;\n\n                const target = document.getElementById('marker_' + x);\n\n                if (target) {\n                    target.style.left = left + 'px';\n                    target.style.width = width + 'px';\n                }\n\n            }\n        }\n        , 1000);\n    }\n\n    highlight(e) {\n        this.focusDot = e;\n        this.alert = 'alert';\n    }\n\n    openInfo(e) {\n         this.openInfoArea = !this.openInfoArea;\n    }\n\n    seeModel(e) {\n        return e;\n    }\n\n    resize() {\n        const graphContainer = document.getElementsByClassName('lineShell')[0].clientWidth;\n        this.view = [graphContainer, graphContainer / 2];\n\n        if (graphContainer < 544) {\n            this.updateWidthClass = 'ds-l-col--12';\n            this.changeLegend = true;\n            this.lineGraphModel.yAxis = false;\n        } else {\n            this.updateWidthClass = 'ds-l-col';\n            this.changeLegend = false;\n            this.lineGraphModel.yAxis = true;\n        }\n\n        this.setPosition();\n    }\n\n    setNewRange(rF, rT) {\n        // Reset Range\n        this.rFI = null;\n        this.rTI = null;\n\n        this.errorMessage = '';\n\n        this.shadowDataCopy.map(x => {\n            x.series.map((y, ind, arr) => {\n                // Set values if they are the first ones found\n                if (y.name === rF && this.rFI === null) {\n                    this.rFI = ind;\n                }\n                if (y.name === rT && this.rTI === null) {\n                    this.rTI = ind;\n                }\n            });\n        });\n\n        if (this.rFI < this.rTI) {\n            this.shadowData = this.shadowDataCopy.map(x => {\n                return {\n                    name: x.name,\n                    series: x.series.filter((y) => {\n                        // get index of curent data point in relation to the first line\n                        // assumption: the first series contains all datapoints\n                        let index;\n                        this.shadowDataCopy[0].series.some((line, i) => {\n                            if (line.name === y.name) {\n                                return index = i;\n                            }\n                        });\n\n                        // only return data points in this series that are between the selected datapoints in relation to the first serires\n                        return (index >= this.rFI && index <= this.rTI);\n                    })\n                };\n            });\n\n            this.focusDot = 0;\n            setTimeout(() => {\n                this.updateSingleDataPointPaths();\n            }, 0);\n        } else {\n            this.errorMessage = 'Incorrect range detected';\n        }\n\n        this.setPosition();\n        // needs refactoring, as of now we are rendering dates the exist in the graph but if the range doesnt make sense, we give an error\n    }\n\n    setRangeFrom(e) {\n        this.rangeFrom = e;\n        this.setNewRange(this.rangeFrom, this.rangeTo);\n    }\n\n    setRangeTo(e) {\n        this.rangeTo = e;\n        this.setNewRange(this.rangeFrom, this.rangeTo);\n    }\n\n    onSelect(e) {\n        // this.onLineClick.emit(e);\n    }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".legendContainer {\n    border: 1px solid #D6D7D9;\n    padding: 8px;\n    text-align: center;\n    margin-top: 16px;\n}\n\n.infoLogo {\n    color: #0071bc;\n}\n\nspan[id^=\"marker_\"] {\n    position: absolute;\n    text-align: center;\n    margin-top: -24px;\n}\n\n:host ::ng-deep .tick text {\n    font-size: 15px !important;\n    fill: #5B616B !important;\n}\n\n:host ::ng-deep .ng-star-inserted text {\n    font-size: 17px;\n    fill: #212121;\n    font-weight: 700;\n}\n\n:host ::ng-deep .gridline-path, \n:host ::ng-deep .refline-path {\n    stroke-width: 1.5 !important;\n}\n\n:host ::ng-deep rect.tooltip-anchor {\n    fill: #9BDAF1 !important;\n}\n\n:host ::ng-deep .line {\n    stroke-width: 3px;\n}\n\n:host ::ng-deep .line.lineDot {\n    stroke-width: 7px;\n}\n\n.xAxisLabel {\n    color: #212121;\n    font-size: 18px;\n    font-weight: bold;\n    margin-top: 8px;\n    margin-bottom: 8px;\n}\n\n.yAxisLabel {\n    color: #5B616B;\n    font-size: 16px;\n    margin-top: 8px;\n    margin-bottom: 8px;\n}\n\n.series {\n    color: #212121;\n    font-size: 16px;\n    display: inline-block;\n}\n\n.seriesValue {\n    color: #212121;\n    font-size: 16px;\n    font-weight: bold;\n    display: inline-block;\n}\n\n.seriesValue2 {\n    color: #212121;\n    font-size: 24px;\n    font-weight: bold;\n}\n\n.square {\n    width: 13px;\n    height: 13px;\n    display: inline-block;\n    margin-right: 5px;\n    margin-bottom: -1px; \n}\n\nul {\n    list-style:none;\n    padding:0;\n    margin:0;\n}\n\n.cycleValues li {\n    text-align: center;\n    width:25px;\n}\n\n.cycleValues {\n    text-align: center;\n}\n\n.seriesToolTip {\n    text-align: left;\n    padding: 5px 0;\n}\n\n.info {\n    background-image: url(../../../assets/css/images/info.svg);\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: 25px;\n    margin-left: 20px;\n}\n\n.alignRight {\n    text-align: right;\n}\n\n.leftArrowLegend {\n    transform: rotate(90deg);\n}\n\n.rightArrowLegend {\n     transform: rotate(-90deg);\n}\n\n#movingLegend li {\n    display: inline;\n}\n\n.ds-l-form-row {\n    margin-bottom:20px;\n}\n\n.ds-l-row, .ds-l-form-row {\n    margin-left: 0;\n    margin-right:0;\n}\n\n.arrowSelector {\n    padding-top: 5px;\n}\n\n.noSelect {\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently\n    supported by Chrome and Opera */\n    -webkit-tap-highlight-color: transparent;\n}\n\n.pointer {\n    cursor: pointer;\n}\n\n.legendLeft {\n    text-align: left;\n    font-size: 16px;\n}\n\n.legendRight {\n    text-align: right;\n    font-size: 16px;\n}\n\n.focus-trap-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n    outline: 0;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n}\n\n::ng-deep .remove-placeholder svg > g > g[clip-path] > g:first-child {\n    display: none;\n}\n\n/*******************\n *\n * hide specific elements of the line chart that are related to the placeholder data\n *\n ******************/\n\n::ng-deep .remove-placeholder svg > g > g[clip-path] > g:first-child {\n    display: none;\n}\n\n::ng-deep .remove-placeholder svg > g > g[clip-path] > g:last-child > g:nth-child(2) {\n    display: none;\n}",
          "styleUrl": "./line-graph.component.css"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit", "AfterViewInit"],
      "templateData": "<div class=\"mainGraphClass\" (window:load)=\"resize()\" (window:resize)=\"resize()\" id=\"strictLineGraph\" attr.data-auto-id=\"{{lineGraphModel.dataAutoId}}\">\n    \n    <div class=\"ds-l-form-row\">\n        <div class=\"ds-l-col--auto infoLogo pointer\" role=\"button\" [attr.aria-label]=\"'activate enter key to hear instructions for using the interactive line graph, you may need to use down arrow after you activate enter key if you are using Internet Explorer'\" tabindex=\"0\" (click)=\"openInfo($event)\" (keyup.enter)=\"openInfo($event)\">\n            <fa-icon [icon]=\"faInfoCircle\"></fa-icon>\n        </div>\n        <div *ngIf=\"openInfoArea\" class=\"ds-l-col\" id=\"openArea\" role=\"alert\">\n            Interactive Line Graph used to reflect {{lineGraphModel.yLabel}} over {{lineGraphModel.xLabel}}. You can use the dropdown range selector to view specific ranges of {{lineGraphModel.xLabel}}. You can also use tab to move down the x-axis.\n        </div>\n    </div>\n    \n    <div class=\"ds-l-form-row ds-u-justify-content--center\">\n        <div class=\"ds-l-col--auto\">\n            <app-drop-down\n                (selectedOption)=\"setRangeFrom($event)\"\n                [options] = \"filterValues\"\n                [labelName] = \"'From ' + lineGraphModel.xLabel\"\n                selectClass = 'ds-c-field--medium'\n                [id] = \"lineGraphModel.xLabel + '_1'\"\n                [defaultSelected]=\"0\"\n                [error]=\"errorMessage ? true : false\">\n            </app-drop-down>\n        </div>\n        <div class=\"ds-l-col--auto\">\n            <app-drop-down\n                (selectedOption)=\"setRangeTo($event)\"\n                [options] = \"filterValues\"\n                [labelName] = \"'To ' + lineGraphModel.xLabel\"\n                selectClass = 'ds-c-field--medium'\n                [id] = \"lineGraphModel.xLabel + '_2'\"\n                [defaultSelected]=\"filterValues.length - 1\"\n                [error]=\"errorMessage ? true : false\">\n            </app-drop-down>\n        </div>\n    </div>\n    \n    <div *ngIf=\"errorMessage\" class=\"ds-c-field__hint ds-u-color--error\" id=\"undefined-message\" role=\"alert\" style=\"text-align: center\">{{ errorMessage }}</div>\n    \n    <div tabindex=\"0\" class=\"focus-trap-hidden\" id=\"firstModalTab\" (focus)=\"findTab($event)\" aria-hidden=\"true\"></div>\n\n    <div \n        class=\"ds-l-form-row ds-u-justify-content-center ds-u-align-items--center\" \n        style=\"overflow: hidden;\"\n        [ngClass]=\"{'remove-placeholder': lineGraphModel.xAxisValues && lineGraphModel.xAxisValues.length}\"\n    >\n        <div class=\"ds-l-col--11 lineShell\" [attr.aria-hidden]=\"true\">\n            <ngx-charts-line-chart\n                [attr.aria-hidden]=\"true\"\n                [view]=\"view\"\n                [results]=\"shadowData\"\n                [scheme]=\"lineGraphModel.colorScheme\"\n                [animations]=\"lineGraphModel.animations\"\n                [gradient]=\"lineGraphModel.gradient\"\n                [showGridLines]=\"lineGraphModel.gridLines\"\n                [roundDomains]=\"lineGraphModel.roundDomain\"\n                [xAxis]=\"lineGraphModel.xAxis\"\n                [yAxis]=\"lineGraphModel.yAxis\"\n                [showXAxisLabel]=\"lineGraphModel.xLabel !== ''\"\n                [showYAxisLabel]=\"lineGraphModel.yLabel !== ''\"\n                [xAxisLabel]=\"lineGraphModel.xLabel\"\n                [yAxisLabel]=\"lineGraphModel.yLabel\"\n                [xAxisTickFormatting]=\"lineGraphModel.xAxisTickFormatting\"\n                [yAxisTickFormatting]=\"lineGraphModel.yAxisTickFormatting\"\n                [autoScale]=\"lineGraphModel.autoScale\"\n                [timeline]=\"lineGraphModel.timeline\"\n                [tooltipDisabled] = \"lineGraphModel.tooltipDisabled\"\n                (select)=\"onSelect($event)\">\n                <ng-template #tooltipTemplate let-model=\"model\">\n                    <div>\n                        <h1 class=\"ds-h6\" style=\"margin: 2px; font-weight: normal; color: white\">\n                            {{model.series}}\n                            <svg height=\"15\" width=\"15\">\n                              <circle cx=\"8\" cy=\"11\" r=\"3\" stroke=\"white\" stroke-width=\"1\" fill=\"white\" />\n                            </svg>\n                            {{ model.name }}</h1>\n                        <h3 class=\"ds-h4\" style=\"margin: 2px; font-weight: bold\">{{ model.value | graphToolTip }}</h3>\n                    </div>\n                </ng-template>\n                <ng-template #seriesTooltipTemplate let-model=\"model\">\n                    <div class=\"seriesToolTip\">\n                        <ul>\n                            <ng-container *ngFor=\"let mod of model; let i = index\">\n                                <li *ngIf=\"mod.series !== TIMELINE_PLACEHOLDER\">\n                                    <div class=\"square\" [ngStyle]=\"{'background':mod.color}\"></div>\n                                    <span style=\"display: inline-block; font-size: 1.25em;\">{{ mod.series }}</span>\n                                    <span style=\"display: inline-block; font-size:1.25em; font-weight: bold\"> : {{ mod.value | graphToolTip }}</span>\n                                </li>\n                            </ng-container>\n                            <span style=\"display: inline-block; font-size: 1.25em;\" *ngIf=\"model.length === 1 && model[0].series === TIMELINE_PLACEHOLDER\">\n                                There is no data available\n                            </span>\n                        </ul>\n                    </div>\n                </ng-template>\n            </ngx-charts-line-chart>\n        </div>\n        <div class=\"ds-l-col--1\"></div>\n    </div>\n    \n    <div tabindex=\"0\" class=\"focus-trap-hidden\" id=\"lastModalTab\" (focus)=\"findTab($event)\" aria-hidden=\"true\"></div>\n    \n    <div id=\"dotsContainer\" style=\"position:relative\">\n         <span *ngFor=\"let data of shadowData[0].series; let i = index\" [id]=\"'marker_' + i\" tabindex=\"0\"  (focus)=\"highlight(i)\" class=\"pointer\" [attr.aria-label]=\"flattenedDataArray[ i + rFI]\" [attr.role]=\"focusDot === i ? alert : null\">\n            <svg height=\"15\" width=\"20\" aria-hidden=\"true\" style=\"pointer-events: none;\">\n                <polygon aria-hidden=\"true\" points=\"0,20 10,5  20,20\" [attr.r]=\"focusDot === i ? 4 : 3\"  [attr.fill]=\"focusDot === i ? '#212121' : '#FFFFFF'\"></polygon>\n            </svg>\n        </span>\n    </div>\n    \n    <div class=\"ds-l-form-row ds-u-justify-content-center ds-u-align-items--center\">\n        <div class=\"ds-l-col--12 legendContainer ds-u-padding--0 ds-u-padding-bottom--3\">\n            \n            <div class=\"ds-l-row ds-u-justify-content-center ds-u-align-items--center ds-u-fill--gray-lightest ds-u-margin-bottom--3\">\n                <div class=\"ds-l-col--4 noSelect\">\n                    <span *ngIf=\"focusDot !== 0; else start\" tabindex=\"0\" class=\"arrowSelector pointer\" (click)=\"moveDot(-1)\" (keyup.enter)=\"moveDot(-1)\" [attr.aria-label]=\"'activate to move left through points on graph'\" role=\"button\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"18\" viewBox=\"0 0 26 26\" class=\"leftArrowLegend\">\n                            <path fill=\"#000\" fill-rule=\"nonzero\" d=\"M14.5022482 20.7706835L25.368705 9.89253597C25.7895683 9.48920863 26 8.99235612 26 8.39028777c0-.60206835-.2104317-1.09892086-.631295-1.5022482l-1.2508992-1.26843525C23.7086331 5.21043165 23.2059353 5 22.6155576 5c-.5786871 0-1.0872303.20458633-1.5197842.61960432L13 13.7270683 4.89253597 5.61960432C4.4833633 5.21043165 3.98066547 5 3.39028777 5c-.57868705 0-1.08723022.20458633-1.51978417.61960432L.61960432 6.88803957C.21043166 7.29721223 0 7.79991007 0 8.39028777c0 .5903777.20458633 1.09307554.61960432 1.5022482L11.4802158 20.7706835c.432554.4091726.9410971.6196043 1.5197842.6196043.5903777 0 1.0930755-.2045864 1.5022482-.6196043z\"/>\n                        </svg>\n                    </span>\n                    <ng-template #start>\n                        <span>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"18\" viewBox=\"0 0 26 26\" class=\"leftArrowLegend\">\n                                <path fill=\"#ddd\" fill-rule=\"nonzero\" d=\"M14.5022482 20.7706835L25.368705 9.89253597C25.7895683 9.48920863 26 8.99235612 26 8.39028777c0-.60206835-.2104317-1.09892086-.631295-1.5022482l-1.2508992-1.26843525C23.7086331 5.21043165 23.2059353 5 22.6155576 5c-.5786871 0-1.0872303.20458633-1.5197842.61960432L13 13.7270683 4.89253597 5.61960432C4.4833633 5.21043165 3.98066547 5 3.39028777 5c-.57868705 0-1.08723022.20458633-1.51978417.61960432L.61960432 6.88803957C.21043166 7.29721223 0 7.79991007 0 8.39028777c0 .5903777.20458633 1.09307554.61960432 1.5022482L11.4802158 20.7706835c.432554.4091726.9410971.6196043 1.5197842.6196043.5903777 0 1.0930755-.2045864 1.5022482-.6196043z\"/>\n                            </svg>\n                        </span>\n                    </ng-template>                \n                </div>\n\n                <div class=\"ds-l-col--4\">\n                    <div class=\"xAxisLabel\">\n                        <span *ngIf=\"lineGraphModel.xLabel\">\n                            {{ lineGraphModel.xLabel }} : \n                        </span>\n                        {{ legendDataArray[ focusDot + rFI].series }}\n                    </div>\n                    <div class=\"yAxisLabel\" *ngIf=\"lineGraphModel.yLabel\">{{  lineGraphModel.yLabel }}</div>\n                </div>\n\n                <div class=\"ds-l-col--4 noSelect\">\n                    <span *ngIf=\"focusDot !== shadowData[0].series.length - 1; else end\" tabindex=\"0\" class=\"arrowSelector pointer\" (click)=\"moveDot(1)\" (keyup.enter)=\"moveDot(1)\" [attr.aria-label]=\"'activate to move right through points on graph'\" role=\"button\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"18\" viewBox=\"0 0 26 26\" class=\"rightArrowLegend\">\n                            <path fill=\"#000\" fill-rule=\"nonzero\" d=\"M14.5022482 20.7706835L25.368705 9.89253597C25.7895683 9.48920863 26 8.99235612 26 8.39028777c0-.60206835-.2104317-1.09892086-.631295-1.5022482l-1.2508992-1.26843525C23.7086331 5.21043165 23.2059353 5 22.6155576 5c-.5786871 0-1.0872303.20458633-1.5197842.61960432L13 13.7270683 4.89253597 5.61960432C4.4833633 5.21043165 3.98066547 5 3.39028777 5c-.57868705 0-1.08723022.20458633-1.51978417.61960432L.61960432 6.88803957C.21043166 7.29721223 0 7.79991007 0 8.39028777c0 .5903777.20458633 1.09307554.61960432 1.5022482L11.4802158 20.7706835c.432554.4091726.9410971.6196043 1.5197842.6196043.5903777 0 1.0930755-.2045864 1.5022482-.6196043z\"/>\n                        </svg>\n                    </span>\n                    <ng-template #end>\n                    <span>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"18\" viewBox=\"0 0 26 26\" class=\"rightArrowLegend\">\n                            <path fill=\"#ddd\" fill-rule=\"nonzero\" d=\"M14.5022482 20.7706835L25.368705 9.89253597C25.7895683 9.48920863 26 8.99235612 26 8.39028777c0-.60206835-.2104317-1.09892086-.631295-1.5022482l-1.2508992-1.26843525C23.7086331 5.21043165 23.2059353 5 22.6155576 5c-.5786871 0-1.0872303.20458633-1.5197842.61960432L13 13.7270683 4.89253597 5.61960432C4.4833633 5.21043165 3.98066547 5 3.39028777 5c-.57868705 0-1.08723022.20458633-1.51978417.61960432L.61960432 6.88803957C.21043166 7.29721223 0 7.79991007 0 8.39028777c0 .5903777.20458633 1.09307554.61960432 1.5022482L11.4802158 20.7706835c.432554.4091726.9410971.6196043 1.5197842.6196043.5903777 0 1.0930755-.2045864 1.5022482-.6196043z\"/>\n                        </svg>\n                    </span>\n                    </ng-template>\n                </div>\n\n            </div>\n\n            <div *ngIf=\"changeLegend; else changeBack\" class=\"ds-l-row ds-u-justify-content-center ds-u-align-items--center\">\n                <div *ngFor=\"let data of legendDataArray[ focusDot + rFI].description ; let i = index\" class=\"{{updateWidthClass}}\">\n                    <div class=\"ds-l-form-row\">\n                        <div class=\"ds-l-col--auto legendLeft\">\n                            <div class=\"square\" [ngStyle]=\"{'background':data.color}\"></div>\n                            <span class=\"series\"> {{ data.name }} : </span>\n                        </div>\n                        <div class=\"ds-l-col legendRight\">\n                            <span class=\"seriesValue\"> {{ data.value }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <ng-template #changeBack>\n                <div class=\"ds-l-row ds-u-justify-content-center ds-u-align-items--center\">\n                    <div *ngIf=\"legendDataArray[ focusDot + rFI].description.length === 0\" class='ds-l-col'>\n                        There is no data available\n                    </div>\n                    <div *ngFor=\"let data of legendDataArray[ focusDot + rFI].description ; let i = index\" class=\"{{updateWidthClass}}\">\n                        <div class=\"square\" [ngStyle]=\"{'background':data.color}\"></div>\n                        <span class=\"series\"> {{ data.name }} : </span>\n                        <div class=\"seriesValue2\"> {{ data.value }}</div>\n                    </div>\n                </div>\n            </ng-template>\n\n        </div>\n    </div>\n\n</div>"
    },
    {
      "name": "AppModalComponent",
      "id": "component-AppModalComponent-b70895f0fafaa93d60cbbaf13aa120c3",
      "file": "src/app/modules/modal/modal.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-modal",
      "styleUrls": ["./modal.component.css"],
      "styles": [],
      "templateUrl": ["./modal.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "abbr",
          "line": 18,
          "type": "string"
        },
        {
          "name": "buttonClass",
          "line": 17,
          "type": "string"
        },
        {
          "name": "content",
          "line": 16,
          "type": "string"
        },
        {
          "name": "dataAutoId",
          "line": 20,
          "type": "string"
        },
        {
          "name": "firstFocus",
          "line": 15,
          "type": "string"
        },
        {
          "name": "id",
          "line": 19,
          "type": "string"
        },
        {
          "name": "modalComponent",
          "line": 14,
          "type": "any"
        },
        {
          "name": "modalData",
          "line": 13,
          "type": "Array<any>"
        },
        {
          "name": "modalTitle",
          "line": 12,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "addToBody",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ModalService } from '../../services/modal/modal.service';\n\n@Component({\n    selector: 'app-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.css']\n})\n\nexport class AppModalComponent {\n\n    @Input() modalTitle: any;\n    @Input() modalData: Array<any>;\n    @Input() modalComponent: any;\n    @Input() firstFocus: string;\n    @Input() content: string;\n    @Input() buttonClass: string;\n    @Input() abbr: string;\n    @Input() id: string;\n    @Input() dataAutoId: string;\n \n    constructor(private modalService: ModalService) {\n    }\n\n    addToBody(e) {\n        // build modal with service\n        this.modalService.appendComponentToBody(this.modalComponent, this.id, this.modalTitle, this.modalData, this.firstFocus);\n    }\n}",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./modal.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalService",
            "type": "ModalService"
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "modalService",
            "type": "ModalService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<button\n    type=\"button\"\n    id=\"{{id}}\"\n    (click)=\"addToBody($event)\" \n    (keyup.enter)=\"addToBody($event)\"\n    class=\"ds-c-button pointer\"\n    [ngClass]=\"buttonClass\"\n    attr.data-auto-id=\"{{dataAutoId}}\">\n        <ng-container *ngIf=\"abbr; else normal\">\n            {{ abbr }}\n        </ng-container>\n        <ng-template #normal>\n            {{ content }}\n        </ng-template>\n</button>\n"
    },
    {
      "name": "AppModalShellComponent",
      "id": "component-AppModalShellComponent-a29c8b2b69fa0c8e8f4bdce6850a79bc",
      "file": "src/app/modules/modal-shell/modal-shell.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-modal-shell",
      "styleUrls": ["./modal-shell.component.css"],
      "styles": [],
      "templateUrl": ["./modal-shell.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "bodyTemplate",
          "line": 26,
          "type": "TemplateRef<any>"
        },
        {
          "name": "dataAutoId",
          "line": 21,
          "type": "string"
        },
        {
          "name": "footerTemplate",
          "line": 27,
          "type": "TemplateRef<any>"
        },
        {
          "name": "headerTemplate",
          "line": 25,
          "type": "TemplateRef<any>"
        },
        {
          "name": "jawsBody",
          "line": 19,
          "type": "boolean"
        },
        {
          "name": "modalClass",
          "line": 17,
          "type": "string"
        },
        {
          "name": "modalCount",
          "line": 18,
          "type": "number"
        },
        {
          "name": "modalData",
          "line": 20
        },
        {
          "name": "modalTitle",
          "line": 16,
          "type": "any"
        }
      ],
      "outputsClass": [
        {
          "name": "closeModal",
          "defaultValue": "new EventEmitter<any>()",
          "line": 23,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "findTab",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onClose",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef\n} from '@angular/core';\n\n@Component({\n  selector: 'app-modal-shell',\n  templateUrl: './modal-shell.component.html',\n  styleUrls: ['./modal-shell.component.css']\n})\nexport class AppModalShellComponent {\n\n    @Input() modalTitle: any;\n    @Input() modalClass: string;\n    @Input() modalCount: number;\n    @Input() jawsBody: boolean;\n    @Input() modalData;\n    @Input() dataAutoId: string;\n\n    @Output() closeModal = new EventEmitter<any>();\n\n    @Input() headerTemplate: TemplateRef<any>;\n    @Input() bodyTemplate: TemplateRef<any>;\n    @Input() footerTemplate: TemplateRef<any>;\n\n    findTab(e) {\n        if (e.target.id === 'lastModalTab') { document.getElementById('closeButton' + this.modalCount).focus(); }\n        if (e.target.id === 'firstModalTab') {\n            const buttons = document.querySelectorAll('.ds-c-dialog__actions button');\n            if (buttons.length) {\n                (buttons[buttons.length - 1] as HTMLElement).focus();\n            }\n        }\n    }\n\n    onClose() {\n        this.closeModal.emit(true);\n    }\n\n    get getTitle() {\n        return {\n            modalHeader: {\n                modalTitle: this.modalTitle,\n                modalCount: this.modalCount\n            }\n        };\n    }\n\n    get getBody() {\n        return {\n            modalBody: {\n                modalData: this.modalData\n            }\n        };\n    }\n}",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".ds-c-dialog-wrap {\n    overflow: hidden;\n    padding: 0;\n}\n\n.focus-trap-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n    outline: 0;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n}\n\n.floatRight {\n    float: right;\n}\n\nh1 {\n    text-transform: capitalize;\n}\n\n.close {\n    display: none;\n}\n\n\n.tableClass {\n    display:table;\n    height: 100%;\n    width: 100%;\n}\n\n.cellClass {\n    display:table-cell;\n    vertical-align: middle;\n}\n\n.ds-c-dialog {\n    max-height: 100vh;\n    overflow-y:auto;\n}",
          "styleUrl": "./modal-shell.component.css"
        }
      ],
      "stylesData": "",
      "accessors": {
        "getTitle": {
          "name": "getTitle",
          "getSignature": {
            "name": "getTitle",
            "type": "",
            "returnType": "",
            "line": 43
          }
        },
        "getBody": {
          "name": "getBody",
          "getSignature": {
            "name": "getBody",
            "type": "",
            "returnType": "",
            "line": 52
          }
        }
      },
      "templateData": "<div id=\"{{'modalImplementation' + modalCount}}\" class=\"ds-c-dialog-wrap\" [attr.aria-modal]=\"true\" [attr.aria-labelledby]=\"'dialog-title-' + modalCount\" [attr.aria-describedby]=\"'dialog-body-' + modalCount\" role=\"dialog\" id=\"modalDialog\" id=\"modal\" (keyDown.esc)=\"onClose()\" attr.data-auto-id=\"{{dataAutoId}}\">\n    <div tabindex=\"0\" class=\"focus-trap-hidden\" id=\"firstModalTab\" (focus)=\"findTab($event)\" aria-hidden=\"true\"></div>\n        <div class=\"tableClass\">\n            <div class=\"cellClass\">\n                <div class=\"ds-c-dialog {{modalClass}}\" role=\"document\">\n                    <app-button\n                        class=\"floatRight\"\n                        (callBack)=\"onClose()\" \n                        [ariaLabel]=\"'Close modal dialog'\" \n                        [buttonType]=\"'modalTabIndex ds-c-button--transparent ds-c-dialog__close'\" \n                        [buttonID]=\"'closeButton'+modalCount\">\n                        Close\n                    </app-button>\n                    \n                    <ng-template #defaultHeader let-modalHeader=\"modalHeader\">\n                        <h1 class=\"ds-h1\" id=\"{{'dialog-title-' + modalHeader.modalCount}}\">\n                            {{modalHeader.modalTitle}}\n                        </h1>\n                    </ng-template>\n                    \n                    <ng-container *ngTemplateOutlet=\"headerTemplate ? headerTemplate : defaultHeader; context: getTitle\">\n                    </ng-container>\n\n                    <main [id]=\"jawsBody ? 'dialog-body-' + modalCount : ''\">\n\n                        <ng-template #defaultBody let-modalBody=\"modalBody\">\n                            <p>\n                                {{modalBody.modalData}}\n                            </p>\n                        </ng-template>\n\n                        <ng-container *ngTemplateOutlet=\"bodyTemplate ? bodyTemplate : defaultBody; context: getBody\">\n                        </ng-container>\n\n                        <aside class=\"ds-c-dialog__actions\">\n                            <ng-template #defaultFooter>\n                                <app-button\n                                    (callBack)=\"onClose()\" \n                                    [ariaLabel]=\"'Cancel modal'\" \n                                    [buttonType]=\"'modalTabIndex'\" \n                                    [buttonID]=\"'cancelButton'+modalCount\">\n                                    Cancel\n                                </app-button>\n                            </ng-template>\n\n                            <ng-container *ngTemplateOutlet=\"footerTemplate ? footerTemplate : defaultFooter\">\n                            </ng-container>\n                        </aside>\n                    </main>\n                </div>\n            </div>\n        </div>\n    <div tabindex=\"0\" class=\"focus-trap-hidden\" id=\"lastModalTab\" (focus)=\"findTab($event)\" aria-hidden=\"true\"></div>\n</div>"
    },
    {
      "name": "AppPaginationComponent",
      "id": "component-AppPaginationComponent-d625b74c6d6f4f15e671eaf66baec22a",
      "file": "src/app/modules/paging/paging.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-paging",
      "styleUrls": ["./paging.component.css"],
      "styles": [],
      "templateUrl": ["./paging.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dataAutoId",
          "line": 12,
          "type": "string"
        },
        {
          "name": "dataRows",
          "line": 10
        },
        {
          "name": "id",
          "line": 11
        },
        {
          "name": "screenReaderLabel",
          "defaultValue": "\"Table page link\"",
          "line": 13,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "currentPage",
          "defaultValue": "new EventEmitter<any>()",
          "line": 9,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "p",
          "defaultValue": "1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [
        {
          "name": "pageChanged",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-paging',\n  templateUrl: './paging.component.html',\n  styleUrls: ['./paging.component.css']\n})\nexport class AppPaginationComponent {\n  @Output() currentPage = new EventEmitter<any>();\n  @Input() dataRows;\n  @Input() id;\n  @Input() dataAutoId: string;\n  @Input() screenReaderLabel: string = \"Table page link\";\n\n  p = 1;\n\n  pageChanged(e) {\n    this.currentPage.emit(e);\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "::ng-deep .ngx-pagination {\n    padding-left: 0;\n    text-align:center;\n }",
          "styleUrl": "./paging.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<div class=\"pagination\" attr.data-auto-id=\"{{dataAutoId}}\">\n  <pagination-controls [id]=\"id\" (pageChange)=\"pageChanged($event)\" screenReaderPageLabel=\"{{screenReaderLabel}}\">\n  </pagination-controls>\n</div>"
    },
    {
      "name": "AppPanelComponent",
      "id": "component-AppPanelComponent-ac889be2aa14cf5f98e372e1cd262f65",
      "file": "src/app/modules/panel/panel.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-panel",
      "styleUrls": ["./panel.component.css"],
      "styles": [],
      "templateUrl": ["./panel.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "bypassPanelState",
          "defaultValue": "false",
          "line": 29
        },
        {
          "name": "dataAutoId",
          "line": 27,
          "type": "string"
        },
        {
          "name": "expand",
          "defaultValue": "false",
          "line": 24
        },
        {
          "name": "expandedClass",
          "defaultValue": "'ds-u-padding--2'",
          "line": 25
        },
        {
          "name": "extTitle",
          "defaultValue": "false",
          "line": 22
        },
        {
          "name": "extTitleClass",
          "line": 23,
          "type": "string"
        },
        {
          "name": "icon",
          "defaultValue": "faPlus",
          "line": 30,
          "type": "IconDefinition"
        },
        {
          "name": "iconExpanded",
          "defaultValue": "faMinus",
          "line": 31,
          "type": "IconDefinition"
        },
        {
          "name": "iconPlacement",
          "defaultValue": "PanelIconPlacementEnum.LEFT",
          "line": 32,
          "type": "PanelIconPlacementEnum"
        },
        {
          "name": "openAll",
          "defaultValue": "false",
          "line": 26
        },
        {
          "name": "plusClass",
          "defaultValue": "''",
          "line": 28
        },
        {
          "name": "title",
          "line": 16,
          "type": "string"
        },
        {
          "name": "titleClass",
          "defaultValue": "'ds-u-fill--primary-darkest ds-u-color--white ds-u-font-size--h4 ds-u-md-font-size--h3 ds-u-padding--2'",
          "line": 18
        },
        {
          "name": "titleExpanded",
          "line": 17,
          "type": "string"
        },
        {
          "name": "titlePlacement",
          "defaultValue": "PanelTitlePlacementEnum.TOP",
          "line": 20,
          "type": "PanelTitlePlacementEnum"
        }
      ],
      "outputsClass": [
        {
          "name": "panelClick",
          "defaultValue": "new EventEmitter<any>()",
          "line": 14,
          "type": "EventEmitter"
        },
        {
          "name": "plusAction",
          "defaultValue": "new EventEmitter<any>()",
          "line": 15,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "clicked",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "PanelIconPlacementEnum",
          "defaultValue": "PanelIconPlacementEnum",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "PanelTitlePlacementEnum",
          "defaultValue": "PanelTitlePlacementEnum",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40
        },
        {
          "name": "panelStateChange",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "plusActionClick",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Animations } from '../animations/animations';\nimport { PanelIconPlacementEnum, PanelTitlePlacementEnum } from './panel.models';\n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.css'],\n  animations: [Animations.animations],\n})\nexport class AppPanelComponent implements OnInit {\n  @Output() panelClick = new EventEmitter<any>();\n  @Output() plusAction = new EventEmitter<any>();\n  @Input() title: string;\n  @Input() titleExpanded: string;\n  @Input() titleClass =\n    'ds-u-fill--primary-darkest ds-u-color--white ds-u-font-size--h4 ds-u-md-font-size--h3 ds-u-padding--2';\n  @Input() titlePlacement: PanelTitlePlacementEnum = PanelTitlePlacementEnum.TOP;\n\n  @Input() extTitle = false;\n  @Input() extTitleClass: string;\n  @Input() expand = false;\n  @Input() expandedClass = 'ds-u-padding--2';\n  @Input() openAll = false;\n  @Input() dataAutoId: string;\n  @Input() plusClass = '';\n  @Input() bypassPanelState = false;\n  @Input() icon: IconDefinition = faPlus;\n  @Input() iconExpanded: IconDefinition = faMinus;\n  @Input() iconPlacement: PanelIconPlacementEnum = PanelIconPlacementEnum.LEFT;\n\n  clicked;\n  PanelIconPlacementEnum = PanelIconPlacementEnum;\n  PanelTitlePlacementEnum = PanelTitlePlacementEnum;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.expand) {\n      this.clicked = true;\n    }\n  }\n\n  panelStateChange(e) {\n    this.panelClick.emit(e);\n    if (!this.bypassPanelState) {\n      this.clicked = true;\n      this.expand = !this.expand;\n    }\n  }\n\n  plusActionClick(e) {\n    this.plusAction.emit(e);\n    this.clicked = true;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".panel {\n  padding: 3px;\n}\n.plusIcon fa-icon {\n  -moz-transition: all 0.3s ease;\n  transition: all 0.3s ease;\n  position: absolute;\n}\n\n.plusIcon .hideIcon {\n  opacity: 0;\n}\n",
          "styleUrl": "./panel.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 36
      },
      "implements": ["OnInit"],
      "templateData": "<ng-template #plusIcon>\n    <div class=\"ds-l-col--auto plusIcon ds-u-padding--0\"\n        (click)=\"plusActionClick($event)\"\n        (keyup.enter)=\"plusActionClick($event)\">\n        <fa-icon \n            [icon]=\"icon\"\n            [ngClass]=\"{'hideIcon': (expand || openAll)}\">\n        </fa-icon>\n        <fa-icon \n            [icon]=\"iconExpanded\"\n            [ngClass]=\"{'hideIcon': !(expand || openAll)}\">\n        </fa-icon>\n    </div>\n</ng-template>\n\n<ng-template #panelTitle>\n    <div\n    class=\"ds-l-row ds-u-align-items--top ds-u-justify-content--center ds-u-margin--0 pointer panel\"\n    [ngClass]=\"titleClass\"\n    (click)=\"panelStateChange($event)\"\n    (keyup.enter)=\"panelStateChange($event)\"\n    tabindex=\"0\"\n    role=\"button\"\n    [attr.aria-expanded]=\"expand || openAll\"\n    attr.data-auto-id=\"{{dataAutoId}}\"\n>\n    <ng-container *ngIf=\"iconPlacement === PanelIconPlacementEnum.LEFT\">\n        <ng-container *ngTemplateOutlet=\"plusIcon\"></ng-container>\n        <div class='ds-l-col--auto'></div>\n    </ng-container>\n\n    <div class=\"ds-l-col--auto ds-u-padding-left--0 title\">\n        <ng-container *ngIf=\"title else titleComplex\">{{ (titleExpanded && (expand || openAll)) ? titleExpanded : title }}</ng-container>\n        <ng-template #titleComplex><ng-content select=\"ng-container\"></ng-content></ng-template>\n    </div>\n    <ng-container *ngIf=\"iconPlacement === PanelIconPlacementEnum.INLINE\">\n        <ng-container *ngTemplateOutlet=\"plusIcon\"></ng-container>\n    </ng-container>\n\n\n    <div [ngClass]=\"extTitleClass\" class=\"extTitle ds-l-col ds-u-text-align--right\">\n        <ng-content *ngIf=\"extTitle\" select=\"span\"></ng-content>\n    </div>\n\n    <ng-container *ngIf=\"iconPlacement === PanelIconPlacementEnum.RIGHT\">\n        <ng-container *ngTemplateOutlet=\"plusIcon\"></ng-container>\n        <div class='ds-l-col--auto'></div>\n    </ng-container>\n</div>\n\n</ng-template>\n\n<div class=\"ds-l-container ds-u-margin-bottom--3 ds-u-padding--0\">\n    \n    <ng-container *ngIf=\"titlePlacement === PanelTitlePlacementEnum.TOP\">\n        <ng-container *ngTemplateOutlet=\"panelTitle\"></ng-container>\n    </ng-container>\n\n    <div\n        *ngIf=\"expand || openAll\"\n        [@fadeInTrigger]=\"expand\"\n        [ngClass]=\"expandedClass\"\n    >\n        <ng-content select=\"div\"></ng-content>\n    </div>\n\n    <ng-container *ngIf=\"titlePlacement === PanelTitlePlacementEnum.BOTTOM\">\n        <ng-container *ngTemplateOutlet=\"panelTitle\"></ng-container>\n    </ng-container>\n</div>\n"
    },
    {
      "name": "AppPlusComponent",
      "id": "component-AppPlusComponent-5c2c0a3113ae580e82dccce906deca85",
      "file": "src/app/modules/plus/plus.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-plus",
      "styleUrls": ["./plus.component.css"],
      "styles": [],
      "templateUrl": ["./plus.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "clicked",
          "line": 10,
          "type": "boolean"
        },
        {
          "name": "expand",
          "line": 9,
          "type": "boolean"
        },
        {
          "name": "plusClass",
          "defaultValue": "''",
          "line": 11
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "svgPlusClass",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "methodsClass": [
        {
          "name": "expanded",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15
        },
        {
          "name": "retracted",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnChanges} from '@angular/core';\n\n@Component({\n  selector: 'app-plus',\n  templateUrl: './plus.component.html',\n  styleUrls: ['./plus.component.css']\n})\nexport class AppPlusComponent implements OnChanges {\n    @Input() expand: boolean;\n    @Input() clicked: boolean;\n    @Input() plusClass = '';\n\n    svgPlusClass = '';\n\n    ngOnChanges() {\n        if (this.clicked) {\n            (this.expand) ? this.expanded() : this.retracted();\n        } else {\n            this.svgPlusClass = '';\n        }\n    }\n\n    expanded() {\n        this.svgPlusClass = 'expand';\n    }\n\n    retracted() {\n        this.svgPlusClass = 'collapse';\n    }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@keyframes rotate-open {\n  0% {\n    transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(45deg);\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n  }\n  100% {\n    transform: rotate(90deg);\n    -webkit-transform: rotate(90deg);\n    -ms-transform: rotate(90deg);\n  }\n}\n\n@keyframes rotate-close {\n  0% {\n    transform: rotate(90deg);\n    -webkit-transform: rotate(90deg);\n    -ms-transform: rotate(90deg);\n  }\n  50% {\n    transform: rotate(45deg);\n     -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n  }\n  100% {\n    transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    -ms-transform: rotate(0deg);\n  }\n}\n\n.plusContainer {\n    position: relative;\n    border: 2px solid transparent;\n}\n\n.verticalBar, .horizontalBar {\n    background-color: white;\n    padding: 8px 2px;\n    position: absolute;\n    top: 30%;\n}\n\n.horizontalBar {\n    transform: rotate(90deg);\n    -webkit-transform: rotate(90deg);\n    -ms-transform: rotate(90deg);\n}\n\n#plus {\n  padding-top: 28px;\n  padding-bottom: 28px;\n}\n\n.verticalBar.expand {\n  animation-name: rotate-open;\n  animation-iteration-count: 1;\n  animation-duration: 0.2s;\n  animation-fill-mode: forwards;\n\n}\n\n.verticalBar.collapse{\n  animation-name: rotate-close;\n  animation-iteration-count: 1;\n  animation-duration: 0.2s;\n  animation-fill-mode: forwards;\n}\n",
          "styleUrl": "./plus.component.css"
        }
      ],
      "stylesData": "",
      "implements": ["OnChanges"],
      "templateData": "<span class=\"pointer plusContainer\">\n    <div class=\"verticalBar\" [ngClass]=\"[svgPlusClass, plusClass]\"></div>\n    <div class=\"horizontalBar\" [ngClass]=\"plusClass\"></div>\n</span>\n"
    },
    {
      "name": "AppTableComponent",
      "id": "component-AppTableComponent-cb3d8073bed71320a8092feb5435a6c9",
      "file": "src/app/modules/table/table/table.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-table",
      "styleUrls": ["./table.component.css"],
      "styles": [],
      "templateUrl": ["./table.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dataRows",
          "line": 14
        },
        {
          "name": "headers",
          "line": 13
        },
        {
          "name": "highlightSearch",
          "defaultValue": "true",
          "line": 25
        },
        {
          "name": "index",
          "line": 12
        },
        {
          "name": "linearScore",
          "line": 23
        },
        {
          "name": "maxRows",
          "line": 21
        },
        {
          "name": "p",
          "line": 26,
          "type": "number"
        },
        {
          "name": "paginate",
          "line": 17
        },
        {
          "name": "paginateLabel",
          "defaultValue": "\"Table page link\"",
          "line": 18
        },
        {
          "name": "reportingPeriod",
          "line": 24
        },
        {
          "name": "searchText",
          "defaultValue": "''",
          "line": 19
        },
        {
          "name": "starRating",
          "line": 20
        },
        {
          "name": "tableClass",
          "line": 11
        },
        {
          "name": "tableSummary",
          "line": 15
        },
        {
          "name": "tableTitle",
          "line": 16
        },
        {
          "name": "total",
          "line": 22
        }
      ],
      "outputsClass": [
        {
          "name": "buttonClick",
          "defaultValue": "new EventEmitter<any>()",
          "line": 27,
          "type": "EventEmitter"
        },
        {
          "name": "paginateNext",
          "defaultValue": "new EventEmitter<any>()",
          "line": 29,
          "type": "EventEmitter"
        },
        {
          "name": "sortServer",
          "defaultValue": "new EventEmitter<any>()",
          "line": 30,
          "type": "EventEmitter"
        },
        {
          "name": "tableRowsFiltered",
          "defaultValue": "new EventEmitter<any>()",
          "line": 28,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "asc",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "displayRows",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "headerEvent",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "headerLength",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "indexArray",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "rowHeader",
          "defaultValue": "'row Header'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "selected",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "sortCallback",
          "defaultValue": "{}",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methodsClass": [
        {
          "name": "callBack",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 97,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mapHeader",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59
        },
        {
          "name": "passHeaderEvent",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "passPage",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, SimpleChanges, OnInit, OnChanges } from '@angular/core';\nimport { FilterPipe } from '../../../pipes/filter.pipe'\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\n\nexport class AppTableComponent implements OnInit, OnChanges {\n    @Input() tableClass;\n    @Input() index;\n    @Input() headers;\n    @Input() dataRows;\n    @Input() tableSummary;\n    @Input() tableTitle;\n    @Input() paginate;\n    @Input() paginateLabel = \"Table page link\";\n    @Input() searchText = '';\n    @Input() starRating;\n    @Input() maxRows;\n    @Input() total;\n    @Input() linearScore;\n    @Input() reportingPeriod;\n    @Input() highlightSearch = true;\n    @Input() p: number;\n    @Output() buttonClick = new EventEmitter<any>();\n    @Output() tableRowsFiltered = new EventEmitter<any>();\n    @Output() paginateNext = new EventEmitter<any>();\n    @Output() sortServer = new EventEmitter<any>();\n\n    headerLength;\n    headerEvent;\n    selected;\n    rowHeader = 'row Header';\n    asc = false;\n    indexArray = [];\n    displayRows;\n    sortCallback = {};\n\n    constructor(private filter: FilterPipe) {\n    }\n\n    // refactor to have one function that emits for pagination, sorting and searching in server. since they all have to move together.\n    mapHeader() {\n        this.headers.map(x => {\n            if (x.header.attr) {\n                if (x.header.attr === 'asc') {\n                    this.asc = true;\n                } else if (x.header.attr === 'des') {\n                    this.asc = false;\n                }\n                this.selected = x.header.prop;\n                if (!x.header.sortServer) { this.headerEvent = {name: true, id: x.header.prop, asc: this.asc}; }\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.headerLength = this.headers.length;\n        this.mapHeader();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.mapHeader();\n        if (changes.searchText) {\n            this.displayRows = this.filter.transform(this.dataRows, this.searchText);\n            (this.displayRows[0]) ? this.tableRowsFiltered.emit(this.displayRows.length) : this.tableRowsFiltered.emit(0);\n        } else {\n            this.displayRows = this.dataRows;\n            this.tableRowsFiltered.emit(this.displayRows.length);\n        }\n    }\n\n    passPage(e) {\n        this.p = e;\n        this.paginateNext.emit({\n            page: this.p,\n            sort: this.sortCallback\n        });\n    }\n\n    passHeaderEvent(e) {\n        if (e.header === 'sort') {\n            this.selected = e.e.target.id;\n            if (!e.sortServer) { this.headerEvent = e; }\n            this.sortCallback = {\n                name: e.e.target.innerText,\n                target: this.selected,\n                asc: e.asc\n            };\n\n            this.sortServer.emit(this.sortCallback);\n        }\n    }\n\n    callBack(e) {\n        this.buttonClick.emit(e);\n    }\n}",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".table-background {\n    overflow-x: auto;\n    margin-bottom:25px;\n}\n\ntable {\n    width: 100%;\n    border-collapse: collapse;\n    min-width:500px;\n    table-layout: fixed;\n}\n\ncaption {\n    text-align: left;\n    font-weight: bold;\n    font-size: 20px;\n    background-color:#e1f3f8;\n    padding: 10px;\n    margin-bottom: 25px;\n}\n\nth {\n    background-color: #f1f1f1;\n    vertical-align: middle;\n    height:55px;\n    font-size: 16px;\n    text-align: left;\n    padding-left: 24px;\n    padding-right: 24px;\n    max-width: 100%;\n}\n\ntbody tr:hover {\n    background:#f1f1f1;\n}\n\n.noResults {\n    text-align:center;\n    padding:20px; \n    font-weight: bold; \n    font-size: 16px;\n}\n\ncaption {\n    overflow: hidden;\n}\n\n.linearScoreShell {\n    color: #5B616B;\n    font-size: 16px;\n}\n\n.starRatingShell {\n    margin-right: 8px;\n}\n\n.reportingPeriodShell {\n    float: right;\n    color: #5B616B;\n    font-size: 16px;\n}\n\n@media only screen and (max-width: 768px) {\n    table {\n        table-layout: auto;\n    }\n}",
          "styleUrl": "./table.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "filter",
            "type": "FilterPipe"
          }
        ],
        "line": 39,
        "jsdoctags": [
          {
            "name": "filter",
            "type": "FilterPipe",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnChanges"],
      "templateData": "<div class=\"table-background ds-c-table--borderless table-deprecated\">\n    <table summary=\"{{ tableSummary }}\" role=\"grid\" [attr.aria-label]=\"tableTitle\" [ngClass]=\"tableClass\">\n        <caption *ngIf=\"tableTitle\" class=\"tableHeading\">\n            {{ tableTitle }}\n            <ng-container *ngIf=\"reportingPeriod\">\n                <span class=\"reportingPeriodShell\">{{reportingPeriod}}</span>\n            </ng-container>\n            <ng-container *ngIf=\"starRating\">\n                <br>\n                <span class=\"starRatingShell\">\n                    <app-star-rating [rating]=\"starRating\" [width]=\"'18px'\" [height]=\"'18px'\"></app-star-rating>\n                </span>\n            </ng-container>\n            <ng-container *ngIf=\"linearScore\">\n                <span class=\"linearScoreShell\">{{linearScore}}</span>\n            </ng-container>\n        </caption>\n        <thead *ngIf=\"headers\" class=\"tableHeading\">\n            <tr>\n                <th *ngFor=\"let header of headers; let i = index\" title=\"{{header.header.value}}\"\n                    app-table-header\n                        [asc]=\"asc\"\n                        [header]=\"header\"\n                        [selected]=\"selected\"\n                        (onHeaderClick)=\"passHeaderEvent($event)\"\n                    scope=\"col\">\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <ng-container *ngFor=\"let dataRow of displayRows | sorting: headerEvent | paginate: { itemsPerPage: maxRows, currentPage: p, id: index, totalItems: total }; let x = index;\">\n                <tr *ngIf=\"dataRow\" \n                    [attr.data-auto-id]=\"dataRow.row_Header.value + '_' + index + '_' + x\" \n                    app-table-row\n                        [searchText]=\"searchText\"\n                        [highlightSearch]=\"highlightSearch\"\n                        [dataRow]=\"dataRow\" \n                        [headers]=\"headers\" \n                        [rowHeader]=\"dataRow.row_Header.value\" \n                        [index]=\"index + '_' + x\"\n                        (onCallBack)=\"callBack($event)\">\n                </tr>\n                <tr *ngIf=\"!dataRow\" class=\"noResults\" role=\"alert\">\n                    <td [attr.colspan]=\"headerLength\" class=\"noResults\" tabindex=\"0\">No Results Found</td>\n                </tr>\n            </ng-container>\n        </tbody>\n    </table>\n</div>\n<app-paging *ngIf = \"paginate\"\n    [id]=\"index\"\n    [dataRows]=\"dataRows\" \n    (currentPage)=\"passPage($event)\"\n    [screenReaderLabel]=\"paginateLabel\">\n</app-paging>"
    },
    {
      "name": "AppTableDataComponent",
      "id": "component-AppTableDataComponent-188afb3b2705e4c3f8e3d7fda6eb1027",
      "file": "src/app/modules/table/table-data/table-data.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "[app-table-data]",
      "styleUrls": ["./table-data.component.css"],
      "styles": [],
      "templateUrl": ["./table-data.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "data",
          "line": 10
        },
        {
          "name": "dataClass",
          "line": 11
        },
        {
          "name": "highlightSearch",
          "line": 14
        },
        {
          "name": "index",
          "line": 12
        },
        {
          "name": "searchText",
          "line": 13
        }
      ],
      "outputsClass": [
        {
          "name": "callBack",
          "defaultValue": "new EventEmitter<any>()",
          "line": 16,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "buttonCallback",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "tableCellText",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 18
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n  selector: '[app-table-data]',\n  templateUrl: './table-data.component.html',\n  styleUrls: ['./table-data.component.css']\n})\n\nexport class AppTableDataComponent {\n    @Input() data;\n    @Input() dataClass;\n    @Input() index;\n    @Input() searchText;\n    @Input() highlightSearch;\n\n    @Output() callBack = new EventEmitter<any>();\n\n    tableCellText(): string {\n        return this.data.value.abbr ? this.data.value.abbr : this.data.value.value;\n    }\n\n    buttonCallback(e) {\n        this.callBack.emit({\n            'event' : e,\n            'button': this.data.value.instanceRef\n        });\n    }\n\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./table-data.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "\n\n<div *ngIf=\"data.value.el === 'default'\"\n    [id]=\"data.value.id\"\n    class=\"{{data.key + ' ' + dataClass}}\"\n    [ngClass]=\"data.value.attr ? data.value.attr : false\"\n    [attr.title]=\"!data.value.title ? data.value.value : data.value.title\"\n    tabindex=\"0\"\n>\n    <fa-icon *ngIf=\"data.value.icon\" [icon]=\"data.value.icon\"></fa-icon>\n    {{ tableCellText() | highlightSearch: searchText: highlightSearch }}\n</div>\n\n<div *ngIf=\"data.value.el === 'link'\"\n    [id]=\"data.value.id\"\n    class=\"{{data.key + ' ' + dataClass}}\"\n    [ngClass]=\"data.value.attr ? data.value.attr : false\"\n    [attr.title]=\"!data.value.title ? data.value.value : data.value.title\"\n>   \n    <a \n        [routerLink]=\"data.value.href\"\n        [attr.aria-label]=\"data.value.ariaLabel ? data.value.ariaLabel : tableCellText()\"\n    >\n        <fa-icon *ngIf=\"data.value.icon\" [icon]=\"data.value.icon\"></fa-icon>\n        {{ tableCellText() | highlightSearch: searchText: highlightSearch }}\n    </a>\n</div>\n\n<div *ngIf=\"data.value.el === 'popover'\" \n    [id]=\"data.value.id\"\n    class=\"{{data.key + ' ' + dataClass}}\"\n    [ngClass]=\"data.value.attr ? data.value.attr : false\"\n    [attr.title]=\"!data.value.title ? data.value.value : data.value.title\"\n    tabindex=\"0\"\n>\n    <app-popover *ngIf=\"data.value.popoverModel\" [popoverModel] = 'data.value.popoverModel'>\n        <fa-icon *ngIf=\"data.value.icon\" [icon]=\"data.value.icon\"></fa-icon>\n    </app-popover>\n</div>\n<!--\n<div *ngIf=\"data.value.el === 'checkbox'\" \n     class=\"{{data.key + ' ' + dataClass}}\"\n     [ngClass]=\"data.value.attr ? data.value.attr : false\"\n     [attr.title]=\"!data.value.title ? data.value.value : data.value.title\">\n    <app-choice\n        [value]=\"data.value.value\"\n        [groupName]=\"data.value.attr\"\n        [showTitle]=\"false\"\n        [index]=\"index\">\n    </app-choice>\n</div>\n-->\n\n<button *ngIf=\"data.value.el === 'button'\"\n    [id]=\"data.value.id\"\n    [disabled]=\"data.value.disabled ? data.value.disabled: false\"\n    [attr.title]=\"!data.value.title ? data.value.value : data.value.title\"\n    [attr.aria-label]=\"data.value.ariaLabel ? data.value.ariaLabel : tableCellText()\"\n    type=\"button\"\n    (click)=\"buttonCallback($event)\" \n    (keyup.enter)=\"buttonCallback($event)\" \n    class=\"ds-c-button pointer {{data.key + ' ' + dataClass}}\"\n    [ngClass]=\"'tableCell ' + data.value.attr + ' ' + dataClass\"\n>\n    <fa-icon *ngIf=\"data.value.icon\" [icon]=\"data.value.icon\"></fa-icon>\n    {{ tableCellText() | highlightSearch: searchText: highlightSearch }}\n</button>\n"
    },
    {
      "name": "AppTableHeaderComponent",
      "id": "component-AppTableHeaderComponent-394c13013fa0133122a0ff889ecf5ce2",
      "file": "src/app/modules/table/table-header/table-header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "[app-table-header]",
      "styleUrls": ["./table-header.component.css"],
      "styles": [],
      "templateUrl": ["./table-header.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "asc",
          "line": 13
        },
        {
          "name": "header",
          "line": 10
        },
        {
          "name": "selected",
          "line": 11
        }
      ],
      "outputsClass": [
        {
          "name": "onHeaderClick",
          "defaultValue": "new EventEmitter<object>()",
          "line": 12,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getHeader",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleDirection",
          "args": [],
          "optional": false,
          "returnType": "\"ascending\" | \"descending\"",
          "typeParameters": [],
          "line": 23
        },
        {
          "name": "setDefaultDirection",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 32
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: '[app-table-header]',\n  templateUrl: './table-header.component.html',\n  styleUrls: ['./table-header.component.css']\n})\n\nexport class AppTableHeaderComponent {\n    @Input() header;\n    @Input() selected;\n    @Output() onHeaderClick = new EventEmitter<object>();\n    @Input() asc;\n\n    getHeader(e) {\n        this.asc = !this.asc;\n        this.onHeaderClick.emit({e: e, asc: this.asc, header: this.header.header.el, sortServer: this.header.header.sortServer});\n    }\n\n    // sets a class of 'ascending' or 'descending'\n    // only to the currently selected (clicked) header\n\n    handleDirection() {\n        if (this.asc) {\n            return 'ascending';\n        } else {\n            return 'descending';\n        }\n    }\n\n    // sets previously selected headers to a default state of false\n    setDefaultDirection() {\n        this.asc = true;\n        return '';\n    }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./table-header.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<ng-container>\n    <app-button *ngIf=\"header.header.el === 'sort'\" \n        title=\"{{header.header.value}}\"\n        class=\"headerElement\"\n        [buttonID]=\"header.header.prop\"\n        [ariaLabel]=\"header.header.prop === selected ? (header.header.value + ': ' + handleDirection()) : header.header.value + ': ' + 'activate to sort'\"\n        [ariaSort]=\"header.header.prop === selected ? handleDirection() : setDefaultDirection()\"\n        [buttonType]=\"(header.header.prop === selected) ? handleDirection() + ' tableCell pointer arrow ' + 'header_'+header.header.prop : setDefaultDirection() + ' tableCell pointer arrow ' + 'header_'+header.header.prop\"\n        (callBack)=\"getHeader($event)\">\n        {{ header.header.abbr ? header.header.abbr : header.header.value }}\n    </app-button>\n    \n    <div *ngIf=\"header.header.el === 'checkbox'\" \n         class=\"{{'header_'+header.header.prop}} headerElement pointer\" \n         title=\"{{header.header.value}}\"\n         tabindex=\"0\">\n       <app-choice\n            [value]=\"header.header.value\"\n            [groupName]=\"header.header.attr\"\n            [showTitle]=\"true\"\n            [labelClass]=\"'bold'\">\n        </app-choice>\n    </div>\n    \n    <div *ngIf=\"header.header.el === 'default'\" \n         class=\"{{'header_'+header.header.prop}} headerElement\" \n         title=\"{{header.header.value}}\"\n         tabindex=\"0\">\n        {{ header.header.abbr ? header.header.abbr : header.header.value }}\n    </div>\n</ng-container>"
    },
    {
      "name": "AppTableModalComponent",
      "id": "component-AppTableModalComponent-21ef7ed48d0cf4a946622227b40f7037",
      "file": "src/app/modules/table/table-modal/table-modal.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-table-modal",
      "styleUrls": ["./table-modal.component.css"],
      "styles": [],
      "templateUrl": ["./table-modal.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "modalCount",
          "line": 17,
          "type": "number"
        },
        {
          "name": "modalData",
          "line": 16,
          "type": "Array<any>"
        },
        {
          "name": "modalTitle",
          "line": 15
        }
      ],
      "outputsClass": [
        {
          "name": "closeModal",
          "defaultValue": "new EventEmitter<any>()",
          "line": 19,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClose",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n    Component,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\n\n@Component({\n  selector: 'app-table-modal',\n  templateUrl: './table-modal.component.html',\n  styleUrls: ['./table-modal.component.css']\n})\nexport class AppTableModalComponent {\n\n    @Input() modalTitle;\n    @Input() modalData: Array<any>;\n    @Input() modalCount: number;\n\n    @Output() closeModal = new EventEmitter<any>();\n\n    onClose() {\n        this.closeModal.emit(true);\n    }\n\n}",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "hr {\n    border: 1px solid black;\n    background-color: black;\n}",
          "styleUrl": "./table-modal.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<ng-template #bodyTemplate let-modalBody=\"modalBody\">\n    <ng-container *ngFor=\"let data of modalBody.modalData\">\n        <h2 *ngIf=\"data.heading\" [ngClass]=\"'ds-h2 ' + data.class\">\n            {{ data.heading }}\n        </h2>\n        <p *ngIf=\"data.paragraph\" [ngClass]=\"'ds-text ' + data.class\">\n            {{ data.paragraph }}\n        </p>\n        <h3 *ngIf=\"data.heading2\" [ngClass]=\"'ds-h4 ' + data.class\">\n            {{ data.heading2 }}\n        </h3>\n        <hr *ngIf=\"data.hline\" [ngClass]=\"data.class\"/>\n    </ng-container>\n</ng-template>\n\n<app-modal-shell #tableModal\n    [bodyTemplate]=\"bodyTemplate\"\n    [modalData]=\"modalData\"\n    [modalTitle]=\"modalTitle\" \n    [modalCount]=\"modalCount\" \n    [jawsBody]=\"true\" \n    (closeModal)=\"onClose()\">\n</app-modal-shell>"
    },
    {
      "name": "AppTableRowComponent",
      "id": "component-AppTableRowComponent-81594b1ed2a73ee4cb5312136f6c5118",
      "file": "src/app/modules/table/table-row/table-row.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "[app-table-row]",
      "styleUrls": ["./table-row.component.css"],
      "styles": [],
      "templateUrl": ["./table-row.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dataRow",
          "line": 10
        },
        {
          "name": "headers",
          "line": 11
        },
        {
          "name": "highlightSearch",
          "line": 15
        },
        {
          "name": "index",
          "line": 12
        },
        {
          "name": "rowHeader",
          "line": 13
        },
        {
          "name": "searchText",
          "line": 14
        }
      ],
      "outputsClass": [
        {
          "name": "onCallBack",
          "defaultValue": "new EventEmitter<any>()",
          "line": 16,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "shadowArray",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methodsClass": [
        {
          "name": "callBack",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: '[app-table-row]',\n  templateUrl: './table-row.component.html',\n  styleUrls: ['./table-row.component.css']\n})\n\nexport class AppTableRowComponent implements OnInit {\n    @Input() dataRow;\n    @Input() headers;\n    @Input() index;\n    @Input() rowHeader;\n    @Input() searchText;\n    @Input() highlightSearch;\n    @Output() onCallBack = new EventEmitter<any>();\n\n    shadowArray = [];\n\n    ngOnInit() {\n        Object.keys(this.headers).map((key) => {\n            this.shadowArray.push(\n                {\n                    key: this.headers[key].header.prop,\n                    value: this.dataRow[this.headers[key].header.prop],\n                    header: this.headers[key].header.value\n                }\n            );\n        });\n    }\n\n    callBack(e) {\n        this.onCallBack.emit(e);\n    }\n}",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "th {\n    background-color: #f1f1f1;\n    min-width: 100px;\n}\n\ntd {\n    line-height: 25px;\n    white-space: nowrap; \n    overflow: hidden;\n}\n\nth, td {\n    border-bottom: 1px solid #5b616b;\n    text-align: left;\n    vertical-align: middle;\n    height:55px;\n    font-size: 16px;\n    padding-left: 24px;\n    padding-right: 24px;\n}\n/*\nAbove add classes for all tables, below reference unique classes to modify data values\n*/\n\n@media only screen and (max-width: 768px) {\n    th {\n        white-space: nowrap;\n        min-width: 100%;\n    }\n}",
          "styleUrl": "./table-row.component.css"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData": "<ng-container *ngFor=\"let data of shadowArray; let i = index\">\n    <th *ngIf=\"data.key === 'row_Header'\" \n        scope=\"row\" \n        app-table-data \n            [dataClass]=\"'rowHeader'\" \n            [data] = \"data\" \n            [index]=\"index + '_' + i\"\n            [searchText]=\"searchText\"\n            [highlightSearch]=\"highlightSearch\"\n            (callBack)=\"callBack($event)\"\n            ></th>\n    \n    <td *ngIf=\"data.key !== 'row_Header'\" \n        [attr.data-column-header]=\"data.header\" \n        app-table-data \n            [dataClass]=\"'columnCell'\" \n            [data] = \"data\" \n            [index]=\"index + '_' + i\"\n            [searchText]=\"searchText\"\n            [highlightSearch]=\"highlightSearch\"\n            (callBack)=\"callBack($event)\"\n            ></td>\n</ng-container>\n"
    },
    {
      "name": "AppTabsComponent",
      "id": "component-AppTabsComponent-9d9d47d01297d9c41fee904ecc80b0d4",
      "file": "src/app/modules/tabs/tabs.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-tabs",
      "styleUrls": ["./tabs.component.scss"],
      "styles": [],
      "templateUrl": ["./tabs.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "defaultSelectedId",
          "line": 17,
          "type": "string"
        },
        {
          "name": "tablistClassName",
          "line": 18,
          "type": "string"
        },
        {
          "name": "tabs",
          "line": 16,
          "type": "TabModel[]"
        }
      ],
      "outputsClass": [
        {
          "name": "onChange",
          "defaultValue": "new EventEmitter<any>()",
          "line": 19,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "generateLink",
          "args": [
            {
              "name": "tab",
              "type": "TabModel"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 70,
          "jsdoctags": [
            {
              "name": "tab",
              "type": "TabModel",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24
        },
        {
          "name": "passAction",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 41,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "selectTab",
          "args": [
            {
              "name": "id",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "jsdoctags": [
            {
              "name": "id",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, EventEmitter, Output, AfterContentInit, ViewChildren, DoCheck, QueryList, OnInit } from '@angular/core';\nimport { Animations } from '../animations/animations';\n\nimport { TabModel } from './tabs.model'\n\n@Component({\n    selector: 'app-tabs',\n    templateUrl: './tabs.component.html',\n    styleUrls: ['./tabs.component.scss'],\n    animations: [\n        Animations.animations\n    ]\n})\nexport class AppTabsComponent implements OnInit {\n\n    @Input() tabs: TabModel[];\n    @Input() defaultSelectedId: string;\n    @Input() tablistClassName: string;\n    @Output() onChange = new EventEmitter<any>();\n\n    /*\n     * ngOnInit is used to select a default tab when the component loads\n     */\n    ngOnInit() {\n        if (!this.tabs) {\n            this.tabs = [];\n        }\n\n        // selecting a tab requires all tabs to have an ID\n        // if a tab does not have an ID, assign an incremental value\n        this.tabs.map((tab, index) => {\n            if (!tab.id) {\n                tab.id = `tab${index + 1}`;\n            }\n        })\n\n        // Select the default tab, and fallback to the first tab if no valid id is passed into the component\n        this.selectTab(this.defaultSelectedId);\n    }\n\n    passAction(e) {\n        this.selectTab(e.srcElement.id);\n        this.onChange.emit(e);\n        return false;\n    }\n\n    /*\n     * Set the selected boolean field on a tab and unset the field on all other tabs\n     * If the id does not match any tabs, just select the first tab in the list\n     */\n    selectTab(id) {\n\n        // unselect all tabs\n        this.tabs.map(tab => tab.selected = false);\n\n        // If a valid id was not passed in, or the id was not found in the list, set id as the first tab's id\n        if (!id || this.tabs.filter(tab => tab.id === id).length === 0) {\n            if (this.tabs.length) {\n                id = this.tabs[0].id;\n            }\n        }\n\n        // select the tab that matches the id\n        this.tabs\n            .filter(tab => tab.id === id) // find all tabs that match the id parameter\n            .map(tab => tab.selected = true); // set all found tabs to selected\n\n    }\n\n    generateLink(tab: TabModel) {\n        return tab.link ? tab.link : \"javascript:void(0)\";\n    }\n\n}\n\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".ds-c-tabs__item {\n    color: #323A45;\n    font-weight: normal;\n}",
          "styleUrl": "./tabs.component.scss"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData": "<div class=\"ds-c-tabs {{ tablistClassName }}\" role=\"tablist\">\n    <a\n        *ngFor=\"let tab of tabs\"\n        href=\"{{ generateLink(tab) }}\"\n        [id]=\"tab.id\" \n        class=\"ds-c-tabs__item {{ tab.className }}\" \n        [attr.aria-label]=\"tab.ariaLabel\" \n        [attr.aria-disabled]=\"tab.disabled\"\n        [attr.aria-hidden]=\"tab.visible\"\n        [attr.aria-selected]=\"tab.selected\"\n        [attr.data-auto-id]=\"tab.dataAutoId\"\n        (click)=\"passAction($event)\" \n        (keyup.enter)=\"passAction($event)\" \n    >\n        {{tab.title}}\n    </a>\n</div>"
    },
    {
      "name": "AppTextFieldComponent",
      "id": "component-AppTextFieldComponent-b5338b5e06bb1281addb8ebdd14a03f0",
      "file": "src/app/modules/text-field/text-field.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-text-field",
      "styleUrls": ["./text-field.component.css"],
      "styles": [],
      "templateUrl": ["./text-field.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "line": 9,
          "type": "string"
        },
        {
          "name": "dataAutoId",
          "line": 19,
          "type": "string"
        },
        {
          "name": "defaultValue",
          "line": 12,
          "type": "string"
        },
        {
          "name": "disabled",
          "line": 21,
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "line": 18,
          "type": "string"
        },
        {
          "name": "hint",
          "line": 16,
          "type": "string"
        },
        {
          "name": "hintClass",
          "line": 17,
          "type": "string"
        },
        {
          "name": "id",
          "line": 11,
          "type": "string"
        },
        {
          "name": "inputClass",
          "line": 13,
          "type": "string"
        },
        {
          "name": "inputType",
          "defaultValue": "'text'",
          "line": 14
        },
        {
          "name": "labelClass",
          "line": 15,
          "type": "string"
        },
        {
          "name": "multiline",
          "defaultValue": "false",
          "line": 22
        },
        {
          "name": "placeholder",
          "line": 20,
          "type": "string"
        },
        {
          "name": "title",
          "line": 10,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "userInput",
          "defaultValue": "new EventEmitter<any>()",
          "line": 23,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "callBackFunction",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-text-field',\n  templateUrl: './text-field.component.html',\n  styleUrls: ['./text-field.component.css'],\n})\nexport class AppTextFieldComponent {\n  @Input() ariaLabel: string;\n  @Input() title: string;\n  @Input() id: string;\n  @Input() defaultValue: string;\n  @Input() inputClass: string;\n  @Input() inputType = 'text';\n  @Input() labelClass: string;\n  @Input() hint: string;\n  @Input() hintClass: string;\n  @Input() errorMessage: string;\n  @Input() dataAutoId: string;\n  @Input() placeholder: string;\n  @Input() disabled: boolean;\n  @Input() multiline = false;\n  @Output() userInput = new EventEmitter<any>();\n\n  constructor() {}\n\n  callBackFunction(e) {\n    this.userInput.emit(e);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".ds-c-field {\n    margin-bottom: 0;\n    margin-top:5px;\n}\n\n.ds-c-label {\n    margin-top: 0;\n}\n\n.white {\n    color:white;\n}",
          "styleUrl": "./text-field.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 23
      },
      "templateData": "<label class=\"ds-c-label\" [ngClass]=\"labelClass\" for=\"{{ id }}\">\n  <span class=\"ds-u-font-weight--bold\">{{ title }}</span>\n  <span *ngIf=\"hint\" class=\"ds-c-field__hint\" [ngClass]=\"hintClass\" role=\"alert\">{{ hint }}</span>\n  <span *ngIf=\"errorMessage\" class=\"ds-c-field__hint ds-u-color--error\" role=\"alert\">{{ errorMessage }}</span>\n</label>\n<ng-container *ngIf=\"!multiline; else textarea\">\n  <input\n    class=\"ds-c-field\"\n    attr.data-auto-id=\"{{ dataAutoId }}\"\n    attr.aria-label=\"{{ ariaLabel || title }}\"\n    tabindex=\"0\"\n    [ngClass]=\"inputClass + ' ' + (errorMessage ? 'ds-c-field--error' : '')\"\n    id=\"{{ id }}\"\n    name=\"{{ id }}\"\n    [type]=\"inputType\"\n    [placeholder]=\"placeholder || ''\"\n    (keyup)=\"callBackFunction($event)\"\n    (change)=\"callBackFunction($event)\"\n    value=\"{{ defaultValue }}\"\n    [disabled]=\"disabled\"\n  />\n</ng-container>\n<ng-template #textarea>\n  <textarea\n    class=\"ds-c-field\"\n    attr.data-auto-id=\"{{ dataAutoId }}\"\n    attr.aria-label=\"{{ ariaLabel || title }}\"\n    tabindex=\"0\"\n    [ngClass]=\"inputClass + ' ' + (errorMessage ? 'ds-c-field--error' : '')\"\n    id=\"{{ id }}\"\n    name=\"{{ id }}\"\n    [placeholder]=\"placeholder || ''\"\n    (keyup)=\"callBackFunction($event)\"\n    (change)=\"callBackFunction($event)\"\n    value=\"{{ defaultValue }}\"\n    [disabled]=\"disabled\"\n    rows=\"4\"\n  ></textarea>\n</ng-template>\n"
    },
    {
      "name": "AppTicketComponent",
      "id": "component-AppTicketComponent-41363140467e61d6cf4a5ced38d48c37",
      "file": "src/app/modules/ticket/ticket.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-ticket",
      "styleUrls": ["./ticket.component.css"],
      "styles": [],
      "templateUrl": ["./ticket.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "line": 12,
          "type": "string"
        },
        {
          "name": "dataAutoId",
          "line": 13,
          "type": "string"
        },
        {
          "name": "description",
          "line": 11,
          "type": "string"
        },
        {
          "name": "id",
          "line": 9,
          "type": "string"
        },
        {
          "name": "title",
          "line": 10,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "buttonClick",
          "defaultValue": "new EventEmitter<any>()",
          "line": 14,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "buttonClicked",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "passAction",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'app-ticket',\n    templateUrl: './ticket.component.html',\n    styleUrls: ['./ticket.component.css']\n})\nexport class AppTicketComponent {\n    @Input() id: string;\n    @Input() title: string;\n    @Input() description: string;\n    @Input() ariaLabel: string;\n    @Input() dataAutoId: string;\n    @Output() buttonClick = new EventEmitter<any>();\n\n    buttonClicked = false;\n\n    passAction(e) {\n        this.buttonClicked = !this.buttonClicked;\n        this.buttonClick.emit(e);\n    }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".noPoint {\n    pointer-events: none;\n}\n\n.active {\n    border-top: 6px solid #4C2C92 !important;\n    box-shadow: 0px 4px 9px #d9d9d9 !important;\n}\n\n.card {\n    border-top: 6px solid #009ec8;\n    box-shadow: 0px 4px 6px #F1F1F1;\n    transition: all 200ms cubic-bezier(.25,.8,.25,1);\n}\n\n.card:hover {\n    border-top: 6px solid #006a86;\n    box-shadow: 0px 4px 9px #d9d9d9;\n}\n\n\n.cardHeight {\n    height: 100%;\n}\n\n.ds-l-row {\n    margin-left: -8px;\n    margin-right: -8px;\n}",
          "styleUrl": "./ticket.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<div \n     id=\"{{id}}\" \n     [ngClass]=\"buttonClicked ? 'active' : null\" \n     class=\"pointer card cardHeight ds-l-row ds-u-align-items--start\" \n     (click)=\"passAction($event)\"  \n     (keyup.enter)=\"passAction($event)\" \n     role=\"button\"  \n     tabindex=\"0\"\n     [attr.aria-label]=\"ariaLabel\"\n     attr.data-auto-id=\"{{dataAutoId}}\">\n    <div class=\"ds-l-col--9 noPoint ds-u-margin-top--2 ds-u-margin-bottom--1\">\n        <div class=\"ds-u-font-size--h4 ds-u-color--black ds-u-font-weight--bold noPoint\">\n            {{title}}\n        </div>\n        <div class=\"ds-u-font-size--base ds-u-color--gray noPoint\">\n            {{description}}\n        </div>\n    </div>\n    <div class=\"ds-l-col--3 noPoint ds-u-margin-top--2\">\n        <ng-content></ng-content>\n    </div>\n</div>"
    },
    {
      "name": "BarGraphComponent",
      "id": "component-BarGraphComponent-115278a18bfe22074585e86f07e52830",
      "file": "src/app/modules/bar-graph/bar-graph.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-bar-graph",
      "styleUrls": ["./bar-graph.component.css"],
      "styles": [],
      "templateUrl": ["./bar-graph.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "barGraphModel",
          "line": 18,
          "type": "BarGraphModel"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "bars",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "chart",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "comp",
          "defaultValue": "AppTableModalComponent",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "customColors",
          "type": "",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "showModal",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "view",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "handleColor",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        },
        {
          "name": "resize",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { AppTableModalComponent } from '../table/table-modal/table-modal.component';\nimport { BarGraphModel } from './bar-graph.model';\n\n@Component({\n  selector: 'app-bar-graph',\n  templateUrl: './bar-graph.component.html',\n  styleUrls: ['./bar-graph.component.css']\n})\nexport class BarGraphComponent implements OnInit {\n  bars;\n  chart;\n  customColors;\n  showModal = false;\n  comp = AppTableModalComponent;\n  view: any[];\n\n  @Input() barGraphModel: BarGraphModel;\n\n\n  ngOnInit() {\n    if (!this.barGraphModel) {\n      this.barGraphModel = new BarGraphModel();\n    }\n    if (this.barGraphModel.compareBars) { this.handleColor(); }\n    this.resize();\n  }\n\n  resize() {\n    const graphContainer = document.getElementsByClassName('mainGraphClass')[0]\n      .clientWidth;\n    this.view = [graphContainer, graphContainer / 2];\n  }\n\n  handleColor() {\n    if (this.barGraphModel.data[0].value < this.barGraphModel.data[1].value) {\n      this.customColors = [\n        {\n          name: `${this.barGraphModel.data[0].name}`,\n          value: '#950000'\n        }\n      ];\n    }\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".title {\n    color: #212121;\n    padding: 20px;\n    text-align: center;\n    font-weight: bold;\n    font-size: 24px;\n    line-height: 24px;\n    height: 24px;\n}\n\n.ds-l-col {\n    display: inline-block;\n    text-align: center;\n    padding-left: 0;\n    padding-right: 0;\n}\n\n.footnote {\n    font-size: 25px;\n    color: #00A6D2;\n}\n\n\n.ds-l-row.values  {\n    margin-right: 0;\n}\n\n.tooltip {\n    padding: 20px;\n}\n\n.tickMarkers {\n    position: absolute;\n    text-align: center;\n    font-size: 24px;\n    font-weight: bold;\n    line-height: 31.2px;\n}\n\n:host ::ng-deep .tableCell {\n    font-size: 24px !important;\n}\n\nspan[id^=\"value_\"] {\n    display:none;\n}\n\n#valueContainer {\n    position: relative;\n}\n\n.x-axis-label {\n    text-align: center;\n    margin: 40px auto 0 auto;\n}\n\n:host ::ng-deep .x.axis .tick text {\n    font-size: 16px !important;\n}\n\n\n\n",
          "styleUrl": "./bar-graph.component.css"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData": "<h2 class=\"title\">\n    {{ barGraphModel.title }}\n</h2>\n\n<p class=\"sr-only\">\n    {{ barGraphModel.title }} bar graph image\n    <ng-container *ngFor=\"let item of barGraphModel.data; let i = index\">\n       Bar {{ i + 1 }} {{item.name}} value is {{item.value}} \n    </ng-container>\n</p>\n\n<div \n    class=\"ds-l-row mainGraphClass\" \n    [id]=\"'barGraph_' + barGraphModel.id\"\n    attr.data-auto-id=\"{{ barGraphModel.dataAutoId }}\"\n    (window:resize)=\"resize()\" \n    (window:load)=\"resize()\"\n>\n    <ngx-charts-bar-vertical \n        [view]=\"view\" \n        [scheme]=\"barGraphModel.colorScheme\" \n        [results]=\"barGraphModel.data\"\n        [yAxis]=\"barGraphModel.showYAxis\"\n        [xAxis]=\"barGraphModel.showXAxis\" \n        [showYAxisLabel]=\"barGraphModel.xAxisLabel !== ''\" \n        [xAxisLabel]=\"barGraphModel.xAxisLabel\" \n        [yAxisLabel]=\"barGraphModel.yAxisLabel\" \n        [animations]=\"barGraphModel.animations\"\n        [showGridLines]=\"barGraphModel.showGridLines\" \n        [roundDomains]=\"barGraphModel.roundDomains\" \n        [gradient]=\"barGraphModel.gradient\" \n        [roundEdges]=\"barGraphModel.roundEdges\"\n        [tooltipDisabled]=\"barGraphModel.tooltipDisabled\"\n        [customColors]=\"customColors\"\n        [barPadding]=\"barGraphModel.barPadding\"\n    >\n    </ngx-charts-bar-vertical>\n</div>\n\n<div *ngIf=\"barGraphModel.showXAxis\" aria-hidden=\"true\" id=\"valueContainer\">\n    <span class=\"tickMarkers\" *ngFor=\"let val of barGraphModel.data; let i = index\" [id]=\"'value_' + i + barGraphModel.id\">\n        <div *ngIf=\"val.value === '' && val.modal\">\n            <app-modal\n                [modalData]=\"val.modal\"\n                [modalComponent]=\"comp\"\n                [buttonClass]=\"'tableCell'\"\n                [content]=\"'N/A*'\"\n                [id]=\"'col_' + i + barGraphModel.id\"\n                [modalTitle]=\"val.modalTitle\">\n            </app-modal>\n        </div>\n        <div *ngIf=\"val.value === '' && !val.modal\">\n            N/A\n        </div>\n        <div *ngIf=\"val.value !== '' && val.modal; else noModal\">\n            <app-modal\n                [modalData]=\"val.modal\"\n                [modalComponent]=\"comp\"\n                [buttonClass]=\"'tableCell'\"\n                [content]=\"val.value + '*'\"\n                [id]=\"'col_' + i + barGraphModel.id\"\n                [modalTitle]=\"val.modalTitle\">\n            </app-modal>\n        </div>\n        <ng-template #noModal>\n            {{val.value}}\n        </ng-template>\n    </span>\n</div>\n<div id=\"nameContainer\" aria-hidden=\"true\" *ngIf=\"barGraphModel.xAxisLabel !== ''\" class=\"x-axis-label\">\n    {{barGraphModel.xAxisLabel}}\n</div>\n"
    },
    {
      "name": "CalendarComponent",
      "id": "component-CalendarComponent-e16edd7d4252e41f0cbf8824cc785120",
      "file": "src/app/modules/calendar/calendar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-calendar",
      "styleUrls": ["./calendar.component.css"],
      "styles": [],
      "templateUrl": ["./calendar.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "calendarModel",
          "line": 17,
          "type": "CalendarModel"
        }
      ],
      "outputsClass": [
        {
          "name": "hideEndDate",
          "defaultValue": "new EventEmitter<any>()",
          "line": 19,
          "type": "EventEmitter"
        },
        {
          "name": "selectedDates",
          "defaultValue": "new EventEmitter<any>()",
          "line": 18,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_dateValueChanged",
          "defaultValue": "new Subject<any>()",
          "type": "Subject<any>",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [112]
        },
        {
          "name": "endDatePicker",
          "type": "MatDatepicker<any>",
          "optional": false,
          "description": "",
          "line": 21,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'endPicker'"
            }
          ]
        },
        {
          "name": "errorMessage",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "faCalendarAlt",
          "defaultValue": "faCalendarAlt",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "showEndDate",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "startDatePicker",
          "type": "MatDatepicker<any>",
          "optional": false,
          "description": "",
          "line": 20,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'startPicker'"
            }
          ]
        },
        {
          "name": "unsubscribe$",
          "defaultValue": "new Subject<any>()",
          "type": "Subject<any>",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [
        {
          "name": "checkDate",
          "args": [
            {
              "name": "date",
              "type": "moment.Moment"
            },
            {
              "name": "endDate",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "\"Date is not a valid date\" | \"End Date is not a valid date\"",
          "typeParameters": [],
          "line": 123,
          "jsdoctags": [
            {
              "name": "date",
              "type": "moment.Moment",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "endDate",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "dateValueChanged",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleCheckbox",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 130,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32
        },
        {
          "name": "validateDate",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, OnDestroy, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport * as moment from 'moment';\n\n// Models\nimport { CalendarModel } from './calendar.model';\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { MatDatepicker } from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css'],\n})\nexport class CalendarComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() calendarModel: CalendarModel;\n  @Output() selectedDates = new EventEmitter<any>();\n  @Output() hideEndDate = new EventEmitter<any>();\n  @ViewChild('startPicker') startDatePicker: MatDatepicker<any>;\n  @ViewChild('endPicker') endDatePicker: MatDatepicker<any>;\n\n  showEndDate = true;\n  errorMessage: string;\n  private _dateValueChanged: Subject<any> = new Subject<any>();\n  private unsubscribe$: Subject<any> = new Subject<any>();\n\n  faCalendarAlt = faCalendarAlt;\n\n  constructor() {}\n\n  ngOnInit() {\n    this._dateValueChanged\n      .pipe(\n        debounceTime(this.calendarModel?.debounceTime || 1500),\n        distinctUntilChanged(),\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe((data) => {\n        this.validateDate(data);\n      });\n  }\n\n  ngAfterViewInit() {\n    if (this.startDatePicker) {\n      this.startDatePicker.opened = false;\n    }\n    if (this.endDatePicker) {\n      this.endDatePicker.opened = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribe$) {\n      this.unsubscribe$.complete();\n    }\n  }\n\n  dateValueChanged(event) {\n    this._dateValueChanged.next(event);\n  }\n\n  validateDate(event) {\n    const date: moment.Moment = event && (moment as any).default(event.value);\n    const isEndDate: boolean = event && event.targetElement.name === 'endDate';\n\n    this.errorMessage = this.checkDate(date, isEndDate);\n\n    if (!this.errorMessage && event) {\n      isEndDate ? (this.calendarModel.endDate = event.value) : (this.calendarModel.date = event.value);\n    }\n    if (\n      this.calendarModel.minDate &&\n      (moment as any).default(this.calendarModel.date).isBefore(this.calendarModel.minDate)\n    ) {\n      this.errorMessage = `Start date must be on or after ${(moment as any)\n        .default(this.calendarModel.minDate)\n        .format('MM-DD-YYYY')}`;\n    }\n    if (\n      this.calendarModel.maxDate &&\n      (moment as any).default(this.calendarModel.date).isAfter(this.calendarModel.maxDate)\n    ) {\n      this.errorMessage = `Start date must be on or before ${(moment as any)\n        .default(this.calendarModel.maxDate)\n        .format('MM-DD-YYYY')}`;\n    }\n    if (\n      this.calendarModel.minEndDate &&\n      (moment as any).default(this.calendarModel.endDate).isBefore(this.calendarModel.minEndDate)\n    ) {\n      this.errorMessage = `End date must be on or after ${(moment as any)\n        .default(this.calendarModel.minEndDate)\n        .format('MM-DD-YYYY')}`;\n    }\n    if (\n      this.calendarModel.maxEndDate &&\n      (moment as any).default(this.calendarModel.endDate).isAfter(this.calendarModel.maxEndDate)\n    ) {\n      this.errorMessage = `End date must be on before ${(moment as any)\n        .default(this.calendarModel.maxEndDate)\n        .format('MM-DD-YYYY')}`;\n    }\n    if (\n      this.calendarModel.date &&\n      this.calendarModel.endDate &&\n      this.showEndDate &&\n      (moment as any).default(this.calendarModel.date).isAfter(this.calendarModel.endDate)\n    ) {\n      this.errorMessage = 'Start date is after end date';\n    }\n\n    if (!this.errorMessage) {\n      this.selectedDates.emit({\n        dateId: `${this.calendarModel.id}Date`,\n        endDateId: `${this.calendarModel.id}EndDate`,\n        date: this.calendarModel.date,\n        endDate: this.calendarModel.endDate,\n      });\n    }\n  }\n\n  checkDate(date: moment.Moment, endDate: boolean) {\n    if (date && !date.isValid()) {\n      return !endDate ? 'Date is not a valid date' : 'End Date is not a valid date';\n    }\n    return null;\n  }\n\n  handleCheckbox(event) {\n    this.showEndDate = !event.target.checked;\n    if (!this.showEndDate) {\n      this.calendarModel.endDate = null;\n      this.hideEndDate.emit(true);\n    } else {\n      this.hideEndDate.emit(false);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".datepicker-input {\n  max-width: 100%;\n}\n\n.date-toggle-wrapper {\n  position: relative;\n}\n\n.date-toggle {\n  position: absolute;\n  right: 10px;\n  bottom: 5px;\n}\n",
          "styleUrl": "./calendar.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 28
      },
      "implements": ["OnInit", "OnDestroy", "AfterViewInit"],
      "templateData": "<legend class=\"ds-c-label--error\">\n  <span *ngIf=\"errorMessage\" class=\"ds-c-field__hint ds-u-color--error\">\n    {{ errorMessage }}\n  </span>\n</legend>\n<div class=\"ds-l-container ds-u-padding--0\">\n  <div class=\"ds-l-form-row ds-u-align-items--end\">\n    <div class=\"ds-l-col--12 ds-l-md-col date-toggle-wrapper\">\n      <label class=\"ds-c-label ds-u-font-weight--bold ds-u-margin-top--1\" for=\"date\">\n        {{ calendarModel.dateLabel }}\n      </label>\n      <input\n        [matDatepicker]=\"startPicker\"\n        class=\"datepicker-input ds-c-field\"\n        placeholder=\"MM/DD/YYYY\"\n        name=\"date\"\n        id=\"{{ calendarModel.id + 'Date' }}\"\n        (dateInput)=\"dateValueChanged($event)\"\n        attr.aria-label=\"{{ calendarModel.ariaLabelDate }}\"\n        [value]=\"calendarModel.date\"\n        [min]=\"calendarModel.minDate\"\n        [max]=\"calendarModel.maxDate\"\n      />\n      <mat-datepicker-toggle matSuffix [for]=\"startPicker\" class=\"date-toggle\">\n        <fa-icon\n          [icon]=\"faCalendarAlt\"\n          class=\"ds-u-color--primary\"\n          style=\"font-size: 1.4rem\"\n          matDatepickerToggleIcon\n        ></fa-icon>\n      </mat-datepicker-toggle>\n      <mat-datepicker #startPicker></mat-datepicker>\n    </div>\n    <ng-container *ngIf=\"showEndDate && calendarModel.isDateRange\">\n      <div class=\"ds-l-col--12 ds-l-md-col--auto\"><div class=\"ds-u-padding-y--1\">to</div></div>\n      <div class=\"ds-l-col--12 ds-l-md-col date-toggle-wrapper\">\n        <label class=\"ds-c-label ds-u-font-weight--bold ds-u-margin-top--1\" for=\"endDate\">\n          {{ calendarModel.endDateLabel }}\n        </label>\n        <input\n          matInput\n          [matDatepicker]=\"endPicker\"\n          class=\"datepicker-input ds-c-field\"\n          placeholder=\"MM/DD/YYYY\"\n          name=\"endDate\"\n          id=\"{{ calendarModel.id + 'EndDate' }}\"\n          (dateInput)=\"dateValueChanged($event)\"\n          attr.aria-label=\"{{ calendarModel.ariaLabelEndDate }}\"\n          [value]=\"calendarModel.endDate\"\n          [min]=\"calendarModel.minEndDate\"\n          [max]=\"calendarModel.maxEndDate\"\n        />\n        <mat-datepicker-toggle matSuffix [for]=\"endPicker\" class=\"date-toggle\">\n          <fa-icon\n            [icon]=\"faCalendarAlt\"\n            class=\"ds-u-color--primary\"\n            style=\"font-size: 1.4rem\"\n            matDatepickerToggleIcon\n          ></fa-icon>\n        </mat-datepicker-toggle>\n        <mat-datepicker #endPicker></mat-datepicker>\n      </div>\n    </ng-container>\n  </div>\n</div>\n<app-choice\n  *ngIf=\"calendarModel.isDateRange && calendarModel.isCheckBox\"\n  index=\"0\"\n  value=\"Do not include an end date\"\n  ariaLabel=\"Check the checkbox to not include an end date\"\n  size=\"small\"\n  [isChecked]=\"false\"\n  [showTitle]=\"true\"\n  dataAutoId=\"endDateChoiceID\"\n  (choiceChange)=\"handleCheckbox($event)\"\n>\n</app-choice>\n"
    },
    {
      "name": "CodeSnippetComponent",
      "id": "component-CodeSnippetComponent-21f65403866a0cfd85f8e5731a909f1a",
      "file": "src/app/modules/code-snippet/code-snippet.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-code-snippet",
      "styleUrls": ["./code-snippet.component.css"],
      "styles": [],
      "templateUrl": ["./code-snippet.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "codeSnippetModel",
          "line": 16,
          "type": "CodeSnippetModel"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22
        },
        {
          "name": "onCopyContent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n// Models\nimport { CodeSnippetModel } from './code-snippet.model';\n\n// Services\nimport { ClipboardService } from 'ngx-clipboard'\n\n@Component({\n  selector: 'app-code-snippet',\n  templateUrl: './code-snippet.component.html',\n  styleUrls: ['./code-snippet.component.css']\n})\nexport class CodeSnippetComponent implements OnInit {\n\n  @Input() codeSnippetModel: CodeSnippetModel;\n\n  constructor(\n    private clipboardService: ClipboardService\n  ) { }\n\n  ngOnInit() {\n    if (!this.codeSnippetModel) {\n      this.codeSnippetModel = new CodeSnippetModel();\n  }\n  }\n\n  onCopyContent() {\n    let copyContent = '';\n    if (!this.codeSnippetModel.copyContent) {\n      for (const contentItem of this.codeSnippetModel.contentItems) {\n        copyContent += ` ${contentItem.content}`;\n      }\n    } else {\n      copyContent = this.codeSnippetModel.copyContent;\n    }\n    this.clipboardService.copyFromContent(copyContent);\n    document\n      .getElementById(\"copyButton\")\n      .getElementsByTagName(\"button\")[0]\n      .focus();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".code-snippet-contents {\n    font-family: \"Courier New\", Courier, \"Lucida Sans Typewriter\", \"Lucida Typewriter\", monospace;\n    display: grid;\n    grid-template-columns: [line-number] auto [content] 1fr;\n}\n\n.code-snippet-line-number-darken {\n   background-color: rgba(0, 0, 0, 0.1);\n}\n\n.code-snippet-content {\n    white-space: pre;\n    overflow: auto;\n}\n\n.codeSnippetIcon {\n    padding-top: 3px;\n}",
          "styleUrl": "./code-snippet.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "clipboardService",
            "type": "ClipboardService"
          }
        ],
        "line": 16,
        "jsdoctags": [
          {
            "name": "clipboardService",
            "type": "ClipboardService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div \n    id='{{ codeSnippetModel.id}}' \n    attr.data-auto-id=\"{{ codeSnippetModel.dataAutoId }}\"\n    class='code-snippet ds-l-container ds-u-padding--0' \n>\n    <div class='ds-l-row'>\n        <div class='ds-l-col--12 ds-l-md-col--6'>\n            <h3 class='ds-u-margin-bottom--0 ds-u-md-margin-bottom--1 ds-u-margin-top--1'>{{ codeSnippetModel.label }}</h3>\n        </div>\n        <div class='ds-l-col--12 ds-l-md-col--6 ds-u-md-text-align--right ds-u-margin-bottom--1 ds-u-md-margin-bottom--0'>\n            <app-button\n              id=\"copyButton\"\n              *ngIf=\"codeSnippetModel.copyLinkDisplay\"\n              buttonType = 'ds-c-button ds-c-button--transparent ds-u-padding--0 ds-u-margin-top--1'\n              [ariaLabel]=\"codeSnippetModel.copyLinkAriaLabel\"\n              (callBack)=\"onCopyContent()\"\n            >\n                <svg focusable=\"false\" width=\"16\" height=\"16\" viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1696 384q40 0 68 28t28 68v1216q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-288h-544q-40 0-68-28t-28-68v-672q0-40 20-88t48-76l408-408q28-28 76-48t88-20h416q40 0 68 28t28 68v328q68-40 128-40h416zm-544 213l-299 299h299v-299zm-640-384l-299 299h299v-299zm196 647l316-316v-416h-384v416q0 40-28 68t-68 28h-416v640h512v-256q0-40 20-88t48-76zm956 804v-1152h-384v416q0 40-28 68t-68 28h-416v640h896z\"/></svg>\n                {{ codeSnippetModel.copyLinkLabel }}\n            </app-button>    \n        </div>\n  </div>\n  <div class='code-snippet-contents ds-u-border--1 ds-u-leading--lead'>\n        <ng-container *ngFor=\"let contentItem of codeSnippetModel.contentItems\">\n            <div class=\"code-snippet-line-number\" [ngClass]=\"contentItem.className ? contentItem.className : 'ds-u-color--base ds-u-fill--white'\">\n                <div class=\"code-snippet-line-number-darken ds-u-padding-x--1\">\n                    <div *ngIf=\"contentItem.lineNumber || !contentItem.icon\">\n                        {{ contentItem.lineNumber || '&nbsp;' }}\n                    </div>\n                    <div *ngIf=\"contentItem.icon && !contentItem.lineNumber\" class=\"codeSnippetIcon\">\n                        <fa-icon [icon]=\"contentItem.icon\"></fa-icon>\n                    </div>\n                </div>\n            </div>\n            <div class=\"code-snippet-content ds-u-padding-x--1\" [ngClass]=\"contentItem.className ? contentItem.className : 'ds-u-color--base ds-u-fill--white'\">{{ contentItem.content }}</div>\n        </ng-container>\n    </div>\n</div>\n"
    },
    {
      "name": "ComponentIntroComponent",
      "id": "component-ComponentIntroComponent-c1e40d53c454285ae6923db93bb26796",
      "file": "src/stories/component-intro.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-storybook-component-intro-component",
      "styleUrls": [],
      "styles": [],
      "template": "<h1>Import</h1>\n<app-storybook-imports-component [imports]=\"imports\"></app-storybook-imports-component>\n<h1>NgModule</h1>\n<app-storybook-ngmodule-component [imports]=\"imports\"></app-storybook-ngmodule-component>\n<h1>Parameters</h1>\n<app-storybook-parameter-list-component [parameters]=\"parameters\"></app-storybook-parameter-list-component>\n<div *ngIf=\"notes.length\">\n    <h1>Notes</h1>\n    <p *ngFor=\"let note of notes\" [innerHTML]=\"note\"></p>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "imports",
          "line": 21
        },
        {
          "name": "notes",
          "defaultValue": "[]",
          "line": 23
        },
        {
          "name": "parameters",
          "line": 22
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-storybook-component-intro-component',\n    template: `\n        <h1>Import</h1>\n        <app-storybook-imports-component [imports]=\"imports\"></app-storybook-imports-component>\n        <h1>NgModule</h1>\n        <app-storybook-ngmodule-component [imports]=\"imports\"></app-storybook-ngmodule-component>\n        <h1>Parameters</h1>\n        <app-storybook-parameter-list-component [parameters]=\"parameters\"></app-storybook-parameter-list-component>\n        <div *ngIf=\"notes.length\">\n            <h1>Notes</h1>\n            <p *ngFor=\"let note of notes\" [innerHTML]=\"note\"></p>\n        </div>\n    `,\n    styles: [],\n})\n\nexport default class ComponentIntroComponent {\n    @Input() imports;\n    @Input() parameters;\n    @Input() notes = [];\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "DatepickerComponent",
      "id": "component-DatepickerComponent-52ff55453d339424655bb2142343236a",
      "file": "e2e/app/datepicker/datepicker.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-datepicker",
      "styleUrls": ["./datepicker.component.css"],
      "styles": [],
      "templateUrl": ["./datepicker.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.css']\n})\nexport class DatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./datepicker.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<p>\n  datepicker works!\n</p>\n"
    },
    {
      "name": "ExampleModalComponent",
      "id": "component-ExampleModalComponent-737c8b049e269714c0d2de6f37cb1f02",
      "file": "src/app/components/example-modal/example-modal.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-example-modal",
      "styleUrls": ["./example-modal.component.css"],
      "styles": [],
      "templateUrl": ["./example-modal.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "modalCount",
          "line": 16,
          "type": "number"
        },
        {
          "name": "modalData",
          "line": 15,
          "type": "Array<any>"
        },
        {
          "name": "modalTitle",
          "line": 14
        }
      ],
      "outputsClass": [
        {
          "name": "closeModal",
          "defaultValue": "new EventEmitter<any>()",
          "line": 18,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClose",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-example-modal',\n  templateUrl: './example-modal.component.html',\n  styleUrls: ['./example-modal.component.css']\n})\nexport class ExampleModalComponent {\n\n  @Input() modalTitle;\n  @Input() modalData: Array<any>;\n  @Input() modalCount: number;\n\n  @Output() closeModal = new EventEmitter<any>();\n\n  onClose() {\n      this.closeModal.emit(true);\n  }\n}",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./example-modal.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<ng-template #bodyTemplate let-modalBody=\"modalBody\">\n  <ng-container *ngFor=\"let data of modalBody.modalData\">\n      <h2 *ngIf=\"data.heading\" class=\"ds-h2\">\n          {{ data.heading }}\n      </h2>\n      <p *ngIf=\"data.paragraph\" class=\"ds-text\">\n          {{ data.paragraph }}\n      </p>\n      <h3 *ngIf=\"data.heading2\" class=\"ds-h4\">\n          {{ data.heading2 }}\n      </h3>\n      <hr *ngIf=\"data.hline\"/>\n  </ng-container>\n</ng-template>\n\n<app-modal-shell #tableModal\n  [bodyTemplate]=\"bodyTemplate\"\n  [modalData]=\"modalData\"\n  [modalTitle]=\"modalTitle\" \n  [modalCount]=\"modalCount\" \n  [jawsBody]=\"true\" \n  (closeModal)=\"onClose()\">\n</app-modal-shell>"
    },
    {
      "name": "FileUploadComponent",
      "id": "component-FileUploadComponent-e2218ac02eee1f190b48f667a23d72b0",
      "file": "src/app/modules/file-upload/file-upload.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-file-upload",
      "styleUrls": ["./file-upload.component.css"],
      "styles": [],
      "templateUrl": ["./file-upload.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "fileUploadModel",
          "line": 11,
          "type": "FileUploadModel"
        }
      ],
      "outputsClass": [
        {
          "name": "onFileUpload",
          "defaultValue": "new EventEmitter<any>()",
          "line": 12,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "fileInput",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 14,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'fileInput'"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16
        },
        {
          "name": "promptUpload",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31
        },
        {
          "name": "uploadFile",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FileUploadModel } from './file-upload.model';\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\n\nexport class FileUploadComponent implements OnInit {\n\n  @Input() fileUploadModel: FileUploadModel;\n  @Output() onFileUpload = new EventEmitter<any>();\n\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  ngOnInit() {\n    if (!this.fileUploadModel) {\n      this.fileUploadModel = new FileUploadModel();\n    }\n  }\n\n  uploadFile(event) {\n    const files = [];\n    for (const file of event) {\n      files.push(file);\n    }\n    this.onFileUpload.emit(files);\n    this.fileInput.nativeElement.value = '';\n  }\n\n  promptUpload() {\n    this.fileInput.nativeElement.click();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".file-upload-container-outer {\n    cursor: pointer;\n}\n\n.file-upload-container-inner {\n    width: 100%;\n    box-sizing: content-box;\n    border: 2px dashed #979797;\n}\n",
          "styleUrl": "./file-upload.component.css"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData": "<a \n  [id]=\"fileUploadModel.id\"\n  [attr.data-auto-id]=\"fileUploadModel.dataAutoId\"\n  [attr.aria-label]=\"fileUploadModel.ariaLabel\"\n  class=\"file-upload-container-outer ds-u-text-decoration--none ds-u-display--flex ds-u-justify-content--center ds-u-align-items--center ds-u-color--base\"\n  appFileUploadDragDrop\n  [fileUploadDragDropClassName]=\"fileUploadModel.className\"\n  [fileUploadDragDropClassNameActive]=\"fileUploadModel.classNameActive\"\n  (click)=\"fileInput.click()\" href='javascript:void(0)'\n  (onFileDropped)=\"uploadFile($event)\"\n  #uploadLink\n>\n  <div \n    class=\"file-upload-container-inner ds-u-margin--3 ds-u-padding--7 ds-u-display--flex ds-u-justify-content--center ds-u-align-items--center\"\n    [ngStyle]=\"{'height.px': fileUploadModel.height }\"\n  >\n    <input id=\"fileInputId\" hidden type=\"file\" #fileInput (change)=\"uploadFile($event.target.files)\" multiple>\n    <label for=\"fileInputId\" class=\"ds-u-text-align--center\">\n      <div class='ds-u-font-size--display ds-u-color--primary'>\n        <fa-icon [icon]='fileUploadModel.icon'></fa-icon>\n      </div>\n      <div class='ds-u-font-size--h2 ds-u-font-weight--bold'>\n        {{ fileUploadModel.label }}\n      </div>\n      <div class='ds-u-font-size--h2 ds-u-padding-y--1'>\n        {{ fileUploadModel.orLabel }}\n      </div>\n      <div class='ds-u-padding-y--1'>\n        <app-button\n          [buttonType]='fileUploadModel.buttonType'\n          [ariaLabel]='fileUploadModel.buttonAriaLabel'\n          [buttonID]='fileUploadModel.id + \"Button\"'\n        >\n          <fa-icon [icon]='fileUploadModel.buttonIcon'></fa-icon>\n          {{ fileUploadModel.buttonLabel }}\n        </app-button>\n      </div>\n    </label>\n  </div>\n</a>\n"
    },
    {
      "name": "ImportsComponent",
      "id": "component-ImportsComponent-05c6ad890023bc37aa8a64513ad31d9d",
      "file": "src/stories/imports.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-storybook-imports-component",
      "styleUrls": [],
      "styles": [],
      "template": "<div *ngFor=\"let import of imports\">\n    <code>\n        import &#123;\n        <span *ngFor=\"let module of import.modules; let isLast=last\">{{ module }}{{isLast ? '' : ', '}}</span>\n        &#125; from '{{ import.file }}';\n    </code>\n<div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "imports",
          "line": 18
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-storybook-imports-component',\n    template: `\n        <div *ngFor=\"let import of imports\">\n            <code>\n                import &#123;\n                <span *ngFor=\"let module of import.modules; let isLast=last\">{{ module }}{{isLast ? '' : ', '}}</span>\n                &#125; from '{{ import.file }}';\n            </code>\n        <div>\n    `,\n    styles: [],\n})\n\nexport default class ImportsComponent {\n    @Input() imports;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "InstallationComponent",
      "id": "component-InstallationComponent-68f57d6361b10f96edb34aace223cfa6",
      "file": "src/stories/installation.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-storybook-installation-component",
      "styleUrls": [],
      "styles": [],
      "template": "<main>\n    <h1>Step 1 - Install the Bellese Angular Design System</h1>\n    <p>Run the following command to add this libary to your angular project:</p>\n    <pre>\n        npm i @bellese/angular-design-system\n    </pre>\n    <h1>Step 2 - Install the <a href='https://design.cms.gov/' target='_blank'>CMS Design System</a></h1>\n    <p>Run the following command to add the CMS design system library to your angular project:</p>\n    <pre>\n        npm i @cmsgov/design-system-core\n        npm i @cmsgov/design-system-layout\n    </pre>\n    <h1>Step 3 - SCSS File</h1>\n    <p>Add the following lines to your SCSS file</p>\n    <pre>\n        @import '@cmsgov/design-system-support/src/settings/index';\n        $font-path:   '/assets/fonts';\n        $image-path:  '/assets/images';\n        @import '@cmsgov/design-system-core/src/index.scss';\n        @import '@cmsgov/design-system-layout/src/index.scss';\n    </pre>\n    <h1>Step 4 - tsconfig.json</h1>\n    <p>Add the following line to the compilerOptions section of your tsconfig.json file</p>\n    <pre>\n        \"paths\": &#123;\n            \"@angular/*\":[\n                \"node_modules/@angular/*\"\n            ]\n        &#125;\n    </pre>\n</main>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-storybook-installation-component',\n    template: `\n        <main>\n            <h1>Step 1 - Install the Bellese Angular Design System</h1>\n            <p>Run the following command to add this libary to your angular project:</p>\n            <pre>\n                npm i @bellese/angular-design-system\n            </pre>\n            <h1>Step 2 - Install the <a href='https://design.cms.gov/' target='_blank'>CMS Design System</a></h1>\n            <p>Run the following command to add the CMS design system library to your angular project:</p>\n            <pre>\n                npm i @cmsgov/design-system-core\n                npm i @cmsgov/design-system-layout\n            </pre>\n            <h1>Step 3 - SCSS File</h1>\n            <p>Add the following lines to your SCSS file</p>\n            <pre>\n                @import '@cmsgov/design-system-support/src/settings/index';\n                $font-path:   '/assets/fonts';\n                $image-path:  '/assets/images';\n                @import '@cmsgov/design-system-core/src/index.scss';\n                @import '@cmsgov/design-system-layout/src/index.scss';\n            </pre>\n            <h1>Step 4 - tsconfig.json</h1>\n            <p>Add the following line to the compilerOptions section of your tsconfig.json file</p>\n            <pre>\n                \"paths\": &#123;\n                    \"@angular/*\":[\n                        \"node_modules/@angular/*\"\n                    ]\n                &#125;\n            </pre>\n        </main>\n    `,\n    styles: [],\n})\nexport default class InstallationComponent {\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "ModalGenericComponent",
      "id": "component-ModalGenericComponent-990dc11ae12dab6843679890e2ee9ed2",
      "file": "src/app/modules/modal-shell/modal-generic/modal-generic.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-modal-generic-ds",
      "styleUrls": ["./modal-generic.component.scss"],
      "styles": [],
      "templateUrl": ["./modal-generic.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "heyyyyy",
          "line": 12
        },
        {
          "name": "modalCount",
          "line": 11
        },
        {
          "name": "modalData",
          "line": 10
        },
        {
          "name": "modalTitle",
          "line": 9
        }
      ],
      "outputsClass": [
        {
          "name": "closeModal",
          "defaultValue": "new EventEmitter<any>()",
          "line": 14,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "onConfirmData",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "confirm",
          "args": [
            {
              "name": "buttonFunc",
              "type": "any",
              "optional": true
            },
            {
              "name": "$event",
              "type": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "buttonFunc",
              "type": "any",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "$event",
              "type": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleClose",
          "args": [
            {
              "name": "$event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        },
        {
          "name": "setOnConfirmData",
          "args": [
            {
              "name": "data",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "jsdoctags": [
            {
              "name": "data",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-generic-ds',\n  templateUrl: './modal-generic.component.html',\n  styleUrls: ['./modal-generic.component.scss'],\n})\nexport class ModalGenericComponent implements OnInit {\n  @Input() modalTitle;\n  @Input() modalData;\n  @Input() modalCount;\n  @Input() heyyyyy;\n\n  @Output() closeModal = new EventEmitter<any>();\n\n  onConfirmData;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  handleClose($event) {\n    this.closeModal.emit($event);\n  }\n\n  setOnConfirmData(data) {\n    this.onConfirmData = data;\n  }\n\n  confirm(buttonFunc?: any, $event?) {\n    this.handleClose($event);\n    if (this.modalData.onConfirm) {\n      this.modalData.onConfirm(this.onConfirmData);\n    } else if (buttonFunc) {\n      buttonFunc(this.onConfirmData);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "::ng-deep .modal-image-clear {\n  clear: both;\n}\n",
          "styleUrl": "./modal-generic.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 16
      },
      "implements": ["OnInit"],
      "templateData": "<app-modal-shell\n  [modalTitle]=\"modalTitle\"\n  [modalCount]=\"modalCount\"\n  (closeModal)=\"handleClose($event)\"\n  [headerTemplate]=\"modalData.header ? headerTemplate : null\"\n  [bodyTemplate]=\"bodyTemplate\"\n  [footerTemplate]=\"footerTemplate\"\n  [modalClass]=\"modalData.modalClass\"\n  [jawsBody]=\"true\"\n>\n  <ng-template #headerTemplate let-modalHeader=\"modalHeader\">\n    <div\n      *ngIf=\"modalData.header\"\n      [innerHTML]=\"modalData.header\"\n      id=\"{{ 'dialog-title-' + modalHeader.modalCount }}\"\n    ></div>\n  </ng-template>\n\n  <ng-template #bodyTemplate let-modalBody=\"modalBody\">\n    <div *ngIf=\"modalData.body\" [innerHTML]=\"modalData.body\"></div>\n    <div *ngIf=\"modalData.bodyFormatted\">\n      <ng-container *ngFor=\"let data of modalData.bodyFormatted\">\n        <h2 *ngIf=\"data.heading\" [ngClass]=\"'ds-h2 ' + data.class\">\n          {{ data.heading }}\n        </h2>\n        <p *ngIf=\"data.paragraph\" [ngClass]=\"'ds-text ' + data.class\">\n          {{ data.paragraph }}\n        </p>\n        <h3 *ngIf=\"data.heading2\" [ngClass]=\"'ds-h4 ' + data.class\">\n          {{ data.heading2 }}\n        </h3>\n        <hr *ngIf=\"data.hline\" [ngClass]=\"data.class\"/>\n      </ng-container>\n    </div>\n    <ng-content *ngIf=\"modalData.useNgContent\"></ng-content>\n  </ng-template>\n  <ng-template #footerTemplate let-modalFooter=\"modalFooter\">\n    <app-button\n      *ngIf=\"modalData.buttonLabel\"\n      [buttonID]=\"modalData.buttonId\"\n      (callBack)=\"confirm(null, $event)\"\n      [buttonType]=\"modalData.buttonType\"\n      [ariaLabel]=\"modalData.buttonLabel || modalData.ariaLabel\"\n    >\n      {{ modalData.buttonLabel }}\n      <div aria-live=\"assertive\" class=\"sr-only\" aria-atomic=\"true\" aria-atomic=\"true\">\n        <div\n          [innerHTML]=\"modalData.buttonLabel\"\n        ></div>\n      </div>\n    </app-button>\n    <app-button\n      *ngFor=\"let button of modalData.buttons\"\n      [buttonID]=\"button.buttonId\"\n      (callBack)=\"confirm(button.onConfirm, $event)\"\n      [buttonType]=\"button.buttonType\"\n      [ariaLabel]=\"button.buttonLabel || modalData.ariaLabel\"\n    >\n      {{ button.buttonLabel }}\n      <div aria-live=\"assertive\" class=\"sr-only\" aria-atomic=\"true\" aria-atomic=\"true\">\n        <div\n          [innerHTML]=\"button.buttonLabel\"\n        ></div>\n      </div>\n    </app-button>\n  </ng-template>\n</app-modal-shell>\n"
    },
    {
      "name": "NgModuleComponent",
      "id": "component-NgModuleComponent-3304eb81641b957f24437acb5d268c68",
      "file": "src/stories/ngmodule.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-storybook-ngmodule-component",
      "styleUrls": [],
      "styles": [],
      "template": "        <p *ngIf=\"ngModuleDefinitionKeys().length === 0; else imports\">This component does not require any imports</p>\n        <ng-template #imports>\n            <p>Make the following changes to your NgModule definition:</p>\n            <pre>\n@NgModule(&#123;\n    ...,\n    <span *ngFor=\"let ngModuleSection of ngModuleDefinitionKeys(); let isLast = last\">{{ ngModuleSection }}: [\n        ...,\n        <span *ngFor=\"let module of ngModuleDefinition[ngModuleSection]; let isLastInner = last\">{{ module }},\n    <span *ngIf=\"isLastInner\">],</span>    </span><span *ngIf=\"!isLast\">\n    </span></span>\n&#125;)</pre>\n        </ng-template>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "imports",
          "line": 25
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "ngModuleDefinition",
          "defaultValue": "{}",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [
        {
          "name": "ngModuleDefinitionKeys",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 47
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n// The tabbing/spacing below is odd because of the pre tag that wraps around the @NgModule definition\n@Component({\n    selector: 'app-storybook-ngmodule-component',\n    template: `\n        <p *ngIf=\"ngModuleDefinitionKeys().length === 0; else imports\">This component does not require any imports</p>\n        <ng-template #imports>\n            <p>Make the following changes to your NgModule definition:</p>\n            <pre>\n@NgModule(&#123;\n    ...,\n    <span *ngFor=\"let ngModuleSection of ngModuleDefinitionKeys(); let isLast = last\">{{ ngModuleSection }}: [\n        ...,\n        <span *ngFor=\"let module of ngModuleDefinition[ngModuleSection]; let isLastInner = last\">{{ module }},\n    <span *ngIf=\"isLastInner\">],</span>    </span><span *ngIf=\"!isLast\">\n    </span></span>\n&#125;)</pre>\n        </ng-template>\n    `,\n    styles: [],\n})\n\nexport default class NgModuleComponent implements OnInit {\n    @Input() imports;\n    ngModuleDefinition: any = {};\n\n    ngOnInit() {\n        this.ngModuleDefinition = {};\n        for (const importModule of this.imports) {\n            const ngModuleSection = importModule.ngmodule;\n            if (ngModuleSection) {\n                if (this.ngModuleDefinition[ngModuleSection] === undefined) {\n                    // Make a copy of the import modules list so that the imports component does not show forRoot()\n                    let importModuleCopy = importModule.modules;\n                    if (importModule.forRoot) {\n                        importModuleCopy = importModule.modules.map(module => module = `${module}.forRoot()`);\n                    }\n                    this.ngModuleDefinition[ngModuleSection] = importModuleCopy;\n                } else {\n                    this.ngModuleDefinition[ngModuleSection] = this.ngModuleDefinition[ngModuleSection].concat(importModule.modules);\n                }\n            }\n        }\n    }\n\n    ngModuleDefinitionKeys() {\n        return Object.keys(this.ngModuleDefinition);\n    }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["OnInit"]
    },
    {
      "name": "ParameterComponent",
      "id": "component-ParameterComponent-18292353fda77dd4102f04d420ce9661",
      "file": "src/stories/parameter.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-storybook-parameter-component",
      "styleUrls": [],
      "styles": [".deprecated { opacity: 50%; }"],
      "template": "<div [ngClass]=\"{ deprecated: parameter.isDeprecated }\">\n  <strong>{{ parameter.name }}</strong\n  >&nbsp;<em>({{ parameter.type }})</em>\n  <div [innerHTML]=\"parameter.value\"></div>\n  <div *ngIf=\"optionsList.length\">\n    <em>Options:</em>\n    <ul>\n      <li *ngFor=\"let option of optionsList\">\n        {{ option }}\n        <span *ngIf=\"option === parameter.default\"><em>(default)</em></span>\n      </li>\n    </ul>\n  </div>\n  <div *ngIf=\"parameter.default && !optionsList.length\" [innerHTML]=\"'Default: ' + parameter.default\"></div>\n  <div *ngIf=\"parameter.properties\">\n    <em>Properties:</em>\n    <ul>\n      <li *ngFor=\"let property of parameter.properties\">\n        <app-storybook-parameter-component [parameter]=\"property\"></app-storybook-parameter-component>\n      </li>\n    </ul>\n  </div>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "parameter",
          "line": 33
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "optionsList",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-storybook-parameter-component',\n  template: `\n    <div [ngClass]=\"{ deprecated: parameter.isDeprecated }\">\n      <strong>{{ parameter.name }}</strong\n      >&nbsp;<em>({{ parameter.type }})</em>\n      <div [innerHTML]=\"parameter.value\"></div>\n      <div *ngIf=\"optionsList.length\">\n        <em>Options:</em>\n        <ul>\n          <li *ngFor=\"let option of optionsList\">\n            {{ option }}\n            <span *ngIf=\"option === parameter.default\"><em>(default)</em></span>\n          </li>\n        </ul>\n      </div>\n      <div *ngIf=\"parameter.default && !optionsList.length\" [innerHTML]=\"'Default: ' + parameter.default\"></div>\n      <div *ngIf=\"parameter.properties\">\n        <em>Properties:</em>\n        <ul>\n          <li *ngFor=\"let property of parameter.properties\">\n            <app-storybook-parameter-component [parameter]=\"property\"></app-storybook-parameter-component>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n  styles: ['.deprecated { opacity: 50%; }'],\n})\nexport default class ParameterComponent implements OnInit {\n  @Input() parameter;\n\n  optionsList = [];\n\n  ngOnInit() {\n    if (this.parameter.options) {\n      for (const optionsListItem in this.parameter.options) {\n        if (this.parameter.options.hasOwnProperty(optionsListItem)) {\n          this.optionsList.push(`${this.parameter.type}.${optionsListItem}`);\n        }\n      }\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ".deprecated { opacity: 50%; }\n",
      "implements": ["OnInit"]
    },
    {
      "name": "ParameterListComponent",
      "id": "component-ParameterListComponent-b1520eb593304d4acf5c83172492e080",
      "file": "src/stories/parameter-list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-storybook-parameter-list-component",
      "styleUrls": [],
      "styles": [],
      "template": "<p *ngIf=\"parameters === undefined || parameters.length == 0; else parameterList\">This component does not accept any parameters</p>\n<ng-template #parameterList>\n    <ul>\n        <li *ngFor=\"let parameter of parameters\">\n            <app-storybook-parameter-component [parameter]=\"parameter\"></app-storybook-parameter-component>\n        </li>\n    </ul>\n</ng-template>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "parameters",
          "line": 19
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-storybook-parameter-list-component',\n    template: `\n        <p *ngIf=\"parameters === undefined || parameters.length == 0; else parameterList\">This component does not accept any parameters</p>\n        <ng-template #parameterList>\n            <ul>\n                <li *ngFor=\"let parameter of parameters\">\n                    <app-storybook-parameter-component [parameter]=\"parameter\"></app-storybook-parameter-component>\n                </li>\n            </ul>\n        </ng-template>\n    `,\n    styles: [],\n})\n\nexport default class ParameterListComponent {\n    @Input() parameters;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "PopoverComponent",
      "id": "component-PopoverComponent-f9a7445f4f377d4200aa4ac5f3db64b6",
      "file": "src/app/modules/popover/popover.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-popover",
      "styleUrls": ["./popover.component.css"],
      "styles": [],
      "templateUrl": ["./popover.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "popoverModel",
          "line": 18,
          "type": "PopoverModel"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "faChevronDown",
          "defaultValue": "faChevronDown",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "faChevronUp",
          "defaultValue": "faChevronUp",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "hasChanged",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "isOpen",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "trigger",
          "type": "MdePopoverTrigger",
          "optional": false,
          "description": "",
          "line": 19,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "MdePopoverTrigger"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "handleClick",
          "args": [
            {
              "name": "item",
              "type": "PopoverItemModel"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "jsdoctags": [
            {
              "name": "item",
              "type": "PopoverItemModel",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handlePopoverButtonClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, ViewEncapsulation, ViewChild } from '@angular/core';\n\n// Models\nimport { PopoverModel, PopoverItemModel } from './popover.model';\n\n// Misdc\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport { MdePopoverTrigger } from '@material-extended/mde';\n\n@Component({\n  selector: 'app-popover',\n  templateUrl: './popover.component.html',\n  styleUrls: ['./popover.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PopoverComponent implements OnInit {\n  @Input() popoverModel: PopoverModel;\n  @ViewChild(MdePopoverTrigger) trigger: MdePopoverTrigger;\n\n  faChevronDown = faChevronDown;\n  faChevronUp = faChevronUp;\n  isOpen = false;\n  hasChanged = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  handlePopoverButtonClick() {\n    this.isOpen = !this.isOpen;\n    this.hasChanged = true;\n    // Delay popover from opening so the browser knows to read the aria-live text first\n    setTimeout(() => {\n      this.trigger.togglePopover();\n    }, 150);\n  }\n\n  handleClick(item: PopoverItemModel) {\n    if (item.url) {\n      window.location.href = item.url;\n    } else if (item.onClick) {\n      item.onClick(item);\n    } else {\n      console.warn('The click handler for this item was not configured correctly.');\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "#mde--popover--container {\n  overflow-y: scroll;\n  max-height: 75vh;\n}\n\n.mde-popover-content-inner {\n  box-shadow: 0px 0px 4px 0px rgba(78, 78, 78, 0.5);\n}\n\n.mde-popover-content-inner app-button {\n  width: 100%;\n}\n\n.mde-popover-content-inner app-button button {\n  text-align: left;\n  width: 100%;\n}\n\n/* ::ng-deep.mde-popover-direction-arrow {\n    right: 8px !important;\n} */\n\n/*****************************\n * The following styles were copied over by hand because I could not get the\n * following command to work:\n * @import '~@angular/cdk/overlay-prebuilt.css';\n *****************************/\n\n::ng-deep.cdk-global-overlay-wrapper,\n::ng-deep.cdk-overlay-container {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n::ng-deep.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000;\n}\n::ng-deep.cdk-overlay-container:empty {\n  display: none;\n}\n::ng-deep.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000;\n}\n::ng-deep.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%;\n}\n::ng-deep.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0;\n}\n::ng-deep.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 1;\n}\n@media screen and (-ms-high-contrast: active) {\n  ::ng-deep.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n    opacity: 0.6;\n  }\n}\n::ng-deep.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32);\n}\n::ng-deep.cdk-overlay-transparent-backdrop,\n.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0;\n}\n::ng-deep.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px;\n}\n::ng-deep.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll;\n}\n",
          "styleUrl": "./popover.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 24
      },
      "implements": ["OnInit"],
      "templateData": "<app-button\n  [buttonID]=\"popoverModel.id\"\n  [dataAutoId]=\"popoverModel.dataAutoId ? popoverModel.dataAutoId : popoverModel.id\"\n  [ariaLabel]=\"popoverModel.ariaLabel ? popoverModel.ariaLabel : popoverModel.label\"\n  [buttonType]=\"\n    'ds-c-button ds-c-button--transparent ds-u-padding--0 ds-u-padding-x--1 ds-u-text-decoration--none hqr-hide ' +\n    popoverModel.buttonClass\n  \"\n  [mdePopoverTriggerFor]=\"menuPopover\"\n  mdePopoverTriggerOn=\"none\"\n  [mdePopoverPositionX]=\"popoverModel.mdePopoverPositionX\"\n  [mdePopoverPositionY]=\"popoverModel.mdePopoverPositionY\"\n  #popoverTrigger=\"mdePopoverTrigger\"\n  mdePopoverArrowOffsetX=\"16\"\n  (callBack)=\"handlePopoverButtonClick()\"\n  class=\"ds-u-padding-left--1\"\n>\n  <fa-icon [icon]=\"popoverModel.icon\" *ngIf=\"popoverModel.icon\"></fa-icon>\n  {{ popoverModel.label }}\n  <ng-content *ngIf=\"!popoverModel.label && !popoverModel.icon\"></ng-content>\n  <fa-icon\n    [icon]=\"isOpen ? faChevronUp : faChevronDown\"\n    class=\"ds-u-padding-left--1\"\n    *ngIf=\"popoverModel.showArrow\"\n  ></fa-icon>\n</app-button>\n\n<div aria-atomic=\"true\" aria-live=\"assertive\" class=\"sr-only\">\n  <span\n    *ngIf=\"hasChanged\"\n    [innerHTML]=\"this.isOpen ? this.popoverModel.ariaLiveTextOpen : this.popoverModel.ariaLiveTextClosed\"\n  ></span>\n</div>\n\n<mde-popover\n  #menuPopover=\"mdePopover\"\n  [mdePopoverOverlapTrigger]=\"false\"\n  [mdeFocusTrapEnabled]=\"true\"\n  id=\"mdePopoverId\"\n>\n  <div\n    class=\"mde-popover-content-inner ds-u-display--inline-block ds-u-padding--1 ds-u-fill--white\"\n    id=\"mde--popover--container\"\n  >\n    <div\n      *ngFor=\"let item of popoverModel.items; let i = index\"\n      class=\"ds-u-display--flex ds-u-justify-content--between\"\n      [style.cursor]=\"'pointer'\"\n    >\n      <app-button\n        [buttonID]=\"item.id\"\n        [ariaLabel]=\"item.ariaLabel ? item.ariaLabel : item.label\"\n        [dataAutoId]=\"item.dataAutoId ? item.dataAutoId : item.dataAutoId\"\n        buttonType=\"ds-c-button ds-c-button--transparent ds-u-padding--1 ds-u-padding-y--2 ds-u-font-weight--normal ds-u-text-decoration--none hqr-hide ds-u-color--base\"\n        (click)=\"handleClick(item)\"\n      >\n        {{ item.label }}\n      </app-button>\n      <fa-icon\n        [icon]=\"item.icon\"\n        *ngIf=\"item.icon\"\n        class=\"ds-u-padding--1 ds-u-padding-y--2\"\n        (click)=\"handleClick(item)\"\n      ></fa-icon>\n    </div>\n  </div>\n</mde-popover>\n"
    },
    {
      "name": "SearchFieldComponent",
      "id": "component-SearchFieldComponent-8ed2daac488238d290fbc0b1670fae34",
      "file": "src/app/modules/search-field/search-field.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-search-field",
      "styleUrls": ["./search-field.component.css"],
      "styles": [],
      "templateUrl": ["./search-field.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dataAutoId",
          "line": 19,
          "type": "string"
        },
        {
          "name": "hint",
          "line": 17,
          "type": "string"
        },
        {
          "name": "hintClass",
          "line": 18,
          "type": "string"
        },
        {
          "name": "id",
          "line": 14,
          "type": "string"
        },
        {
          "name": "inputClass",
          "line": 15,
          "type": "string"
        },
        {
          "name": "labelClass",
          "line": 16,
          "type": "string"
        },
        {
          "name": "placeHolder",
          "line": 12,
          "type": "string"
        },
        {
          "name": "reset",
          "line": 11,
          "type": "boolean"
        },
        {
          "name": "showReset",
          "line": 10,
          "type": "boolean"
        },
        {
          "name": "title",
          "line": 13,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "changes",
          "defaultValue": "new EventEmitter<any>()",
          "line": 21,
          "type": "EventEmitter"
        },
        {
          "name": "userInput",
          "defaultValue": "new EventEmitter<any>()",
          "line": 20,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "searchValue",
          "type": "",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methodsClass": [
        {
          "name": "callBackFunction",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        },
        {
          "name": "prepareSearch",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-search-field',\n  templateUrl: './search-field.component.html',\n  styleUrls: ['./search-field.component.css']\n})\nexport class SearchFieldComponent implements OnInit, OnChanges {\n  searchValue;\n  @Input() showReset: boolean;\n  @Input() reset: boolean;\n  @Input() placeHolder: string;\n  @Input() title: string;\n  @Input() id: string;\n  @Input() inputClass: string;\n  @Input() labelClass: string;\n  @Input() hint: string;\n  @Input() hintClass: string;\n  @Input() dataAutoId: string;\n  @Output() userInput = new EventEmitter<any>();\n  @Output() changes = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    if (this.reset && this.searchValue !== '') {\n      this.searchValue = '';\n    }\n  }\n\n  callBackFunction(e) {\n    const value = e;\n    if (value && value.trim() !== '') {\n      this.userInput.emit(value.trim());\n    } else {\n      this.searchValue = '';\n    }\n  }\n\n  prepareSearch(e) {\n    if (this.reset) {\n      this.changes.emit(false);\n    }\n\n    if (this.searchValue) {\n      if (this.searchValue.trim() === '') {\n        this.searchValue = '';\n      } else {\n        e.target.select();\n      }\n    }\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "input {\n    display: inline-block;\n}\n\n.search-button {\n    padding: 18px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url('../../../assets/images/search.svg');\n    background-color: white;\n    display: inline-block;\n    margin-left: -40px;\n    margin-bottom: -12px;\n    background-size: 25px;\n}\n\n.ds-c-field {\n    margin-bottom: 0;\n    margin-top:5px;\n    max-width: 100% !important;\n}\n\n.ds-c-label {\n    margin-top: 0;\n    max-width: 100% !important;\n}\n\n.white {\n    color:white;\n}",
          "styleUrl": "./search-field.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 21
      },
      "implements": ["OnInit", "OnChanges"],
      "templateData": "<label class=\"ds-c-label\" [ngClass]=\"labelClass\" for=\"{{ id }}\">\n  <span class=\"ds-u-font-weight--bold\">{{ title }}</span>\n</label>\n<div aria-atomic=\"true\" aria-live=\"assertive\">\n  <span *ngIf=\"hint\" class=\"ds-c-field__hint\" [ngClass]=\"hintClass\" [innerHTML]=\"hint\"></span>\n</div>\n<input\n  placeholder=\"{{ placeHolder }}\"\n  class=\"ds-c-field ds-u-padding-right--5\"\n  attr.data-auto-id=\"{{ dataAutoId }}\"\n  tabindex=\"0\"\n  [ngClass]=\"inputClass\"\n  id=\"{{ id }}\"\n  name=\"{{ id }}\"\n  type=\"text\"\n  [(ngModel)]=\"searchValue\"\n  (keyup.enter)=\"callBackFunction(searchValue)\"\n  (focus)=\"prepareSearch($event)\"\n/>\n<span\n  class=\"search-button pointer\"\n  role=\"button\"\n  tabindex=\"0\"\n  aria-label=\"search button\"\n  (click)=\"callBackFunction(searchValue)\"\n  (keyup.enter)=\"callBackFunction(searchValue)\"\n>\n</span>\n<div style=\"text-align: right;\">\n  <button\n    *ngIf=\"showReset\"\n    type=\"button\"\n    class=\"ds-c-button ds-c-button--small ds-c-button--transparent\"\n    (click)=\"searchValue = ''\"\n    (keyup.enter)=\"searchValue = ''\"\n  >\n    reset\n  </button>\n</div>\n"
    },
    {
      "name": "SpinnerComponent",
      "id": "component-SpinnerComponent-23ae03c98b83f853ac51ea63f6268ccc",
      "file": "src/app/modules/spinner/spinner.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-spinner",
      "styleUrls": ["./spinner.component.css"],
      "styles": [],
      "templateUrl": ["./spinner.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "color",
          "line": 10,
          "type": "string"
        },
        {
          "name": "dataAutoId",
          "line": 14,
          "type": "string"
        },
        {
          "name": "filled",
          "line": 11,
          "type": "boolean"
        },
        {
          "name": "hide",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "inversed",
          "line": 12,
          "type": "boolean"
        },
        {
          "name": "size",
          "line": 9,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent {\n  @Input() size: string;\n  @Input() color: string;\n  @Input() filled: boolean;\n  @Input() inversed: boolean;\n  @Input() hide: boolean;\n  @Input() dataAutoId: string;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./spinner.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<span *ngIf=\"!hide\" attr.data-auto-id=\"{{dataAutoId}}_spinner\" class=\"ds-c-spinner\nds-u-fill--{{ inversed ? 'background-inverse' : null }}\nds-c-spinner--{{ filled ?  'filled' : null }}\nds-u-color--{{color}}\nds-c-spinner--{{size}}\" [attr.aria-valuetext]=\"'Loading'\" role=\"progressbar\">\n</span>\n"
    },
    {
      "name": "StarComponent",
      "id": "component-StarComponent-0bbd4b91d3b344640c3dc027197fdf53",
      "file": "src/app/modules/star/star/star.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-star",
      "styleUrls": ["./star.component.css"],
      "styles": [],
      "templateUrl": ["./star.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dataAutoId",
          "line": 15,
          "type": "string"
        },
        {
          "name": "fill",
          "line": 9,
          "type": "boolean"
        },
        {
          "name": "height",
          "line": 13,
          "type": "string"
        },
        {
          "name": "index",
          "line": 12,
          "type": "number"
        },
        {
          "name": "rating",
          "line": 10,
          "type": "number"
        },
        {
          "name": "starAmount",
          "line": 11,
          "type": "number"
        },
        {
          "name": "width",
          "line": 14,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "description",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.css']\n})\nexport class StarComponent implements OnInit {\n  @Input() fill: boolean;\n  @Input() rating: number;\n  @Input() starAmount: number;\n  @Input() index: number;\n  @Input() height: string;\n  @Input() width: string;\n  @Input() dataAutoId: string;\n  description;\n\n  ngOnInit() {\n    if (this.index === 0) {\n      this.description = 'Star rating graphic ' + this.rating + ' out of ' + this.starAmount + ' stars';\n    }\n  }\n\n\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./star.component.css"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData": "<svg [attr.width]=\"width\" [attr.height]=\"height\" viewBox=\"0 0 30 30\" focusable=\"false\" attr.data-auto-id=\"{{dataAutoId}}\">\n  <title *ngIf=\"description\">\n    {{description}}\n  </title>\n  <g stroke=\"none\" stroke-width=\"2\" [attr.fill]=\"fill ? '#E6BC0A' : '#212121'\" fill-rule=\"evenodd\">\n    <g transform=\"translate(-465.000000, -315.000000)\" stroke=\"#212121\">\n      <polygon points=\"480 339.046209 470.72949 344 472.5 333.507701 465 326.077014 475.364745 324.546209 480 315 484.635255 324.546209 495 326.077014 487.5 333.507701 489.27051 344\">\n      </polygon>\n    </g>\n  </g>\n</svg>"
    },
    {
      "name": "StarRatingComponent",
      "id": "component-StarRatingComponent-7c760d70f050481e43be1acbf7e2571f",
      "file": "src/app/modules/star/star-rating/star-rating.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-star-rating",
      "styleUrls": ["./star-rating.component.css"],
      "styles": [],
      "templateUrl": ["./star-rating.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "height",
          "defaultValue": "'30px'",
          "line": 11
        },
        {
          "name": "rating",
          "line": 10,
          "type": "number"
        },
        {
          "name": "starAmount",
          "defaultValue": "5",
          "line": 9
        },
        {
          "name": "width",
          "defaultValue": "'30px'",
          "line": 12
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "Arr",
          "defaultValue": "Array",
          "type": "",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "total",
          "type": "",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-star-rating',\n  templateUrl: './star-rating.component.html',\n  styleUrls: ['./star-rating.component.css']\n})\nexport class StarRatingComponent {\n  @Input() starAmount = 5;\n  @Input() rating: number;\n  @Input() height = '30px';\n  @Input() width = '30px';\n  total;\n  Arr = Array;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./star-rating.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<app-star [rating]=\"rating\" [starAmount]=\"starAmount\" *ngFor=\"let star of Arr(starAmount).fill({}); let i = index\" [index]=\"i\"\n    [width]=\"width\" [height]=\"height\" [fill]=\"i < rating\">\n</app-star>"
    },
    {
      "name": "TableCellComponent",
      "id": "component-TableCellComponent-86d332ad39afd7056281bad128525775",
      "file": "src/app/modules/table2/table-cell/table-cell.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-table-cell-2",
      "styleUrls": ["./table-cell.component.scss"],
      "styles": [],
      "templateUrl": ["./table-cell.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "tableCellModel",
          "line": 13,
          "type": "TableCellModel"
        }
      ],
      "outputsClass": [
        {
          "name": "cellClick",
          "defaultValue": "new EventEmitter<any>()",
          "line": 14,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "TableCellTypeEnum",
          "defaultValue": "TableCellTypeEnum",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "buttonClickEvent",
          "args": [
            {
              "name": "$event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "cellClass",
          "args": [],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 18
        },
        {
          "name": "checkboxClickEvent",
          "args": [
            {
              "name": "$event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n// Models\nimport { TableCellModel, TableCellTypeEnum } from '../table.models';\n\n@Component({\n  selector: 'app-table-cell-2',\n  templateUrl: './table-cell.component.html',\n  styleUrls: ['./table-cell.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TableCellComponent {\n  @Input() tableCellModel: TableCellModel;\n  @Output() cellClick = new EventEmitter<any>();\n\n  TableCellTypeEnum = TableCellTypeEnum;\n\n  cellClass() {\n    const classes = ['table_cell'];\n    if (this.tableCellModel.columnKey) {\n      classes.push(`table_cell_${this.tableCellModel.columnKey}`);\n    }\n    if (this.tableCellModel.class) {\n      classes.push(this.tableCellModel.class);\n    }\n    return classes;\n  }\n\n  checkboxClickEvent($event) {\n    this.cellClick.emit({\n      $event: $event,\n      tableCellModel: this.tableCellModel,\n    });\n  }\n\n  buttonClickEvent($event) {\n    if (this.tableCellModel.buttonOnClick) {\n      this.tableCellModel.buttonOnClick($event);\n    } else {\n      console.warn(\"The button's click event was not configured.\");\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".table--button {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  @media screen and (max-width: 1080px) {\n    max-width: 300px;\n  }\n}\n",
          "styleUrl": "./table-cell.component.scss"
        }
      ],
      "stylesData": "",
      "templateData": "<ng-template #cellContent>\n  <fa-icon\n    *ngIf=\"tableCellModel.icon\"\n    [icon]=\"tableCellModel.icon\"\n    class=\"ds-u-padding-right--1\"\n    [ngClass]=\"tableCellModel.iconClass\"\n  ></fa-icon>\n  <span [innerHTML]=\"tableCellModel.label\"></span>\n</ng-template>\n\n<div [ngClass]=\"cellClass()\" [title]=\"tableCellModel.label\">\n  <ng-container [ngSwitch]=\"tableCellModel.type\">\n    <ng-container *ngSwitchCase=\"TableCellTypeEnum.BUTTON\">\n      <app-button\n        (callBack)=\"buttonClickEvent($event)\"\n        [disabled]=\"tableCellModel.buttonDisabled\"\n        [ariaLabel]=\"tableCellModel.ariaLabel ? tableCellModel.ariaLabel : tableCellModel.label\"\n        [buttonType]=\"'table--button ds-c-button ' + tableCellModel.buttonClass\"\n      >\n        <ng-container *ngTemplateOutlet=\"cellContent\"></ng-container>\n      </app-button>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"TableCellTypeEnum.CHECKBOX\">\n      <app-choice\n        [labelTextClass]=\"'sr-only'\"\n        [label]=\"tableCellModel.label\"\n        [ariaLabel]=\"tableCellModel.ariaLabel\"\n        [value]=\"tableCellModel.checkboxValue\"\n        [showTitle]=\"true\"\n        [isChecked]=\"tableCellModel.isChecked\"\n        (choiceChange)=\"checkboxClickEvent($event)\"\n        size=\"small\"\n      >\n      </app-choice>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"TableCellTypeEnum.POPOVER\">\n      <app-popover [popoverModel]=\"tableCellModel.popoverModel\"></app-popover>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"TableCellTypeEnum.DEFAULT\">\n      <div>\n        <ng-container *ngTemplateOutlet=\"cellContent\"></ng-container>\n      </div>\n    </ng-container>\n  </ng-container>\n</div>\n"
    },
    {
      "name": "TableComponent",
      "id": "component-TableComponent-4612db6b083074f5fb91ac613cf42731",
      "file": "src/app/modules/table2/table.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-table-2",
      "styleUrls": ["./table.component.css"],
      "styles": [],
      "templateUrl": ["./table.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "tableModel",
          "line": 12,
          "type": "TableModel"
        }
      ],
      "outputsClass": [
        {
          "name": "paginationClick",
          "defaultValue": "new EventEmitter<any>()",
          "line": 14,
          "type": "EventEmitter"
        },
        {
          "name": "sortClick",
          "defaultValue": "new EventEmitter<any>()",
          "line": 15,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "cellClick",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getSelectedCheckboxValues",
          "args": [
            {
              "name": "columnKey",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "[] | boolean",
          "typeParameters": [],
          "line": 46,
          "jsdoctags": [
            {
              "name": "columnKey",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "headerClick",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "paginationClickEvent",
          "args": [
            {
              "name": "$event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n// Models\nimport { TableModel, TableHeaderTypeEnum, TableCellTypeEnum, TableHeaderRowModel } from './table.models';\n\n@Component({\n  selector: 'app-table-2',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css'],\n})\nexport class TableComponent {\n  @Input() tableModel: TableModel;\n\n  @Output() paginationClick = new EventEmitter<any>();\n  @Output() sortClick = new EventEmitter<any>();\n\n  constructor() {}\n\n  headerClick(event) {\n    switch (event.tableHeaderModel.type) {\n      case TableHeaderTypeEnum.SORT:\n        this.tableModel.toggleSort(event.tableHeaderModel.columnKey);\n        this.sortClick.emit(event);\n        break;\n\n      case TableHeaderTypeEnum.CHECKBOX:\n        this.tableModel.toggleSelectAll(event.tableHeaderModel.columnKey, event.$event.target.checked);\n        break;\n    }\n  }\n\n  cellClick(event) {\n    switch (event.tableCellModel.type) {\n      case TableCellTypeEnum.CHECKBOX:\n        event.tableCellModel.toggleCheckbox(event.$event.target.checked);\n        this.tableModel.unselectHeaderCheckbox(event.tableCellModel.columnKey);\n        break;\n    }\n  }\n\n  paginationClickEvent($event) {\n    this.tableModel.pagination.currentPage = $event;\n    this.paginationClick.emit($event);\n  }\n\n  getSelectedCheckboxValues(columnKey): string[] | boolean {\n    const checkboxHeader = this.tableModel.headers.filter((header) => header.columnKey === columnKey)[0];\n    if (checkboxHeader.isChecked) {\n      return true;\n    } else {\n      return this.tableModel.getSelectedCheckboxValues(columnKey);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "table {\n    width: 100%;\n    border-collapse: collapse;\n    table-layout: fixed;\n}\n\nth {\n    background-color: transparent;\n}\n\nthead th {\n    border-bottom: 0;\n    padding-bottom: 0;\n    padding-top: 0;\n}\n\ntd, th {\n    border-top: 0;\n    padding: 1em !important;\n}\n\ntbody tr:last-of-type td,\ntbody tr:last-of-type th {\n    border-bottom: none;\n    margin-bottom: 0;\n}\n\ntd {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 100%;\n}\n\n@media only screen and (max-width: 768px) {\n    table {\n        table-layout: auto;\n    }\n}\n\ntbody tr:hover {\n    background:#f1f1f1;\n}\n\ntbody tr td {\n    background-color: transparent;\n}\n\nth.checkbox,\ntd.checkbox {\n    width: 30px;\n    padding-left: 5px;\n    padding-right: 5px;\n}\n\ntbody th[scope=row] {\n    font-weight: normal;\n}\n",
          "styleUrl": "./table.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 15
      },
      "templateData": "<div *ngIf=\"tableModel != null && !tableModel.isLoading\" aria-atomic=\"true\" aria-live=\"assertive\" class=\"sr-only\">\n  The data table has been updated. {{ tableModel.totalRows }} results found.\n</div>\n\n<table\n  *ngIf=\"tableModel && tableModel.showTable && tableModel.rows.length && !tableModel.isLoading\"\n  summary=\"{{ tableModel.summary }}\"\n  [attr.aria-label]=\"tableModel.summary\"\n  class=\"table-background ds-c-table ds-c-table--borderless\"\n  [ngClass]=\"tableModel.class\"\n  [id]=\"tableModel.id\"\n>\n  <caption *ngIf=\"tableModel.summary\" class=\"tableHeading sr-only\">\n    {{\n      tableModel.summary\n    }}\n  </caption>\n  <thead *ngIf=\"tableModel.headerRows.length\" class=\"tableHeading\" [ngClass]=\"tableModel.headerClass\">\n    <tr *ngFor=\"let headerRow of tableModel.headerRows\" [attr.class]=\"headerRow.class\">\n      <th\n        *ngFor=\"let header of headerRow.cells\"\n        scope=\"col\"\n        [ngClass]=\"[header.type, header.cellClass]\"\n        [style.width]=\"header.headerWidth\"\n        [attr.colspan]=\"header.colspan\"\n        [attr.rowspan]=\"header.rowspan\"\n        [attr.scope]=\"header.colspan > 1 ? 'colgroup' : null\"\n        [title]=\"header.label\"\n      >\n        <app-table-header-2 [tableHeaderModel]=\"header\" (headerClick)=\"headerClick($event)\"></app-table-header-2>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr\n      *ngFor=\"\n        let row of tableModel.rows\n          | paginate\n            : {\n                itemsPerPage: tableModel.pagination.perPage,\n                currentPage: tableModel.pagination.currentPage,\n                totalItems: tableModel.totalRows,\n                id: tableModel.id\n              };\n        let rowIndex = index\n      \"\n      [attr.class]=\"row.class\"\n    >\n      <ng-container *ngFor=\"let cell of row.cells; let cellIndex = index\">\n        <ng-template #cellComponent>\n          <app-table-cell-2 [tableCellModel]=\"cell\" (cellClick)=\"cellClick($event)\"></app-table-cell-2>\n        </ng-template>\n        <th\n          scope=\"row\"\n          [ngClass]=\"cell.type\"\n          *ngIf=\"cellIndex === tableModel._rowHeaderIndex\"\n          [attr.colspan]=\"cell.colspan\"\n          [attr.rowspan]=\"cell.rowspan\"\n          [title]=\"cell.label\"\n        >\n          <ng-container *ngTemplateOutlet=\"cellComponent\"></ng-container>\n        </th>\n        <td\n          [ngClass]=\"cell.type\"\n          *ngIf=\"cellIndex !== tableModel._rowHeaderIndex\"\n          [attr.colspan]=\"cell.colspan\"\n          [attr.rowspan]=\"cell.rowspan\"\n          [title]=\"cell.label\"\n        >\n          <ng-container *ngTemplateOutlet=\"cellComponent\"></ng-container>\n        </td>\n      </ng-container>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!tableModel.rows.length && !tableModel.isLoading && tableModel.showTable\">\n  <div #noResults>\n    <ng-content select=\"[noResults]\"></ng-content>\n  </div>\n  <div\n    *ngIf=\"\n      noResults.nativeElement && noResults.nativeElement.childNodes && noResults.nativeElement.childNodes.length == 0\n    \"\n  >\n    No Results Found\n  </div>\n</ng-container>\n\n<div class=\"ds-l-row\" *ngIf=\"tableModel.isLoading\">\n  <div class=\"ds-l-col ds-u-text-align--center ds-u-margin-top--2\">\n    <app-spinner\n      [dataAutoId]=\"'chip-filter-page-spinner'\"\n      [inversed]=\"false\"\n      [filled]=\"false\"\n      [color]=\"'muted'\"\n      [size]=\"'big'\"\n    >\n    </app-spinner>\n  </div>\n</div>\n<div aria-atomic=\"true\" aria-live=\"assertive\" class=\"sr-only\">\n  <div *ngIf=\"tableModel.isLoading\">The data table is loading.</div>\n</div>\n<div aria-atomic=\"true\" aria-live=\"assertive\" class=\"sr-only\">\n  <div *ngIf=\"!tableModel.isLoading\">The data table has loaded with {{ tableModel.rows.length }} results.</div>\n</div>\n\n<app-paging\n  *ngIf=\"\n    tableModel &&\n    tableModel.showTable &&\n    tableModel.pagination.isEnabled &&\n    !this.tableModel.isLoading &&\n    tableModel.rows.length\n  \"\n  [id]=\"tableModel.id\"\n  [dataRows]=\"tableModel.rows\"\n  (currentPage)=\"paginationClickEvent($event)\"\n>\n</app-paging>\n"
    },
    {
      "name": "TableHeaderComponent",
      "id": "component-TableHeaderComponent-29e48a8e1b59ed8c5cfe835cb761441c",
      "file": "src/app/modules/table2/table-header/table-header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-table-header-2",
      "styleUrls": ["./table-header.component.css"],
      "styles": [],
      "templateUrl": ["./table-header.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "tableHeaderModel",
          "line": 16,
          "type": "TableHeaderModel"
        }
      ],
      "outputsClass": [
        {
          "name": "headerClick",
          "defaultValue": "new EventEmitter<object>()",
          "line": 17,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "faCaretDown",
          "defaultValue": "faCaretDown",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "faCaretUp",
          "defaultValue": "faCaretUp",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "TableHeaderSortEnum",
          "defaultValue": "TableHeaderSortEnum",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "TableHeaderTypeEnum",
          "defaultValue": "TableHeaderTypeEnum",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [
        {
          "name": "headerClickEvent",
          "args": [
            {
              "name": "$event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n// Models\nimport { TableHeaderModel, TableHeaderSortEnum, TableHeaderTypeEnum } from '../table.models';\n\n// Misc\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-table-header-2',\n  templateUrl: './table-header.component.html',\n  styleUrls: ['./table-header.component.css']\n})\n\nexport class TableHeaderComponent {\n    @Input() tableHeaderModel: TableHeaderModel;\n    @Output() headerClick = new EventEmitter<object>();\n\n    TableHeaderSortEnum = TableHeaderSortEnum;\n    TableHeaderTypeEnum = TableHeaderTypeEnum;\n\n    faCaretDown = faCaretDown;\n    faCaretUp = faCaretUp;\n\n    headerClickEvent($event) {\n        this.headerClick.emit({\n            $event: $event,\n            tableHeaderModel: this.tableHeaderModel,\n        });\n    }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./table-header.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<ng-container [ngSwitch]=\"tableHeaderModel.type\">\n  <ng-container *ngSwitchCase=\"TableHeaderTypeEnum.SORT\">\n    <app-button\n      [title]=\"tableHeaderModel.label\"\n      [ariaLabel]=\"'Activate to sort ' + tableHeaderModel.label + ' column'\"\n      [buttonID]=\"'header_' + tableHeaderModel.columnKey\"\n      (callBack)=\"headerClickEvent($event)\"\n      buttonType=\"ds-u-padding--0 ds-u-border--0 ds-u-color--base\"\n    >\n      {{ tableHeaderModel.label }}\n      <fa-icon\n        *ngIf=\"tableHeaderModel.sort !== TableHeaderSortEnum.NONE\"\n        class=\"ds-u-display--inline-block\"\n        [icon]=\"tableHeaderModel.sort === TableHeaderSortEnum.ASC ? faCaretUp : faCaretDown\"\n      ></fa-icon>\n    </app-button>\n    <ng-container *ngTemplateOutlet=\"tableInfoModal\"></ng-container>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"TableHeaderTypeEnum.CHECKBOX\">\n    <app-choice\n      [label]=\"tableHeaderModel.label\"\n      [value]=\"tableHeaderModel.columnKey\"\n      [isChecked]=\"tableHeaderModel.isChecked\"\n      [showTitle]=\"true\"\n      [labelTextClass]=\"'sr-only'\"\n      size=\"small\"\n      (choiceChange)=\"headerClickEvent($event)\"\n    >\n    </app-choice>\n    <ng-container *ngTemplateOutlet=\"tableInfoModal\"></ng-container>\n    <div class=\"sr-only\" [title]=\"tableHeaderModel.label\">\n      {{ tableHeaderModel.label }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"TableHeaderTypeEnum.DEFAULT\">\n    <div [ngClass]=\"['header_' + tableHeaderModel.columnKey, tableHeaderModel.class]\" [title]=\"tableHeaderModel.label\">\n      {{ tableHeaderModel.label }}\n      <ng-container *ngTemplateOutlet=\"tableInfoModal\"></ng-container>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #tableInfoModal>\n  <app-table-info-modal *ngIf=\"tableHeaderModel.modalText\" [tableHeaderModel]=\"tableHeaderModel\"></app-table-info-modal>\n</ng-template>\n"
    },
    {
      "name": "TableInfoModalComponent",
      "id": "component-TableInfoModalComponent-f9018c372f3978f6c535588319755d9b",
      "file": "src/app/modules/table2/table-info-modal/table-info-modal.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-table-info-modal",
      "styleUrls": ["./table-info-modal.component.css"],
      "styles": [],
      "templateUrl": ["./table-info-modal.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "tableHeaderModel",
          "line": 15,
          "type": "TableHeaderModel"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "faInfoCircle",
          "defaultValue": "faInfoCircle",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "methodsClass": [
        {
          "name": "showModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from '../../../services/modal/modal.service';\nimport { ModalGenericComponent } from '../../modal-shell/modal-generic/modal-generic.component';\nimport { ModalGenericModel } from '../../modal-shell/modal-generic/modal-generic.model';\nimport { TableHeaderModel } from '../table.models';\n\n@Component({\n  selector: 'app-table-info-modal',\n  templateUrl: './table-info-modal.component.html',\n  styleUrls: ['./table-info-modal.component.css'],\n})\nexport class TableInfoModalComponent {\n  @Input() tableHeaderModel: TableHeaderModel;\n\n  faInfoCircle = faInfoCircle;\n\n  constructor(private modalService: ModalService) {}\n\n  showModal() {\n    const modalData = new ModalGenericModel({\n      id: this.tableHeaderModel.label,\n      body: this.tableHeaderModel.modalText,\n      title: this.tableHeaderModel.label,\n    });\n    this.modalService.appendComponentToBody(\n      ModalGenericComponent,\n      this.buttonID,\n      modalData.title,\n      modalData,\n      'actionOKButton'\n    );\n  }\n\n  public get buttonID() {\n    return this.tableHeaderModel.label.replace(/[^A-Z0-9]/gi, '_');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./table-info-modal.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalService",
            "type": "ModalService"
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "modalService",
            "type": "ModalService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "buttonID": {
          "name": "buttonID",
          "getSignature": {
            "name": "buttonID",
            "type": "",
            "returnType": "",
            "line": 36
          }
        }
      },
      "templateData": "<app-button\n  [buttonID]=\"buttonID\"\n  [ariaLabel]=\"'Activate enter key for additional information for ' + tableHeaderModel.label\"\n  buttonType=\"ds-c-button ds-c-button--transparent ds-u-color--base ds-u-padding--0\"\n  (callBack)=\"showModal()\"\n>\n  <fa-icon [icon]=\"faInfoCircle\"></fa-icon>\n</app-button>\n"
    },
    {
      "name": "ToastComponent",
      "id": "component-ToastComponent-b1d91196a9251afa065ba75a57bb11c1",
      "file": "src/app/modules/toast/component/toast.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "[app-toast]",
      "styleUrls": ["./toast.component.css"],
      "styles": [],
      "templateUrl": ["./toast.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "variation",
          "line": 15,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "toastPackage",
          "type": "ToastPackage",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\nimport { Animations } from './toast.animations';\n\n  @Component({\n    // tslint:disable-next-line: component-selector - animations do not work if the selector is not used in this way\n    selector: '[app-toast]',\n    styleUrls: ['./toast.component.css'],\n    templateUrl: './toast.component.html',\n    animations: [\n      Animations.animations\n    ]\n  })\n  export class ToastComponent extends Toast {\n    @Input() variation: string;\n\n    constructor(\n      protected toastrService: ToastrService,\n      public toastPackage: ToastPackage,\n    ) {\n      super(toastrService, toastPackage);\n    }\n  }",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "::ng-deep .toast-container .ngx-toastr-no-padding {\n    background-color: transparent;\n    background-image: none;\n    padding: 0;\n}",
          "styleUrl": "./toast.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "toastrService",
            "type": "ToastrService"
          },
          {
            "name": "toastPackage",
            "type": "ToastPackage"
          }
        ],
        "line": 15,
        "jsdoctags": [
          {
            "name": "toastrService",
            "type": "ToastrService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "toastPackage",
            "type": "ToastPackage",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "Toast",
      "templateData": "<div class=\"row\" [style.display]=\"state.value === 'inactive' ? 'none' : ''\">\n    <app-alert\n        [hideClose]=\"true\"\n        [heading]=\"title\"\n        [variation]=\"variation\"\n    >{{ message }}</app-alert>\n</div>\n\n<div  role=\"alert\" aria-atomic=\"true\" aria-live=\"assertive\" class=\"sr-only\">\n    <span *ngIf=\"state.value !== 'inactive'\" [innerHTML]=\"variation + 'alert has appeared. ' + title + ' ' + message\"></span>\n</div>\n"
    },
    {
      "name": "TooltipComponent",
      "id": "component-TooltipComponent-4d7842df578eb73ca1a9c8ca6f36f986",
      "file": "src/app/modules/tooltip/tooltip.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-tooltip",
      "styleUrls": ["./tooltip.component.scss"],
      "styles": [],
      "templateUrl": ["./tooltip.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "tooltipModel",
          "line": 13,
          "type": "TooltipModel"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "tippyProps",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "TooltipTriggerTypeEnum",
          "defaultValue": "TooltipTriggerTypeEnum",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n// Models\nimport { TooltipModel, TooltipTriggerTypeEnum } from './tooltip.models';\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss'],\n})\nexport class TooltipComponent implements OnInit {\n  @Input() tooltipModel: TooltipModel;\n\n  TooltipTriggerTypeEnum = TooltipTriggerTypeEnum;\n  tippyProps;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.tippyProps = {\n      content: this.tooltipModel.tooltipContent,\n      trigger: 'mouseenter focus click',\n      theme: this.tooltipModel.inversed ? 'hqr-inversed' : 'hqr',\n      maxWidth: this.tooltipModel.maxWidth,\n      offset: this.tooltipModel.offset,\n      placement: this.tooltipModel.placement,\n      duration: this.tooltipModel.transitionDuration,\n      allowHTML: true,\n    };\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "$color-base: #212121 !default;\n$color-primary: #0071bc !default;\n$color-primary-darkest: #112e51 !default;\n$color-white: #fff !default;\n\na.tooltipTrigger {\n  text-decoration: underline;\n  text-decoration-style: dotted;\n  color: $color-base;\n  text-decoration-color: $color-primary;\n}\n\n::ng-deep .tippy-box[data-theme~='hqr'] {\n  background-color: $color-primary-darkest;\n  color: $color-white;\n\n  &[data-placement^='top'] > .tippy-arrow::before {\n    border-top-color: $color-primary-darkest;\n  }\n\n  &[data-placement^='bottom'] > .tippy-arrow::before {\n    border-bottom-color: $color-primary-darkest;\n  }\n\n  &[data-placement^='left'] > .tippy-arrow::before {\n    border-left-color: $color-primary-darkest;\n  }\n\n  &[data-placement^='right'] > .tippy-arrow::before {\n    border-right-color: $color-primary-darkest;\n  }\n}\n\n::ng-deep .tippy-box[data-theme~='hqr-inversed'] {\n  background-color: $color-white;\n  color: $color-primary-darkest;\n\n  &[data-placement^='top'] > .tippy-arrow::before {\n    border-top-color: $color-white;\n  }\n\n  &[data-placement^='bottom'] > .tippy-arrow::before {\n    border-bottom-color: $color-white;\n  }\n\n  &[data-placement^='left'] > .tippy-arrow::before {\n    border-left-color: $color-white;\n  }\n\n  &[data-placement^='right'] > .tippy-arrow::before {\n    border-right-color: $color-white;\n  }\n}\n",
          "styleUrl": "./tooltip.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 16
      },
      "implements": ["OnInit"],
      "templateData": "<ng-container [ngSwitch]=\"tooltipModel.triggerType\">\n  <ng-container *ngSwitchCase=\"TooltipTriggerTypeEnum.LINK\">\n    <a\n      [id]=\"tooltipModel.id\"\n      ngxTippy\n      [tippyProps]=\"tippyProps\"\n      href=\"javascript:void(0)\"\n      class=\"tooltipTrigger\"\n      [ngClass]=\"tooltipModel.triggerClass\"\n      [attr.aria-label]=\"tooltipModel.ariaLabel\"\n    >\n      <fa-icon *ngIf=\"tooltipModel.triggerIcon\" [icon]=\"tooltipModel.triggerIcon\"></fa-icon>\n      <span *ngIf=\"tooltipModel.triggerContent\" [innerHTML]=\"tooltipModel.triggerContent\"></span>\n      <ng-content select=\"[triggerContent]\"></ng-content>\n    </a>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"TooltipTriggerTypeEnum.BUTTON\">\n    <app-button\n      ngxTippy\n      [buttonID]=\"tooltipModel.id\"\n      [tippyProps]=\"tippyProps\"\n      [buttonType]=\"'tooltipTrigger ' + tooltipModel.triggerClass\"\n      [ariaLabel]=\"tooltipModel.ariaLabel\"\n    >\n      <fa-icon *ngIf=\"tooltipModel.triggerIcon\" [icon]=\"tooltipModel.triggerIcon\"></fa-icon>\n      <span *ngIf=\"tooltipModel.triggerContent\" [innerHTML]=\"tooltipModel.triggerContent\"></span>\n      <ng-content select=\"[triggerContent]\"></ng-content>\n    </app-button>\n  </ng-container>\n</ng-container>\n"
    },
    {
      "name": "WelcomeComponent",
      "id": "component-WelcomeComponent-24be873c4dc5ad08b0e374a3482fdc62",
      "file": "src/stories/welcome.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-storybook-welcome-component",
      "styleUrls": [],
      "styles": [],
      "template": "<main>\n  <h1>Bellese Angular Design System - Documentation</h1>\n  <p>\n    This design system includes a set of angular components that were created to work within the\n    <a href=\"https://design.cms.gov/\" target=\"_blank\">CMS Design System</a>.\n  </p>\n  <p>\n    All of the available components are listed in the left sidebar. Click into a component to see one or more\n    variations of how that component can display.\n  </p>\n  <p>To see the source code used to display each component, open the \"Story\" panel at the bottom of this page.</p>\n  <p>\n    If a component has a event (such as a click, change, etc...) you can view the object that is emitted by the\n    component in the browser console. The object will also show in the \"Actions\" panel at the bottom of the page,\n    but the console will show more useful information.\n  </p>\n</main>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-storybook-welcome-component',\n  template: `\n    <main>\n      <h1>Bellese Angular Design System - Documentation</h1>\n      <p>\n        This design system includes a set of angular components that were created to work within the\n        <a href=\"https://design.cms.gov/\" target=\"_blank\">CMS Design System</a>.\n      </p>\n      <p>\n        All of the available components are listed in the left sidebar. Click into a component to see one or more\n        variations of how that component can display.\n      </p>\n      <p>To see the source code used to display each component, open the \"Story\" panel at the bottom of this page.</p>\n      <p>\n        If a component has a event (such as a click, change, etc...) you can view the object that is emitted by the\n        component in the browser console. The object will also show in the \"Actions\" panel at the bottom of the page,\n        but the console will show more useful information.\n      </p>\n    </main>\n  `,\n  styles: [],\n})\nexport default class WelcomeComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    }
  ],
  "modules": [
    {
      "name": "AccordionModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppAccordionComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DirectiveModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppAccordionComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "AlertModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AlertComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AlertComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "AppModule",
      "children": [
        {
          "type": "providers",
          "elements": [
            {
              "name": "AppService"
            }
          ]
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            },
            {
              "name": "ExampleModalComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "AccordionModule"
            },
            {
              "name": "AlertModule"
            },
            {
              "name": "BarGraphModule"
            },
            {
              "name": "ButtonModule"
            },
            {
              "name": "CalendarModule"
            },
            {
              "name": "CardClusterModule"
            },
            {
              "name": "ChipFilterModule"
            },
            {
              "name": "ChoiceModule"
            },
            {
              "name": "CircleGraphModule"
            },
            {
              "name": "CodeSnippetModule"
            },
            {
              "name": "DatePickerModule"
            },
            {
              "name": "DirectiveModule"
            },
            {
              "name": "DropdownModule"
            },
            {
              "name": "FileUploadModule"
            },
            {
              "name": "LineGraphModule"
            },
            {
              "name": "ModalModule"
            },
            {
              "name": "ModalShellModule"
            },
            {
              "name": "PagingModule"
            },
            {
              "name": "PanelModule"
            },
            {
              "name": "PlusModule"
            },
            {
              "name": "PopoverModule"
            },
            {
              "name": "SearchFieldModule"
            },
            {
              "name": "SpinnerModule"
            },
            {
              "name": "StarModule"
            },
            {
              "name": "Table2Module"
            },
            {
              "name": "TableModule"
            },
            {
              "name": "TabsModule"
            },
            {
              "name": "TextFieldModule"
            },
            {
              "name": "TicketModule"
            },
            {
              "name": "ToastModule"
            },
            {
              "name": "TooltipModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "BarGraphModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "BarGraphComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ModalModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "BarGraphComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ButtonModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppButtonComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DirectiveModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppButtonComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CalendarModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CalendarComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ChoiceModule"
            },
            {
              "name": "TextFieldModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CalendarComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CardClusterModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppCardClusterComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ChoiceModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppCardClusterComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ChipFilterModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppChipFilterComponent"
            },
            {
              "name": "ChipFilterPipe"
            },
            {
              "name": "ClickOutsideDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "SpinnerModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppChipFilterComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ChoiceModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppChoiceComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppChoiceComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CircleGraphModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppCircleGraphComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ButtonModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppCircleGraphComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CodeSnippetModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CodeSnippetComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ButtonModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CodeSnippetComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "DatePickerModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppDatepickerComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppDatepickerComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "DirectiveModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FileUploadDragDropDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FileUploadDragDropDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "DropdownModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppDropDownComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppDropDownComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FileUploadModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FileUploadComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ButtonModule"
            },
            {
              "name": "DirectiveModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FileUploadComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "LineGraphModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppLineGraphComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DropdownModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppLineGraphComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ModalModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppModalComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppModalComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ModalShellModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppModalShellComponent"
            },
            {
              "name": "ModalGenericComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ButtonModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppModalShellComponent"
            },
            {
              "name": "ModalGenericComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "PagingModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppPaginationComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppPaginationComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "PanelModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppPanelComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DirectiveModule"
            },
            {
              "name": "PlusModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppPanelComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "PipesModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FilterPipe"
            },
            {
              "name": "GraphToolTipPipe"
            },
            {
              "name": "HighlightSearchPipe"
            },
            {
              "name": "SortingPipe"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FilterPipe"
            },
            {
              "name": "GraphToolTipPipe"
            },
            {
              "name": "HighlightSearchPipe"
            },
            {
              "name": "SortingPipe"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "PlusModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppPlusComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppPlusComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "PopoverModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "PopoverComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ButtonModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "PopoverComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "SearchFieldModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "SearchFieldComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "SearchFieldComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "SpinnerModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "SpinnerComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "SpinnerComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "StarModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "StarComponent"
            },
            {
              "name": "StarRatingComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "StarComponent"
            },
            {
              "name": "StarRatingComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "StoriesModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ComponentIntroComponent"
            },
            {
              "name": "ImportsComponent"
            },
            {
              "name": "NgModuleComponent"
            },
            {
              "name": "ParameterComponent"
            },
            {
              "name": "ParameterListComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ComponentIntroComponent"
            },
            {
              "name": "ImportsComponent"
            },
            {
              "name": "NgModuleComponent"
            },
            {
              "name": "ParameterComponent"
            },
            {
              "name": "ParameterListComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "Table2Module",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TableCellComponent"
            },
            {
              "name": "TableComponent"
            },
            {
              "name": "TableHeaderComponent"
            },
            {
              "name": "TableInfoModalComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ButtonModule"
            },
            {
              "name": "ChoiceModule"
            },
            {
              "name": "ModalShellModule"
            },
            {
              "name": "PagingModule"
            },
            {
              "name": "PopoverModule"
            },
            {
              "name": "SpinnerModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TableComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TableModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppTableComponent"
            },
            {
              "name": "AppTableDataComponent"
            },
            {
              "name": "AppTableHeaderComponent"
            },
            {
              "name": "AppTableModalComponent"
            },
            {
              "name": "AppTableRowComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ButtonModule"
            },
            {
              "name": "ChoiceModule"
            },
            {
              "name": "DirectiveModule"
            },
            {
              "name": "ModalModule"
            },
            {
              "name": "ModalShellModule"
            },
            {
              "name": "PagingModule"
            },
            {
              "name": "PopoverModule"
            },
            {
              "name": "StarModule"
            },
            {
              "name": "TextFieldModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppTableComponent"
            },
            {
              "name": "AppTableDataComponent"
            },
            {
              "name": "AppTableHeaderComponent"
            },
            {
              "name": "AppTableModalComponent"
            },
            {
              "name": "AppTableRowComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TabsModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppTabsComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppTabsComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TextFieldModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppTextFieldComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppTextFieldComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TicketModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppTicketComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppTicketComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ToastModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ToastComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "AlertModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TooltipModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TooltipComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ButtonModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TooltipComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "Animations",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/animations/animations.ts",
        "type": "object",
        "defaultValue": "{\n    animations: [\n        trigger('expansionTrigger', [\n            transition(':enter', [\n                style({\n                    height: '0'\n                }),\n                animate('200ms linear', style({ height: '*' }))\n            ]),\n            transition(':leave', [\n                style({\n                    height: '*'\n                }),\n                animate('100ms 100ms linear', style({ height: '0' }))\n            ])\n        ]),\n        trigger('fadeInTrigger', [\n            transition(':enter', [\n                style({\n                    opacity: '0'\n                }),\n                animate('100ms 100ms', style({ opacity: 1 }))\n            ]),\n            transition(':leave', [\n                animate('200ms', style({ opacity: 0 }))\n            ])\n        ])\n    ]\n}"
      },
      {
        "name": "Animations",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/toast/component/toast.animations.ts",
        "type": "object",
        "defaultValue": "{\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        transform: 'translate3d(100%, 0, 0)',\n        opacity: 0,\n      })),\n      transition('inactive => active', animate('400ms ease-out', keyframes([\n        style({\n          transform: 'none',\n          opacity: 1,\n        }),\n      ]))),\n      transition('active => removed', animate('400ms ease-out', keyframes([\n        style({\n          opacity: 1,\n        }),\n        style({\n          transform: 'translate3d(100%, 0, 0)',\n          opacity: 0,\n        }),\n      ]))),\n    ]),\n  ]\n}"
      },
      {
        "name": "barGraphData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/bar-graph/bar-graph.stories.ts",
        "type": "[]",
        "defaultValue": "[\n    {\n        'name': 'STP-2',\n        'value': 100\n    },\n    {\n        'name': 'STP-3',\n        'value': -6\n    },\n    {\n        'name': 'STP-4',\n        'value': 55\n    },\n]"
      },
      {
        "name": "barGraphModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/bar-graph/bar-graph.stories.ts",
        "type": "",
        "defaultValue": "new BarGraphModel({\n    data: barGraphData,\n})"
      },
      {
        "name": "calendarModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/calendar/calendar.stories.ts",
        "type": "",
        "defaultValue": "new CalendarModel({\n  id: 'calendar',\n  date: new Date('07/21/2020'),\n  endDate: new Date('08/21/2020'),\n  isCheckBox: true,\n  isDateRange: true,\n  minDate: new Date('07/21/2020'),\n  maxDate: new Date('08/21/2020'),\n  minEndDate: new Date('08/21/2020'),\n  maxEndDate: new Date('09/21/2020'),\n})"
      },
      {
        "name": "calendarModelNoRange",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/calendar/calendar.stories.ts",
        "type": "",
        "defaultValue": "new CalendarModel({\n  id: 'calendar',\n  dateLabel: 'Pick your date',\n})"
      },
      {
        "name": "calendarNoBox",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/calendar/calendar.stories.ts",
        "type": "",
        "defaultValue": "new CalendarModel({\n  id: 'calendar',\n  isDateRange: true,\n})"
      },
      {
        "name": "calendarWithDebounce",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/calendar/calendar.stories.ts",
        "type": "",
        "defaultValue": "new CalendarModel({\n  ...calendarModel,\n  debounceTime: 5000,\n})"
      },
      {
        "name": "cardClusterDataDisabledCards",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "",
        "defaultValue": "cardClusterDataShowRadioButtons"
      },
      {
        "name": "cardClusterDataNormal",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "",
        "defaultValue": "new CardClusterModel({\n  mainCard: true,\n  mainTitle: 'STK-2',\n  mainSub: 'Episodes',\n  ariaLabel: 'Activate enter button to view all items',\n  buttonClicked: 'CardCluster0',\n  cluster: [\n    {\n      value: 'vte',\n      name: 'IPP Not Met',\n      ariaLabel: 'Activate enter to view all items for the IPP Not Met category',\n    },\n    {\n      value: 'cbc',\n      name: 'IPP Met',\n    },\n    {\n      value: 1,\n      name: 'Denominator',\n    },\n    {\n      value: 16,\n      name: 'Denominator',\n    },\n    {\n      value: 85,\n      name: 'Numerator',\n    },\n    {\n      value: 3,\n      name: 'Den. Exceptions',\n    },\n    {\n      classValue: 'viewPerformanceIcon',\n      classButton: 'vpi',\n      name: 'View Performance',\n      className: 'vpi',\n    },\n  ],\n})"
      },
      {
        "name": "cardClusterDataSelectedCard",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...cardClusterDataNormal,\n  buttonClicked: 'CardCluster4',\n}"
      },
      {
        "name": "cardClusterDataSetTotal",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...cardClusterDataNormal,\n  total: 9999,\n}"
      },
      {
        "name": "cardClusterDataShowRadioButtons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...cardClusterDataNormal,\n  showRadioButton: true,\n}"
      },
      {
        "name": "cardClusterDataShowRadioButtonsAndIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "",
        "defaultValue": "new CardClusterModel({\n  mainCard: false,\n  showRadioButton: true,\n  rowMaxItems: 2,\n  cluster: [\n    {\n      value: 'Basic User',\n      name: 'A Basic User is an Organization Role with Read/Write Access to the Organization(s) in their system.',\n      valueIcon: faEye,\n      ariaLabel: 'Activate enter to select Basic User',\n      classButton: 'ds-u-padding--2',\n    },\n    {\n      value: 'Security Administrator',\n      name: 'A Security Administrator is a person who manages User Roles & Permissions for their Organization.',\n      valueIcon: faUserShield,\n      ariaLabel: 'Activate enter to select Security Administrator',\n      classButton: 'ds-u-padding--2',\n    },\n  ],\n})"
      },
      {
        "name": "cardClusterDataWithoutMain",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...cardClusterDataNormal,\n  mainCard: false,\n  buttonClicked: 'CardCluster1',\n}"
      },
      {
        "name": "cardClusterDataWithoutMiniCards",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...cardClusterDataNormal,\n  cluster: [],\n}"
      },
      {
        "name": "cardClusterResizeTimeout",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...cardClusterDataNormal,\n  resizeTimeout: 1,\n}"
      },
      {
        "name": "codeSnippetIconModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/code-snippet/code-snippet.stories.ts",
        "type": "",
        "defaultValue": "new CodeSnippetModel({\n    label: 'XPath',\n    contentItems: [\n        new CodeSnippetContentItemModel({content: '|- ClinicalDocument'}),\n        new CodeSnippetContentItemModel({content: ' |- component[1]'}),\n        new CodeSnippetContentItemModel({content: '  |- structuredBody[1]'}),\n        new CodeSnippetContentItemModel({content: '   |- component[3]'}),\n        new CodeSnippetContentItemModel({content: '    |- section[1]'}),\n        new CodeSnippetContentItemModel({content: '     |- entry[3]'}),\n        new CodeSnippetContentItemModel({content: '      |- act[1]'}),\n        new CodeSnippetContentItemModel({content: '       |- entryRelationship[1]'}),\n        new CodeSnippetContentItemModel({content: '        |- substanceAdministration[1]', icon: faExclamationCircle, className: 'ds-u-fill--error-lightest ds-u-color--error-dark'}),\n    ],\n    copyContent: `/ClinicalDocument/component[1]/structuredBody[1]/component[3]/section[1]/entry[3]/act[1]/entryRelationship[1]/substanceAdministration[1]['line 450 column 75']`,\n})"
      },
      {
        "name": "codeSnippetModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/code-snippet/code-snippet.stories.ts",
        "type": "",
        "defaultValue": "new CodeSnippetModel({\n    label: 'XPath',\n    contentItems: [\n        new CodeSnippetContentItemModel({content: '|- ClinicalDocument'}),\n        new CodeSnippetContentItemModel({content: ' |- component[1]'}),\n        new CodeSnippetContentItemModel({content: '  |- structuredBody[1]'}),\n        new CodeSnippetContentItemModel({content: '   |- component[3]'}),\n        new CodeSnippetContentItemModel({content: '    |- section[1]'}),\n        new CodeSnippetContentItemModel({content: '     |- entry[3]'}),\n        new CodeSnippetContentItemModel({content: '      |- act[1]'}),\n        new CodeSnippetContentItemModel({content: '       |- entryRelationship[1]'}),\n        new CodeSnippetContentItemModel({content: '        |- substanceAdministration[1]', lineNumber: 450, className: 'ds-u-fill--error-lightest ds-u-color--error-dark'}),\n    ],\n    copyContent: `/ClinicalDocument/component[1]/structuredBody[1]/component[3]/section[1]/entry[3]/act[1]/entryRelationship[1]/substanceAdministration[1]['line 450 column 75']`,\n})"
      },
      {
        "name": "codeSnippetModelFile",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/code-snippet/code-snippet.stories.ts",
        "type": "",
        "defaultValue": "new CodeSnippetModel({\n    label: 'File Name',\n    contentItems: [\n        new CodeSnippetContentItemModel({content: 'ReallyReallyIncrediblyInsanelyLongVeryVeryVeryLongReallyReallyIncrediblyInsanelyLongVeryVeryVeryLongFilename.zip'}),\n    ],\n    copyLinkDisplay: false,\n})"
      },
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "DROPDOWN_CONTROL_VALUE_ACCESSOR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/chip-filter.component.ts",
        "type": "any",
        "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AppChipFilterComponent),\n  multi: true,\n}"
      },
      {
        "name": "dropDownData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/drop-down/drop-down.stories.ts",
        "type": "[]",
        "defaultValue": "[\n    {\n        'content': 'option1',\n        'value': 'op1'\n    },\n    {\n        'content': 'option2',\n        'value': 'op2'\n    },\n    {\n        'content': 'option3',\n        'value': 'op3'\n    }\n]"
      },
      {
        "name": "dropdownList",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/story.const.ts",
        "type": "[]",
        "defaultValue": "[\n  { id: 1, text: 'Provider Name 1' },\n  { id: 2, text: 'Provider Name 2213123123' },\n  { id: 3, text: 'Provider Name 452345243543254' },\n  { id: 4, text: 'Provider Name 14325234523454235' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n]"
      },
      {
        "name": "dropdownSettings",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/story.const.ts",
        "type": "object",
        "defaultValue": "{\n  singleSelection: false,\n  placeholder: 'Search Provider(s)',\n  searchPlaceholder: 'Search by Provider Name or ID',\n  idField: 'id',\n  textField: 'test',\n  selectAllText: 'Select All Providers',\n  unSelectAllText: 'UnSelect All Providers',\n  label: 'Search Providers',\n  itemsShowLimit: 3,\n  allowSearchFilter: true,\n  labelName: 'Provider(s)',\n}"
      },
      {
        "name": "dropdownSettings2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/story.const.ts",
        "type": "object",
        "defaultValue": "{\n  singleSelection: false,\n  idField: 'id',\n  textField: 'text',\n  selectAllText: 'Select All Providers',\n  unSelectAllText: 'UnSelect All Providers',\n  label: 'Search Providers',\n  itemsShowLimit: 3,\n  allowSearchFilter: false,\n}"
      },
      {
        "name": "dropdownSettings3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/story.const.ts",
        "type": "object",
        "defaultValue": "{\n  singleSelection: false,\n  idField: 'id',\n  textField: 'text',\n  selectAllText: 'Select All Providers',\n  unSelectAllText: 'UnSelect All Providers',\n  label: 'Search Providers',\n  itemsShowLimit: 2,\n  allowSearchFilter: false,\n}"
      },
      {
        "name": "dropdownSettingsError",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/story.const.ts",
        "type": "object",
        "defaultValue": "{\n  ...dropdownSettings,\n  error: true,\n  errorMessage: 'This is an error',\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.prod.ts",
        "type": "object",
        "defaultValue": "{\n  production: true\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "type": "object",
        "defaultValue": "{\n  production: false\n}"
      },
      {
        "name": "fileUploadModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/file-upload/file-upload.stories.ts",
        "type": "",
        "defaultValue": "new FileUploadModel({\n    height: 300,\n    className: 'ds-u-fill--primary-alt-lightest',\n    classNameActive: 'ds-u-fill--primary-alt-light',\n})"
      },
      {
        "name": "lineGraphData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "[]",
        "defaultValue": "[\n    {\n        'name': 'Strata-1',\n        'series': [\n            {\n                'name': 'Q1',\n                'value': 4300\n            },\n            {\n                'name': 'Q2',\n                'value': 4000\n            },\n            {\n                'name': 'Q3',\n                'value': 5940\n            }\n        ]\n    },\n    {\n        'name': 'Strata-2',\n        'series': [\n            {\n                'name': 'Q1',\n                'value': 5300\n            },\n            {\n                'name': 'Q2',\n                'value': 3000\n            },\n            {\n                'name': 'Q3',\n                'value': 1940\n            }\n        ]\n    },\n    {\n        'name': 'Strata-3',\n        'series': [\n            {\n                'name': 'Q1',\n                'value': 2300\n            },\n            {\n                'name': 'Q2',\n                'value': 6000\n            },\n            {\n                'name': 'Q3',\n                'value': 3940\n            }\n        ]\n    }\n]"
      },
      {
        "name": "lineGraphDataMissingValues",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "[]",
        "defaultValue": "[\n    {\n        'name': 'Strata-1',\n        'series': [\n            {\n                'name': 'Q1 2018',\n                'value': 4300\n            },\n            {\n                'name': 'Q3 2018',\n                'value': 5940\n            }\n        ]\n    },\n    {\n        'name': 'Strata-2',\n        'series': [\n            {\n                'name': 'Q1 2018',\n                'value': 5300\n            },\n            {\n                'name': 'Q4 2018',\n                'value': 3000\n            },\n        ]\n    },\n    {\n        'name': 'Strata-3',\n        'series': [\n            {\n                'name': 'Q2 2018',\n                'value': 6000\n            },\n            {\n                'name': 'Q3 2018',\n                'value': 3940\n            },\n            {\n                'name': 'Q2 2019',\n                'value': 4900\n            }\n        ]\n    },\n    {\n        'name': 'One Dot',\n        'series': [\n            {\n                'name': 'Q1 2019',\n                'value': 5800\n            },\n        ]\n    }\n]"
      },
      {
        "name": "lineGraphDataSingleDataPoints",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "[]",
        "defaultValue": "[\n    {\n        'name': 'Strata-1',\n        'series': [\n            {\n                'name': 'Q1 2018',\n                'value': 4300\n            },\n        ]\n    },\n    {\n        'name': 'Strata-2',\n        'series': [\n            {\n                'name': 'Q4 2018',\n                'value': 3000\n            },\n        ]\n    },\n    {\n        'name': 'Strata-3',\n        'series': [\n            {\n                'name': 'Q2 2019',\n                'value': 4900\n            }\n        ]\n    },\n    {\n        'name': 'One Dot',\n        'series': [\n            {\n                'name': 'Q4 2018',\n                'value': 5800\n            },\n        ]\n    }\n]"
      },
      {
        "name": "lineGraphDataXAxisValues",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "[]",
        "defaultValue": "['Q1 2018', 'Q2 2018', 'Q3 2018', 'Q4 2018', 'Q1 2019', 'Q2 2019', 'Q3 2019', 'Q4 2019']"
      },
      {
        "name": "lineGraphModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "",
        "defaultValue": "new LineGraphModel({\n    data: lineGraphData,\n    xLabel: 'X Label',\n    yLabel: 'Y Label',\n})"
      },
      {
        "name": "lineGraphModelMissingValues",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "",
        "defaultValue": "new LineGraphModel({\n    data: lineGraphDataMissingValues,\n    xAxisValues: lineGraphDataXAxisValues,\n    xLabel: 'X Label',\n    yLabel: 'Y Label'\n})"
      },
      {
        "name": "lineGraphModelSingleDataPoints",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "",
        "defaultValue": "new LineGraphModel({\n    data: lineGraphDataSingleDataPoints,\n    xAxisValues: lineGraphDataXAxisValues,\n    xLabel: 'X Label',\n    yLabel: 'Y Label'\n})"
      },
      {
        "name": "modalData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/modal/modal.stories.ts",
        "type": "[]",
        "defaultValue": "[\n    {\n        'heading': 'Description'\n    },\n    {\n        'paragraph': 'Severe Sepsis and Septic Shock'\n    },\n    {\n        'heading': 'Supplemental Information'\n    },\n    {\n        'hline': true\n    },\n    {\n        'heading2': 'Volume Category Reference'\n    },\n    {\n        'paragraph': 'Low: #26 min. (5)'\n    },\n    {\n        'paragraph': 'Med: #43 min. (12)'\n    },\n    {\n        'paragraph': 'High: #72 min. (8)'\n    },\n    {\n        'heading2': 'Supplemental Information Footnotes'\n    },\n    {\n        'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n    },\n    {\n        'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n    },\n    {\n        'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n    }\n]"
      },
      {
        "name": "noop",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/chip-filter.component.ts",
        "type": "",
        "defaultValue": "() => {}"
      },
      {
        "name": "parameters",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/story.const.ts",
        "type": "[]",
        "defaultValue": "[\n  {\n    name: 'disabled',\n    type: 'boolean',\n    value: 'If set to true, the dropdown is disabled.',\n  },\n  {\n    name: 'settings',\n    type: 'IDropdownSettings',\n    value: \"Use this to override the dropdown component's default settings.\",\n    properties: settingsProps,\n  },\n  {\n    name: 'data',\n    type: 'Array<{id: number, text: string}>',\n    value: 'Populate dropdown list with data.',\n  },\n]"
      },
      {
        "name": "pieData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/circle-graph/circle-graph.stories.ts",
        "type": "[]",
        "defaultValue": "[\n    {\n        'name': 'Accepted Files',\n        'value': 1000,\n        'attr': 'rate'\n    },\n    {\n        'name': 'Rejected Files',\n        'value': 233\n    }\n]"
      },
      {
        "name": "popoverModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/popover/popover.stories.ts",
        "type": "",
        "defaultValue": "new PopoverModel({\n  items: [\n    new PopoverItemModel({\n      label: 'Item',\n      onClick: () => {\n        console.log('INLINE FUNCTION CALL');\n      },\n    }),\n    new PopoverItemModel({\n      label: 'Menu Item 2',\n      url: 'https://www.google.com',\n    }),\n    new PopoverItemModel({\n      label: 'Menu Item 3',\n      onClick: defaultProps.handleEvent,\n    }),\n  ],\n})"
      },
      {
        "name": "popoverModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table2/table.stories.ts",
        "type": "PopoverModel",
        "defaultValue": "new PopoverModel({\n  items: [\n    new PopoverItemModel({\n      label: 'Menu Item 1',\n      onClick: defaultProps.handleEvent,\n    }),\n    new PopoverItemModel({\n      label: 'Menu Item 2',\n      url: 'https://www.google.com',\n    }),\n  ],\n  showArrow: false,\n  icon: faEllipsisV,\n  label: null,\n  mdePopoverPositionX: mdePopoverPositionXEnum.AFTER,\n  mdePopoverPositionY: mdePopoverPositionYEnum.BELOW,\n})"
      },
      {
        "name": "popoverModelButtonClass",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/popover/popover.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...popoverModel,\n  buttonClass: 'ds-u-color--primary',\n}"
      },
      {
        "name": "popoverModelScrolling",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/popover/popover.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...popoverModel,\n  items: [\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n  ],\n}"
      },
      {
        "name": "popoverModelUtility",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/popover/popover.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...popoverModel,\n  showArrow: false,\n  label: null,\n  mdePopoverPositionX: mdePopoverPositionXEnum.AFTER,\n  mdePopoverPositionY: mdePopoverPositionYEnum.ABOVE,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/accordion/accordion.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...defaultProps,\n  faPencilAlt,\n  faChevronCircleRight,\n  faCheck,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/calendar/calendar.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...defaultProps,\n  calendarModelNoRange,\n  calendarNoBox,\n  calendarModel,\n  calendarWithDebounce,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/bar-graph/bar-graph.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    barGraphModel: barGraphModel\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/chip-filter.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...defaultProps,\n  dropdownList,\n  selectedItems: [],\n  loading: false,\n  dropdownSettings,\n  dropdownSettingsError,\n  dropdownSettings2,\n  dropdownSettings3,\n  logjam: (e) => {\n    console.log(e);\n  },\n  bottomScrolled: (e) => {\n    console.log('Set loading as true until the server responds with more of the list.');\n  },\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/circle-graph/circle-graph.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    pieData: pieData,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/code-snippet/code-snippet.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    codeSnippetModel,\n    codeSnippetModelFile,\n    codeSnippetIconModel,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...defaultProps,\n  cardClusterDataNormal,\n  cardClusterDataWithoutMain,\n  cardClusterDataWithoutMiniCards,\n  cardClusterDataSelectedCard,\n  cardClusterResizeTimeout,\n  cardClusterDataSetTotal,\n  cardClusterDataShowRadioButtons,\n  cardClusterDataShowRadioButtonsAndIcons,\n  cardClusterDataDisabledCards,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/drop-down/drop-down.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    dropDownData,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    lineGraphModel,\n    lineGraphModelMissingValues,\n    lineGraphModelSingleDataPoints\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/file-upload/file-upload.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    fileUploadModel,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/modal/modal.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    modalData,\n    appTableModalComponent: AppTableModalComponent\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/panel/panel.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...defaultProps,\n  faChevronDown,\n  faChevronUp,\n  PanelIconPlacementEnum,\n  PanelTitlePlacementEnum,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/paging/paging.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    list: [1, 2, 3, 4, 5, 6, 7, 8]\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/popover/popover.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...defaultProps,\n  popoverModel,\n  popoverModelUtility,\n  faEllipsisV,\n  popoverModelButtonClass,\n  popoverModelScrolling,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table2/table.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...defaultProps,\n  tableModel,\n  tableModelNoRecords,\n  tableModelLoading,\n  tableModelHighlightedRow,\n  tableModelColspan,\n  tableModelMultipleHeaderRows,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/tabs/tabs.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    tabs\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...defaultProps,\n  tooltipModel,\n  tooltipModelButton,\n  tooltipModelInversed,\n  tooltipModelIcon,\n  tooltipModelIconOnly,\n}"
      },
      {
        "name": "props",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table/table/table.stories.ts",
        "type": "object",
        "defaultValue": "{\n    ...defaultProps,\n    handleEventTable: handleEventTable,\n    tableData,\n}"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "type": "any"
      },
      {
        "name": "settingsProps",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/chip-filter/story.const.ts",
        "type": "[]",
        "defaultValue": "[\n  {\n    name: 'idField',\n    type: 'string',\n    value: 'The id for the dropdown li',\n  },\n  {\n    name: 'singleSelection',\n    type: 'boolean',\n    value: 'Use this to further specify the dropdown component to the screen reader',\n  },\n  {\n    name: 'textField',\n    type: 'string',\n    value: 'This changes the key for displayed text on dropdown li.',\n  },\n  {\n    name: 'disabledField',\n    type: 'string',\n    value: 'This is the.',\n  },\n  {\n    name: 'itemsShowLimit',\n    type: 'number',\n    value: 'Hide or show number of results.',\n  },\n  {\n    name: 'maxHeight',\n    type: 'number',\n    value: 'Max height of dropdown.',\n  },\n  {\n    name: 'enableCheckAll',\n    type: 'boolean',\n    value: 'Display check all.',\n  },\n  {\n    name: 'closeDropDownOnSelection',\n    type: 'boolean',\n    value: 'Close dropdown on selection.',\n  },\n  {\n    name: 'labelName',\n    type: 'string',\n    value: \"The value that shows in the dropdown's label\",\n  },\n  {\n    name: 'labelClass',\n    type: 'string',\n    value: 'The CSS class that applies to the label',\n  },\n  {\n    name: 'hintMessage',\n    type: 'string',\n    value: 'A hint message to display in the component',\n  },\n  {\n    name: 'errorMessage',\n    type: 'string',\n    value: 'An error message to display in the component',\n  },\n  {\n    name: 'error',\n    type: 'boolean',\n    value: 'If set to true, the dropdown turns red.',\n  },\n\n  {\n    name: 'placeholder',\n    type: 'string',\n    value: 'Dropdown search placeholder.',\n  },\n]"
      },
      {
        "name": "tableData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table/table/table.stories.ts",
        "type": "object",
        "defaultValue": "{\n    'tableHeaders': [\n      {\n        'header': {\n          'value': '',\n          'prop': 'row_Header',\n          'el': 'default'\n        }\n      },\n      {\n        'header': {\n          'value': 'Facility Rate',\n          'prop': 'val1',\n          'el': 'sort'\n        }\n      },\n      {\n        'header': {\n          'value': 'Number of Patients',\n          'prop': 'val2',\n          'el': 'default'\n        }\n      },\n      {\n        'header': {\n          'value': 'State Rate',\n          'prop': 'val3',\n          'el': 'default'\n        }\n      },\n      {\n        'header': {\n          'value': 'National Rate',\n          'prop': 'val4',\n          'el': 'default'\n        }\n      },\n      {\n        'header': {\n          'value': 'Top 10%',\n          'prop': 'val5',\n          'el': 'default'\n        }\n      }\n    ],\n    'count': 27,\n    'tableRows': [\n      {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      },\n    {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }, {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }, {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }, {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }, {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }\n    ]\n}"
      },
      {
        "name": "tableModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table2/table.stories.ts",
        "type": "TableModel",
        "defaultValue": "new TableModel({\n  id: 'storiesTable',\n  headerClass: 'ds-u-fill--gray-lightest',\n  headers: [\n    new TableHeaderModel({\n      label: 'Select All',\n      ariaLabel: 'Activate enter key to select all rows',\n      type: TableCellTypeEnum.CHECKBOX,\n      columnKey: 'checkbox',\n    }),\n    new TableHeaderModel({\n      label: 'Label',\n      columnKey: 'label',\n      modalText: 'This is an example modal!',\n    }),\n    new TableHeaderModel({\n      label: 'Date',\n      columnKey: 'date',\n      isRowHeader: true,\n    }),\n    new TableHeaderModel({\n      label: 'User',\n      columnKey: 'user',\n      type: TableHeaderTypeEnum.SORT,\n    }),\n    new TableHeaderModel({\n      label: 'Long Text Long Text',\n      columnKey: 'longText',\n      headerWidth: '20%',\n    }),\n    new TableHeaderModel({\n      label: 'Status',\n      columnKey: 'status',\n      type: TableHeaderTypeEnum.SORT,\n    }),\n    new TableHeaderModel({\n      label: 'Action',\n      columnKey: 'action',\n    }),\n  ],\n  rows: [\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 1',\n          ariaLabel: 'Activate spacebar to select row 1',\n          checkboxValue: '1',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 1 asdf asd asd fasd f asdf asd f asdf  asdf adsf a dsf adsf dasf asd f adsfa sdf',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: ($event) => {\n            console.log('Inline Function - ', $event);\n          },\n        }),\n        new TableCellModel({\n          label: '1/1/2000',\n        }),\n        new TableCellModel({\n          label: 'Jim <span class=\"ds-c-badge ds-c-badge--alert\">New</span>',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Active',\n          icon: faCircle,\n          iconClass: 'ds-u-color--success',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover1` },\n        }),\n      ],\n    }),\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 2',\n          ariaLabel: 'Activate spacebar to select row 2',\n          checkboxValue: '2',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 2',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: defaultProps.handleEvent,\n        }),\n        new TableCellModel({\n          label: '2/2/2002',\n        }),\n        new TableCellModel({\n          label: 'Pam',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Suspended',\n          icon: faCircle,\n          iconClass: 'ds-u-color--error',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover2` },\n        }),\n      ],\n    }),\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 3',\n          ariaLabel: 'Activate spacebar to select row 3',\n          checkboxValue: '3',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 3',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: defaultProps.handleEvent,\n        }),\n        new TableCellModel({\n          label: '2/1/2004',\n        }),\n        new TableCellModel({\n          label: 'Dwight',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Active',\n          icon: faCircle,\n          iconClass: 'ds-u-color--success',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover3` },\n        }),\n      ],\n    }),\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 4',\n          ariaLabel: 'Activate spacebar to select row 4',\n          checkboxValue: '4',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 4',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: defaultProps.handleEvent,\n        }),\n        new TableCellModel({\n          label: '1/5/2010',\n        }),\n        new TableCellModel({\n          label: 'Jim',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Inactive',\n          icon: faCircle,\n          iconClass: 'ds-u-color--gray',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover4` },\n        }),\n      ],\n    }),\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 5',\n          ariaLabel: 'Activate spacebar to select row 5',\n          checkboxValue: '5',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 5',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: defaultProps.handleEvent,\n        }),\n        new TableCellModel({\n          label: '2/5/2010',\n        }),\n        new TableCellModel({\n          label: 'Stanley',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Inactive',\n          icon: faCircle,\n          iconClass: 'ds-u-color--gray',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover5` },\n        }),\n      ],\n    }),\n  ],\n  totalRows: 20,\n  summary: 'This table is an example implementation of the Table Component',\n  pagination: new TablePaginationModel({\n    isEnabled: true,\n    perPage: 5,\n    currentPage: 1,\n  }),\n})"
      },
      {
        "name": "tableModelColspan",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table2/table.stories.ts",
        "type": "",
        "defaultValue": "new TableModel(JSON.parse(JSON.stringify(tableModel)))"
      },
      {
        "name": "tableModelHighlightedRow",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table2/table.stories.ts",
        "type": "",
        "defaultValue": "new TableModel(JSON.parse(JSON.stringify(tableModel)))"
      },
      {
        "name": "tableModelLoading",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table2/table.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...tableModel,\n  isLoading: true,\n}"
      },
      {
        "name": "tableModelMultipleHeaderRows",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table2/table.stories.ts",
        "type": "",
        "defaultValue": "new TableModel(JSON.parse(JSON.stringify(tableModel)))"
      },
      {
        "name": "tableModelNoRecords",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/table2/table.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...tableModel,\n  rows: [],\n  totalRows: 0,\n}"
      },
      {
        "name": "tabs",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/tabs/tabs.stories.ts",
        "type": "[]",
        "defaultValue": "[\n    {\n        title: 'tab1',\n        ariaLabel: 'tab1 hello',\n        link: \"tab1\"\n    },\n    {\n        title: 'tab2',\n        ariaLabel: 'tab1 yellow',\n        link: \"tab2\"\n    },\n    {\n        title: 'tab3',\n        ariaLabel: 'tab3 mellow',\n        link: \"tab3gi\"\n    }\n]"
      },
      {
        "name": "tooltipModel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "TooltipModel",
        "defaultValue": "new TooltipModel({\n  id: 'tooltipLink',\n  triggerType: TooltipTriggerTypeEnum.LINK,\n  triggerContent: '<em>Tooltip</em> - hover or click me!',\n  tooltipContent: 'hey this is my content!',\n  ariaLabel: 'this is my aria label',\n  placement: TooltipPlacementEnum.RIGHT,\n})"
      },
      {
        "name": "tooltipModelButton",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...tooltipModel,\n  triggerType: TooltipTriggerTypeEnum.BUTTON,\n  triggerClass: 'ds-c-button--primary',\n}"
      },
      {
        "name": "tooltipModelIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...tooltipModel,\n  triggerType: TooltipTriggerTypeEnum.BUTTON,\n  triggerContent: 'Look at my icon!',\n  triggerClass: 'ds-c-button--primary',\n  triggerIcon: faQuestionCircle,\n}"
      },
      {
        "name": "tooltipModelIconOnly",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...tooltipModel,\n  triggerType: TooltipTriggerTypeEnum.BUTTON,\n  triggerContent: '',\n  triggerClass: 'ds-c-button--transparent ds-u-padding-x--0',\n  triggerIcon: faQuestionCircle,\n}"
      },
      {
        "name": "tooltipModelInversed",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "object",
        "defaultValue": "{\n  ...tooltipModel,\n  inversed: true,\n  triggerClass: 'ds-u-color--white',\n}"
      }
    ],
    "functions": [
      {
        "name": "handleEventTable",
        "file": "src/app/modules/table/table/table.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "event",
            "type": ""
          }
        ],
        "jsdoctags": [
          {
            "name": "event",
            "type": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [],
    "enumerations": [
      {
        "name": "ChoiceSize",
        "childs": [
          {
            "name": "small",
            "value": "ds-c-choice--small"
          },
          {
            "name": "medium",
            "value": ""
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "src/app/modules/choice/choice.component.ts"
      },
      {
        "name": "mdePopoverPositionXEnum",
        "childs": [
          {
            "name": "BEFORE",
            "value": "before"
          },
          {
            "name": "AFTER",
            "value": "after"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "src/app/modules/popover/popover.model.ts"
      },
      {
        "name": "mdePopoverPositionYEnum",
        "childs": [
          {
            "name": "ABOVE",
            "value": "above"
          },
          {
            "name": "BELOW",
            "value": "below"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "src/app/modules/popover/popover.model.ts"
      },
      {
        "name": "PanelIconPlacementEnum",
        "childs": [
          {
            "name": "LEFT",
            "value": "left"
          },
          {
            "name": "RIGHT",
            "value": "right"
          },
          {
            "name": "INLINE",
            "value": "inline"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "src/app/modules/panel/panel.models.ts"
      },
      {
        "name": "PanelTitlePlacementEnum",
        "childs": [
          {
            "name": "TOP",
            "value": "TOP"
          },
          {
            "name": "BOTTOM",
            "value": "BOTTOM"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "src/app/modules/panel/panel.models.ts"
      },
      {
        "name": "TableCellTypeEnum",
        "childs": [
          {
            "name": "DEFAULT",
            "value": "default"
          },
          {
            "name": "BUTTON",
            "value": "button"
          },
          {
            "name": "CHECKBOX",
            "value": "checkbox"
          },
          {
            "name": "POPOVER",
            "value": "popover"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "<hr>\n<p>Table Row Models</p>\n<hr>\n",
        "file": "src/app/modules/table2/table.models.ts"
      },
      {
        "name": "TableHeaderSortEnum",
        "childs": [
          {
            "name": "NONE",
            "value": "none"
          },
          {
            "name": "ASC",
            "value": "asc"
          },
          {
            "name": "DESC",
            "value": "desc"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "src/app/modules/table2/table.models.ts"
      },
      {
        "name": "TableHeaderTypeEnum",
        "childs": [
          {
            "name": "DEFAULT",
            "value": "default"
          },
          {
            "name": "SORT",
            "value": "sort"
          },
          {
            "name": "CHECKBOX",
            "value": "checkbox"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "<hr>\n<p>Table Header Models</p>\n<hr>\n",
        "file": "src/app/modules/table2/table.models.ts"
      },
      {
        "name": "TooltipPlacementEnum",
        "childs": [
          {
            "name": "AUTO",
            "value": "auto"
          },
          {
            "name": "BOTTOM",
            "value": "bottom"
          },
          {
            "name": "TOP",
            "value": "top"
          },
          {
            "name": "RIGHT",
            "value": "right"
          },
          {
            "name": "LEFT",
            "value": "left"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "src/app/modules/tooltip/tooltip.models.ts"
      },
      {
        "name": "TooltipTriggerTypeEnum",
        "childs": [
          {
            "name": "LINK",
            "value": "link"
          },
          {
            "name": "BUTTON",
            "value": "button"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "src/app/modules/tooltip/tooltip.models.ts"
      }
    ],
    "groupedVariables": {
      "src/app/modules/animations/animations.ts": [
        {
          "name": "Animations",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/animations/animations.ts",
          "type": "object",
          "defaultValue": "{\n    animations: [\n        trigger('expansionTrigger', [\n            transition(':enter', [\n                style({\n                    height: '0'\n                }),\n                animate('200ms linear', style({ height: '*' }))\n            ]),\n            transition(':leave', [\n                style({\n                    height: '*'\n                }),\n                animate('100ms 100ms linear', style({ height: '0' }))\n            ])\n        ]),\n        trigger('fadeInTrigger', [\n            transition(':enter', [\n                style({\n                    opacity: '0'\n                }),\n                animate('100ms 100ms', style({ opacity: 1 }))\n            ]),\n            transition(':leave', [\n                animate('200ms', style({ opacity: 0 }))\n            ])\n        ])\n    ]\n}"
        }
      ],
      "src/app/modules/toast/component/toast.animations.ts": [
        {
          "name": "Animations",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/toast/component/toast.animations.ts",
          "type": "object",
          "defaultValue": "{\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        transform: 'translate3d(100%, 0, 0)',\n        opacity: 0,\n      })),\n      transition('inactive => active', animate('400ms ease-out', keyframes([\n        style({\n          transform: 'none',\n          opacity: 1,\n        }),\n      ]))),\n      transition('active => removed', animate('400ms ease-out', keyframes([\n        style({\n          opacity: 1,\n        }),\n        style({\n          transform: 'translate3d(100%, 0, 0)',\n          opacity: 0,\n        }),\n      ]))),\n    ]),\n  ]\n}"
        }
      ],
      "src/app/modules/bar-graph/bar-graph.stories.ts": [
        {
          "name": "barGraphData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/bar-graph/bar-graph.stories.ts",
          "type": "[]",
          "defaultValue": "[\n    {\n        'name': 'STP-2',\n        'value': 100\n    },\n    {\n        'name': 'STP-3',\n        'value': -6\n    },\n    {\n        'name': 'STP-4',\n        'value': 55\n    },\n]"
        },
        {
          "name": "barGraphModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/bar-graph/bar-graph.stories.ts",
          "type": "",
          "defaultValue": "new BarGraphModel({\n    data: barGraphData,\n})"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/bar-graph/bar-graph.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    barGraphModel: barGraphModel\n}"
        }
      ],
      "src/app/modules/calendar/calendar.stories.ts": [
        {
          "name": "calendarModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/calendar/calendar.stories.ts",
          "type": "",
          "defaultValue": "new CalendarModel({\n  id: 'calendar',\n  date: new Date('07/21/2020'),\n  endDate: new Date('08/21/2020'),\n  isCheckBox: true,\n  isDateRange: true,\n  minDate: new Date('07/21/2020'),\n  maxDate: new Date('08/21/2020'),\n  minEndDate: new Date('08/21/2020'),\n  maxEndDate: new Date('09/21/2020'),\n})"
        },
        {
          "name": "calendarModelNoRange",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/calendar/calendar.stories.ts",
          "type": "",
          "defaultValue": "new CalendarModel({\n  id: 'calendar',\n  dateLabel: 'Pick your date',\n})"
        },
        {
          "name": "calendarNoBox",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/calendar/calendar.stories.ts",
          "type": "",
          "defaultValue": "new CalendarModel({\n  id: 'calendar',\n  isDateRange: true,\n})"
        },
        {
          "name": "calendarWithDebounce",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/calendar/calendar.stories.ts",
          "type": "",
          "defaultValue": "new CalendarModel({\n  ...calendarModel,\n  debounceTime: 5000,\n})"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/calendar/calendar.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...defaultProps,\n  calendarModelNoRange,\n  calendarNoBox,\n  calendarModel,\n  calendarWithDebounce,\n}"
        }
      ],
      "src/app/modules/card-cluster/card-cluster.stories.ts": [
        {
          "name": "cardClusterDataDisabledCards",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "",
          "defaultValue": "cardClusterDataShowRadioButtons"
        },
        {
          "name": "cardClusterDataNormal",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "",
          "defaultValue": "new CardClusterModel({\n  mainCard: true,\n  mainTitle: 'STK-2',\n  mainSub: 'Episodes',\n  ariaLabel: 'Activate enter button to view all items',\n  buttonClicked: 'CardCluster0',\n  cluster: [\n    {\n      value: 'vte',\n      name: 'IPP Not Met',\n      ariaLabel: 'Activate enter to view all items for the IPP Not Met category',\n    },\n    {\n      value: 'cbc',\n      name: 'IPP Met',\n    },\n    {\n      value: 1,\n      name: 'Denominator',\n    },\n    {\n      value: 16,\n      name: 'Denominator',\n    },\n    {\n      value: 85,\n      name: 'Numerator',\n    },\n    {\n      value: 3,\n      name: 'Den. Exceptions',\n    },\n    {\n      classValue: 'viewPerformanceIcon',\n      classButton: 'vpi',\n      name: 'View Performance',\n      className: 'vpi',\n    },\n  ],\n})"
        },
        {
          "name": "cardClusterDataSelectedCard",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...cardClusterDataNormal,\n  buttonClicked: 'CardCluster4',\n}"
        },
        {
          "name": "cardClusterDataSetTotal",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...cardClusterDataNormal,\n  total: 9999,\n}"
        },
        {
          "name": "cardClusterDataShowRadioButtons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...cardClusterDataNormal,\n  showRadioButton: true,\n}"
        },
        {
          "name": "cardClusterDataShowRadioButtonsAndIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "",
          "defaultValue": "new CardClusterModel({\n  mainCard: false,\n  showRadioButton: true,\n  rowMaxItems: 2,\n  cluster: [\n    {\n      value: 'Basic User',\n      name: 'A Basic User is an Organization Role with Read/Write Access to the Organization(s) in their system.',\n      valueIcon: faEye,\n      ariaLabel: 'Activate enter to select Basic User',\n      classButton: 'ds-u-padding--2',\n    },\n    {\n      value: 'Security Administrator',\n      name: 'A Security Administrator is a person who manages User Roles & Permissions for their Organization.',\n      valueIcon: faUserShield,\n      ariaLabel: 'Activate enter to select Security Administrator',\n      classButton: 'ds-u-padding--2',\n    },\n  ],\n})"
        },
        {
          "name": "cardClusterDataWithoutMain",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...cardClusterDataNormal,\n  mainCard: false,\n  buttonClicked: 'CardCluster1',\n}"
        },
        {
          "name": "cardClusterDataWithoutMiniCards",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...cardClusterDataNormal,\n  cluster: [],\n}"
        },
        {
          "name": "cardClusterResizeTimeout",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...cardClusterDataNormal,\n  resizeTimeout: 1,\n}"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/card-cluster/card-cluster.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...defaultProps,\n  cardClusterDataNormal,\n  cardClusterDataWithoutMain,\n  cardClusterDataWithoutMiniCards,\n  cardClusterDataSelectedCard,\n  cardClusterResizeTimeout,\n  cardClusterDataSetTotal,\n  cardClusterDataShowRadioButtons,\n  cardClusterDataShowRadioButtonsAndIcons,\n  cardClusterDataDisabledCards,\n}"
        }
      ],
      "src/app/modules/code-snippet/code-snippet.stories.ts": [
        {
          "name": "codeSnippetIconModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/code-snippet/code-snippet.stories.ts",
          "type": "",
          "defaultValue": "new CodeSnippetModel({\n    label: 'XPath',\n    contentItems: [\n        new CodeSnippetContentItemModel({content: '|- ClinicalDocument'}),\n        new CodeSnippetContentItemModel({content: ' |- component[1]'}),\n        new CodeSnippetContentItemModel({content: '  |- structuredBody[1]'}),\n        new CodeSnippetContentItemModel({content: '   |- component[3]'}),\n        new CodeSnippetContentItemModel({content: '    |- section[1]'}),\n        new CodeSnippetContentItemModel({content: '     |- entry[3]'}),\n        new CodeSnippetContentItemModel({content: '      |- act[1]'}),\n        new CodeSnippetContentItemModel({content: '       |- entryRelationship[1]'}),\n        new CodeSnippetContentItemModel({content: '        |- substanceAdministration[1]', icon: faExclamationCircle, className: 'ds-u-fill--error-lightest ds-u-color--error-dark'}),\n    ],\n    copyContent: `/ClinicalDocument/component[1]/structuredBody[1]/component[3]/section[1]/entry[3]/act[1]/entryRelationship[1]/substanceAdministration[1]['line 450 column 75']`,\n})"
        },
        {
          "name": "codeSnippetModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/code-snippet/code-snippet.stories.ts",
          "type": "",
          "defaultValue": "new CodeSnippetModel({\n    label: 'XPath',\n    contentItems: [\n        new CodeSnippetContentItemModel({content: '|- ClinicalDocument'}),\n        new CodeSnippetContentItemModel({content: ' |- component[1]'}),\n        new CodeSnippetContentItemModel({content: '  |- structuredBody[1]'}),\n        new CodeSnippetContentItemModel({content: '   |- component[3]'}),\n        new CodeSnippetContentItemModel({content: '    |- section[1]'}),\n        new CodeSnippetContentItemModel({content: '     |- entry[3]'}),\n        new CodeSnippetContentItemModel({content: '      |- act[1]'}),\n        new CodeSnippetContentItemModel({content: '       |- entryRelationship[1]'}),\n        new CodeSnippetContentItemModel({content: '        |- substanceAdministration[1]', lineNumber: 450, className: 'ds-u-fill--error-lightest ds-u-color--error-dark'}),\n    ],\n    copyContent: `/ClinicalDocument/component[1]/structuredBody[1]/component[3]/section[1]/entry[3]/act[1]/entryRelationship[1]/substanceAdministration[1]['line 450 column 75']`,\n})"
        },
        {
          "name": "codeSnippetModelFile",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/code-snippet/code-snippet.stories.ts",
          "type": "",
          "defaultValue": "new CodeSnippetModel({\n    label: 'File Name',\n    contentItems: [\n        new CodeSnippetContentItemModel({content: 'ReallyReallyIncrediblyInsanelyLongVeryVeryVeryLongReallyReallyIncrediblyInsanelyLongVeryVeryVeryLongFilename.zip'}),\n    ],\n    copyLinkDisplay: false,\n})"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/code-snippet/code-snippet.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    codeSnippetModel,\n    codeSnippetModelFile,\n    codeSnippetIconModel,\n}"
        }
      ],
      "src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "type": "any"
        }
      ],
      "src/app/modules/chip-filter/chip-filter.component.ts": [
        {
          "name": "DROPDOWN_CONTROL_VALUE_ACCESSOR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/chip-filter.component.ts",
          "type": "any",
          "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AppChipFilterComponent),\n  multi: true,\n}"
        },
        {
          "name": "noop",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/chip-filter.component.ts",
          "type": "",
          "defaultValue": "() => {}"
        }
      ],
      "src/app/modules/drop-down/drop-down.stories.ts": [
        {
          "name": "dropDownData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/drop-down/drop-down.stories.ts",
          "type": "[]",
          "defaultValue": "[\n    {\n        'content': 'option1',\n        'value': 'op1'\n    },\n    {\n        'content': 'option2',\n        'value': 'op2'\n    },\n    {\n        'content': 'option3',\n        'value': 'op3'\n    }\n]"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/drop-down/drop-down.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    dropDownData,\n}"
        }
      ],
      "src/app/modules/chip-filter/story.const.ts": [
        {
          "name": "dropdownList",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/story.const.ts",
          "type": "[]",
          "defaultValue": "[\n  { id: 1, text: 'Provider Name 1' },\n  { id: 2, text: 'Provider Name 2213123123' },\n  { id: 3, text: 'Provider Name 452345243543254' },\n  { id: 4, text: 'Provider Name 14325234523454235' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n  { id: 5, text: 'Provider Name 1e2q423q45' },\n]"
        },
        {
          "name": "dropdownSettings",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/story.const.ts",
          "type": "object",
          "defaultValue": "{\n  singleSelection: false,\n  placeholder: 'Search Provider(s)',\n  searchPlaceholder: 'Search by Provider Name or ID',\n  idField: 'id',\n  textField: 'test',\n  selectAllText: 'Select All Providers',\n  unSelectAllText: 'UnSelect All Providers',\n  label: 'Search Providers',\n  itemsShowLimit: 3,\n  allowSearchFilter: true,\n  labelName: 'Provider(s)',\n}"
        },
        {
          "name": "dropdownSettings2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/story.const.ts",
          "type": "object",
          "defaultValue": "{\n  singleSelection: false,\n  idField: 'id',\n  textField: 'text',\n  selectAllText: 'Select All Providers',\n  unSelectAllText: 'UnSelect All Providers',\n  label: 'Search Providers',\n  itemsShowLimit: 3,\n  allowSearchFilter: false,\n}"
        },
        {
          "name": "dropdownSettings3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/story.const.ts",
          "type": "object",
          "defaultValue": "{\n  singleSelection: false,\n  idField: 'id',\n  textField: 'text',\n  selectAllText: 'Select All Providers',\n  unSelectAllText: 'UnSelect All Providers',\n  label: 'Search Providers',\n  itemsShowLimit: 2,\n  allowSearchFilter: false,\n}"
        },
        {
          "name": "dropdownSettingsError",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/story.const.ts",
          "type": "object",
          "defaultValue": "{\n  ...dropdownSettings,\n  error: true,\n  errorMessage: 'This is an error',\n}"
        },
        {
          "name": "parameters",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/story.const.ts",
          "type": "[]",
          "defaultValue": "[\n  {\n    name: 'disabled',\n    type: 'boolean',\n    value: 'If set to true, the dropdown is disabled.',\n  },\n  {\n    name: 'settings',\n    type: 'IDropdownSettings',\n    value: \"Use this to override the dropdown component's default settings.\",\n    properties: settingsProps,\n  },\n  {\n    name: 'data',\n    type: 'Array<{id: number, text: string}>',\n    value: 'Populate dropdown list with data.',\n  },\n]"
        },
        {
          "name": "settingsProps",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/story.const.ts",
          "type": "[]",
          "defaultValue": "[\n  {\n    name: 'idField',\n    type: 'string',\n    value: 'The id for the dropdown li',\n  },\n  {\n    name: 'singleSelection',\n    type: 'boolean',\n    value: 'Use this to further specify the dropdown component to the screen reader',\n  },\n  {\n    name: 'textField',\n    type: 'string',\n    value: 'This changes the key for displayed text on dropdown li.',\n  },\n  {\n    name: 'disabledField',\n    type: 'string',\n    value: 'This is the.',\n  },\n  {\n    name: 'itemsShowLimit',\n    type: 'number',\n    value: 'Hide or show number of results.',\n  },\n  {\n    name: 'maxHeight',\n    type: 'number',\n    value: 'Max height of dropdown.',\n  },\n  {\n    name: 'enableCheckAll',\n    type: 'boolean',\n    value: 'Display check all.',\n  },\n  {\n    name: 'closeDropDownOnSelection',\n    type: 'boolean',\n    value: 'Close dropdown on selection.',\n  },\n  {\n    name: 'labelName',\n    type: 'string',\n    value: \"The value that shows in the dropdown's label\",\n  },\n  {\n    name: 'labelClass',\n    type: 'string',\n    value: 'The CSS class that applies to the label',\n  },\n  {\n    name: 'hintMessage',\n    type: 'string',\n    value: 'A hint message to display in the component',\n  },\n  {\n    name: 'errorMessage',\n    type: 'string',\n    value: 'An error message to display in the component',\n  },\n  {\n    name: 'error',\n    type: 'boolean',\n    value: 'If set to true, the dropdown turns red.',\n  },\n\n  {\n    name: 'placeholder',\n    type: 'string',\n    value: 'Dropdown search placeholder.',\n  },\n]"
        }
      ],
      "src/environments/environment.prod.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.prod.ts",
          "type": "object",
          "defaultValue": "{\n  production: true\n}"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "type": "object",
          "defaultValue": "{\n  production: false\n}"
        }
      ],
      "src/app/modules/file-upload/file-upload.stories.ts": [
        {
          "name": "fileUploadModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/file-upload/file-upload.stories.ts",
          "type": "",
          "defaultValue": "new FileUploadModel({\n    height: 300,\n    className: 'ds-u-fill--primary-alt-lightest',\n    classNameActive: 'ds-u-fill--primary-alt-light',\n})"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/file-upload/file-upload.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    fileUploadModel,\n}"
        }
      ],
      "src/app/modules/line-graph/line-graph.stories.ts": [
        {
          "name": "lineGraphData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/line-graph/line-graph.stories.ts",
          "type": "[]",
          "defaultValue": "[\n    {\n        'name': 'Strata-1',\n        'series': [\n            {\n                'name': 'Q1',\n                'value': 4300\n            },\n            {\n                'name': 'Q2',\n                'value': 4000\n            },\n            {\n                'name': 'Q3',\n                'value': 5940\n            }\n        ]\n    },\n    {\n        'name': 'Strata-2',\n        'series': [\n            {\n                'name': 'Q1',\n                'value': 5300\n            },\n            {\n                'name': 'Q2',\n                'value': 3000\n            },\n            {\n                'name': 'Q3',\n                'value': 1940\n            }\n        ]\n    },\n    {\n        'name': 'Strata-3',\n        'series': [\n            {\n                'name': 'Q1',\n                'value': 2300\n            },\n            {\n                'name': 'Q2',\n                'value': 6000\n            },\n            {\n                'name': 'Q3',\n                'value': 3940\n            }\n        ]\n    }\n]"
        },
        {
          "name": "lineGraphDataMissingValues",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/line-graph/line-graph.stories.ts",
          "type": "[]",
          "defaultValue": "[\n    {\n        'name': 'Strata-1',\n        'series': [\n            {\n                'name': 'Q1 2018',\n                'value': 4300\n            },\n            {\n                'name': 'Q3 2018',\n                'value': 5940\n            }\n        ]\n    },\n    {\n        'name': 'Strata-2',\n        'series': [\n            {\n                'name': 'Q1 2018',\n                'value': 5300\n            },\n            {\n                'name': 'Q4 2018',\n                'value': 3000\n            },\n        ]\n    },\n    {\n        'name': 'Strata-3',\n        'series': [\n            {\n                'name': 'Q2 2018',\n                'value': 6000\n            },\n            {\n                'name': 'Q3 2018',\n                'value': 3940\n            },\n            {\n                'name': 'Q2 2019',\n                'value': 4900\n            }\n        ]\n    },\n    {\n        'name': 'One Dot',\n        'series': [\n            {\n                'name': 'Q1 2019',\n                'value': 5800\n            },\n        ]\n    }\n]"
        },
        {
          "name": "lineGraphDataSingleDataPoints",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/line-graph/line-graph.stories.ts",
          "type": "[]",
          "defaultValue": "[\n    {\n        'name': 'Strata-1',\n        'series': [\n            {\n                'name': 'Q1 2018',\n                'value': 4300\n            },\n        ]\n    },\n    {\n        'name': 'Strata-2',\n        'series': [\n            {\n                'name': 'Q4 2018',\n                'value': 3000\n            },\n        ]\n    },\n    {\n        'name': 'Strata-3',\n        'series': [\n            {\n                'name': 'Q2 2019',\n                'value': 4900\n            }\n        ]\n    },\n    {\n        'name': 'One Dot',\n        'series': [\n            {\n                'name': 'Q4 2018',\n                'value': 5800\n            },\n        ]\n    }\n]"
        },
        {
          "name": "lineGraphDataXAxisValues",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/line-graph/line-graph.stories.ts",
          "type": "[]",
          "defaultValue": "['Q1 2018', 'Q2 2018', 'Q3 2018', 'Q4 2018', 'Q1 2019', 'Q2 2019', 'Q3 2019', 'Q4 2019']"
        },
        {
          "name": "lineGraphModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/line-graph/line-graph.stories.ts",
          "type": "",
          "defaultValue": "new LineGraphModel({\n    data: lineGraphData,\n    xLabel: 'X Label',\n    yLabel: 'Y Label',\n})"
        },
        {
          "name": "lineGraphModelMissingValues",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/line-graph/line-graph.stories.ts",
          "type": "",
          "defaultValue": "new LineGraphModel({\n    data: lineGraphDataMissingValues,\n    xAxisValues: lineGraphDataXAxisValues,\n    xLabel: 'X Label',\n    yLabel: 'Y Label'\n})"
        },
        {
          "name": "lineGraphModelSingleDataPoints",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/line-graph/line-graph.stories.ts",
          "type": "",
          "defaultValue": "new LineGraphModel({\n    data: lineGraphDataSingleDataPoints,\n    xAxisValues: lineGraphDataXAxisValues,\n    xLabel: 'X Label',\n    yLabel: 'Y Label'\n})"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/line-graph/line-graph.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    lineGraphModel,\n    lineGraphModelMissingValues,\n    lineGraphModelSingleDataPoints\n}"
        }
      ],
      "src/app/modules/modal/modal.stories.ts": [
        {
          "name": "modalData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/modal/modal.stories.ts",
          "type": "[]",
          "defaultValue": "[\n    {\n        'heading': 'Description'\n    },\n    {\n        'paragraph': 'Severe Sepsis and Septic Shock'\n    },\n    {\n        'heading': 'Supplemental Information'\n    },\n    {\n        'hline': true\n    },\n    {\n        'heading2': 'Volume Category Reference'\n    },\n    {\n        'paragraph': 'Low: #26 min. (5)'\n    },\n    {\n        'paragraph': 'Med: #43 min. (12)'\n    },\n    {\n        'paragraph': 'High: #72 min. (8)'\n    },\n    {\n        'heading2': 'Supplemental Information Footnotes'\n    },\n    {\n        'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n    },\n    {\n        'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n    },\n    {\n        'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n    }\n]"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/modal/modal.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    modalData,\n    appTableModalComponent: AppTableModalComponent\n}"
        }
      ],
      "src/app/modules/circle-graph/circle-graph.stories.ts": [
        {
          "name": "pieData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/circle-graph/circle-graph.stories.ts",
          "type": "[]",
          "defaultValue": "[\n    {\n        'name': 'Accepted Files',\n        'value': 1000,\n        'attr': 'rate'\n    },\n    {\n        'name': 'Rejected Files',\n        'value': 233\n    }\n]"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/circle-graph/circle-graph.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    pieData: pieData,\n}"
        }
      ],
      "src/app/modules/popover/popover.stories.ts": [
        {
          "name": "popoverModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/popover/popover.stories.ts",
          "type": "",
          "defaultValue": "new PopoverModel({\n  items: [\n    new PopoverItemModel({\n      label: 'Item',\n      onClick: () => {\n        console.log('INLINE FUNCTION CALL');\n      },\n    }),\n    new PopoverItemModel({\n      label: 'Menu Item 2',\n      url: 'https://www.google.com',\n    }),\n    new PopoverItemModel({\n      label: 'Menu Item 3',\n      onClick: defaultProps.handleEvent,\n    }),\n  ],\n})"
        },
        {
          "name": "popoverModelButtonClass",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/popover/popover.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...popoverModel,\n  buttonClass: 'ds-u-color--primary',\n}"
        },
        {
          "name": "popoverModelScrolling",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/popover/popover.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...popoverModel,\n  items: [\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n    ...popoverModel.items,\n  ],\n}"
        },
        {
          "name": "popoverModelUtility",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/popover/popover.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...popoverModel,\n  showArrow: false,\n  label: null,\n  mdePopoverPositionX: mdePopoverPositionXEnum.AFTER,\n  mdePopoverPositionY: mdePopoverPositionYEnum.ABOVE,\n}"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/popover/popover.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...defaultProps,\n  popoverModel,\n  popoverModelUtility,\n  faEllipsisV,\n  popoverModelButtonClass,\n  popoverModelScrolling,\n}"
        }
      ],
      "src/app/modules/table2/table.stories.ts": [
        {
          "name": "popoverModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table2/table.stories.ts",
          "type": "PopoverModel",
          "defaultValue": "new PopoverModel({\n  items: [\n    new PopoverItemModel({\n      label: 'Menu Item 1',\n      onClick: defaultProps.handleEvent,\n    }),\n    new PopoverItemModel({\n      label: 'Menu Item 2',\n      url: 'https://www.google.com',\n    }),\n  ],\n  showArrow: false,\n  icon: faEllipsisV,\n  label: null,\n  mdePopoverPositionX: mdePopoverPositionXEnum.AFTER,\n  mdePopoverPositionY: mdePopoverPositionYEnum.BELOW,\n})"
        },
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table2/table.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...defaultProps,\n  tableModel,\n  tableModelNoRecords,\n  tableModelLoading,\n  tableModelHighlightedRow,\n  tableModelColspan,\n  tableModelMultipleHeaderRows,\n}"
        },
        {
          "name": "tableModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table2/table.stories.ts",
          "type": "TableModel",
          "defaultValue": "new TableModel({\n  id: 'storiesTable',\n  headerClass: 'ds-u-fill--gray-lightest',\n  headers: [\n    new TableHeaderModel({\n      label: 'Select All',\n      ariaLabel: 'Activate enter key to select all rows',\n      type: TableCellTypeEnum.CHECKBOX,\n      columnKey: 'checkbox',\n    }),\n    new TableHeaderModel({\n      label: 'Label',\n      columnKey: 'label',\n      modalText: 'This is an example modal!',\n    }),\n    new TableHeaderModel({\n      label: 'Date',\n      columnKey: 'date',\n      isRowHeader: true,\n    }),\n    new TableHeaderModel({\n      label: 'User',\n      columnKey: 'user',\n      type: TableHeaderTypeEnum.SORT,\n    }),\n    new TableHeaderModel({\n      label: 'Long Text Long Text',\n      columnKey: 'longText',\n      headerWidth: '20%',\n    }),\n    new TableHeaderModel({\n      label: 'Status',\n      columnKey: 'status',\n      type: TableHeaderTypeEnum.SORT,\n    }),\n    new TableHeaderModel({\n      label: 'Action',\n      columnKey: 'action',\n    }),\n  ],\n  rows: [\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 1',\n          ariaLabel: 'Activate spacebar to select row 1',\n          checkboxValue: '1',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 1 asdf asd asd fasd f asdf asd f asdf  asdf adsf a dsf adsf dasf asd f adsfa sdf',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: ($event) => {\n            console.log('Inline Function - ', $event);\n          },\n        }),\n        new TableCellModel({\n          label: '1/1/2000',\n        }),\n        new TableCellModel({\n          label: 'Jim <span class=\"ds-c-badge ds-c-badge--alert\">New</span>',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Active',\n          icon: faCircle,\n          iconClass: 'ds-u-color--success',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover1` },\n        }),\n      ],\n    }),\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 2',\n          ariaLabel: 'Activate spacebar to select row 2',\n          checkboxValue: '2',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 2',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: defaultProps.handleEvent,\n        }),\n        new TableCellModel({\n          label: '2/2/2002',\n        }),\n        new TableCellModel({\n          label: 'Pam',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Suspended',\n          icon: faCircle,\n          iconClass: 'ds-u-color--error',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover2` },\n        }),\n      ],\n    }),\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 3',\n          ariaLabel: 'Activate spacebar to select row 3',\n          checkboxValue: '3',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 3',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: defaultProps.handleEvent,\n        }),\n        new TableCellModel({\n          label: '2/1/2004',\n        }),\n        new TableCellModel({\n          label: 'Dwight',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Active',\n          icon: faCircle,\n          iconClass: 'ds-u-color--success',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover3` },\n        }),\n      ],\n    }),\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 4',\n          ariaLabel: 'Activate spacebar to select row 4',\n          checkboxValue: '4',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 4',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: defaultProps.handleEvent,\n        }),\n        new TableCellModel({\n          label: '1/5/2010',\n        }),\n        new TableCellModel({\n          label: 'Jim',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Inactive',\n          icon: faCircle,\n          iconClass: 'ds-u-color--gray',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover4` },\n        }),\n      ],\n    }),\n    new TableRowModel({\n      cells: [\n        new TableCellModel({\n          label: 'Row 5',\n          ariaLabel: 'Activate spacebar to select row 5',\n          checkboxValue: '5',\n          type: TableCellTypeEnum.CHECKBOX,\n          columnKey: 'checkbox',\n        }),\n        new TableCellModel({\n          label: 'Row 5',\n          type: TableCellTypeEnum.BUTTON,\n          buttonClass: 'ds-u-padding--0 ds-u-border--0 ds-u-color--base',\n          buttonOnClick: defaultProps.handleEvent,\n        }),\n        new TableCellModel({\n          label: '2/5/2010',\n        }),\n        new TableCellModel({\n          label: 'Stanley',\n          icon: faUser,\n          iconClass: 'ds-u-color--primary',\n        }),\n        new TableCellModel({\n          label: 'abcdefghijklmnopqrstuvwxyz1234567890',\n        }),\n        new TableCellModel({\n          label: 'Inactive',\n          icon: faCircle,\n          iconClass: 'ds-u-color--gray',\n        }),\n        new TableCellModel({\n          type: TableCellTypeEnum.POPOVER,\n          popoverModel: { ...popoverModel, id: `popover5` },\n        }),\n      ],\n    }),\n  ],\n  totalRows: 20,\n  summary: 'This table is an example implementation of the Table Component',\n  pagination: new TablePaginationModel({\n    isEnabled: true,\n    perPage: 5,\n    currentPage: 1,\n  }),\n})"
        },
        {
          "name": "tableModelColspan",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table2/table.stories.ts",
          "type": "",
          "defaultValue": "new TableModel(JSON.parse(JSON.stringify(tableModel)))"
        },
        {
          "name": "tableModelHighlightedRow",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table2/table.stories.ts",
          "type": "",
          "defaultValue": "new TableModel(JSON.parse(JSON.stringify(tableModel)))"
        },
        {
          "name": "tableModelLoading",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table2/table.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...tableModel,\n  isLoading: true,\n}"
        },
        {
          "name": "tableModelMultipleHeaderRows",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table2/table.stories.ts",
          "type": "",
          "defaultValue": "new TableModel(JSON.parse(JSON.stringify(tableModel)))"
        },
        {
          "name": "tableModelNoRecords",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table2/table.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...tableModel,\n  rows: [],\n  totalRows: 0,\n}"
        }
      ],
      "src/app/modules/accordion/accordion.stories.ts": [
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/accordion/accordion.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...defaultProps,\n  faPencilAlt,\n  faChevronCircleRight,\n  faCheck,\n}"
        }
      ],
      "src/app/modules/chip-filter/chip-filter.stories.ts": [
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/chip-filter/chip-filter.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...defaultProps,\n  dropdownList,\n  selectedItems: [],\n  loading: false,\n  dropdownSettings,\n  dropdownSettingsError,\n  dropdownSettings2,\n  dropdownSettings3,\n  logjam: (e) => {\n    console.log(e);\n  },\n  bottomScrolled: (e) => {\n    console.log('Set loading as true until the server responds with more of the list.');\n  },\n}"
        }
      ],
      "src/app/modules/panel/panel.stories.ts": [
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/panel/panel.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...defaultProps,\n  faChevronDown,\n  faChevronUp,\n  PanelIconPlacementEnum,\n  PanelTitlePlacementEnum,\n}"
        }
      ],
      "src/app/modules/paging/paging.stories.ts": [
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/paging/paging.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    list: [1, 2, 3, 4, 5, 6, 7, 8]\n}"
        }
      ],
      "src/app/modules/tabs/tabs.stories.ts": [
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/tabs/tabs.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    tabs\n}"
        },
        {
          "name": "tabs",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/tabs/tabs.stories.ts",
          "type": "[]",
          "defaultValue": "[\n    {\n        title: 'tab1',\n        ariaLabel: 'tab1 hello',\n        link: \"tab1\"\n    },\n    {\n        title: 'tab2',\n        ariaLabel: 'tab1 yellow',\n        link: \"tab2\"\n    },\n    {\n        title: 'tab3',\n        ariaLabel: 'tab3 mellow',\n        link: \"tab3gi\"\n    }\n]"
        }
      ],
      "src/app/modules/tooltip/tooltip.stories.ts": [
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/tooltip/tooltip.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...defaultProps,\n  tooltipModel,\n  tooltipModelButton,\n  tooltipModelInversed,\n  tooltipModelIcon,\n  tooltipModelIconOnly,\n}"
        },
        {
          "name": "tooltipModel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/tooltip/tooltip.stories.ts",
          "type": "TooltipModel",
          "defaultValue": "new TooltipModel({\n  id: 'tooltipLink',\n  triggerType: TooltipTriggerTypeEnum.LINK,\n  triggerContent: '<em>Tooltip</em> - hover or click me!',\n  tooltipContent: 'hey this is my content!',\n  ariaLabel: 'this is my aria label',\n  placement: TooltipPlacementEnum.RIGHT,\n})"
        },
        {
          "name": "tooltipModelButton",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/tooltip/tooltip.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...tooltipModel,\n  triggerType: TooltipTriggerTypeEnum.BUTTON,\n  triggerClass: 'ds-c-button--primary',\n}"
        },
        {
          "name": "tooltipModelIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/tooltip/tooltip.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...tooltipModel,\n  triggerType: TooltipTriggerTypeEnum.BUTTON,\n  triggerContent: 'Look at my icon!',\n  triggerClass: 'ds-c-button--primary',\n  triggerIcon: faQuestionCircle,\n}"
        },
        {
          "name": "tooltipModelIconOnly",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/tooltip/tooltip.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...tooltipModel,\n  triggerType: TooltipTriggerTypeEnum.BUTTON,\n  triggerContent: '',\n  triggerClass: 'ds-c-button--transparent ds-u-padding-x--0',\n  triggerIcon: faQuestionCircle,\n}"
        },
        {
          "name": "tooltipModelInversed",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/tooltip/tooltip.stories.ts",
          "type": "object",
          "defaultValue": "{\n  ...tooltipModel,\n  inversed: true,\n  triggerClass: 'ds-u-color--white',\n}"
        }
      ],
      "src/app/modules/table/table/table.stories.ts": [
        {
          "name": "props",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table/table/table.stories.ts",
          "type": "object",
          "defaultValue": "{\n    ...defaultProps,\n    handleEventTable: handleEventTable,\n    tableData,\n}"
        },
        {
          "name": "tableData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modules/table/table/table.stories.ts",
          "type": "object",
          "defaultValue": "{\n    'tableHeaders': [\n      {\n        'header': {\n          'value': '',\n          'prop': 'row_Header',\n          'el': 'default'\n        }\n      },\n      {\n        'header': {\n          'value': 'Facility Rate',\n          'prop': 'val1',\n          'el': 'sort'\n        }\n      },\n      {\n        'header': {\n          'value': 'Number of Patients',\n          'prop': 'val2',\n          'el': 'default'\n        }\n      },\n      {\n        'header': {\n          'value': 'State Rate',\n          'prop': 'val3',\n          'el': 'default'\n        }\n      },\n      {\n        'header': {\n          'value': 'National Rate',\n          'prop': 'val4',\n          'el': 'default'\n        }\n      },\n      {\n        'header': {\n          'value': 'Top 10%',\n          'prop': 'val5',\n          'el': 'default'\n        }\n      }\n    ],\n    'count': 27,\n    'tableRows': [\n      {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      },\n    {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }, {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }, {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }, {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }, {\n        'row_Header': {\n          'value': 'SEP-1',\n          'el': 'button',\n          'attr': 'info',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                    {\n                      'heading': 'Description'\n                    },\n                    {\n                      'paragraph': 'Severe Sepsis and Septic Shock'\n                    },\n                    {\n                      'heading': 'Supplemental Information'\n                    },\n                    {\n                      'hline': true\n                    },\n                    {\n                      'heading2': 'Volume Category Reference'\n                    },\n                    {\n                      'paragraph': 'Low: #26 min. (5)'\n                    },\n                    {\n                      'paragraph': 'Med: #43 min. (12)'\n                    },\n                    {\n                      'paragraph': 'High: #72 min. (8)'\n                    },\n                    {\n                      'heading2': 'Supplemental Information Footnotes'\n                    },\n                    {\n                      'paragraph': '( 5 ) - The number of cases/patients is too few to report a star rating.'\n                    },\n                    {\n                      'paragraph': '( 12 ) - Data submitted were based on a sample of cases/patients.'\n                    },\n                    {\n                      'paragraph': '( 8 ) - Results are based on a shorter time period than required.'\n                    }\n              ]\n          }\n        },\n        'val1': {\n          'value': '20.0000000000000000000000000000000000000000000000%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 2 ) - Data submitted were based on a sample of cases/patients.'\n                },\n                {\n                  'paragraph': '( 3 ) - Results are based on a shorter time period than required.'\n                }\n              ]\n          }\n        },\n        'val2': {\n          'value': '50',\n          'icon': faUsers,\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'appTableModal',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 15 ) - The number of cases/patients is too few to report a star rating.'\n                }\n              ]\n          }\n        },\n        'val3': {\n          'value': '22.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'instanceRef': {\n              'modal': 'AppSubmissionErrorModal',\n              'array': [\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/author[1]/assignedAuthor[1]/addr[1][\\'line 120 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'author',\n                          'line': 116,\n                          'column': 10\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedAuthor',\n                          'line': 118,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 120,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    },\n                    {\n                      'test': '@use',\n                      'id': 'a-81-7290-warning',\n                      'xpathlocation': '/ClinicalDocument/legalAuthenticator[1]/assignedEntity[1]/addr[1][\\'line 165 column 10\\']',\n                      'jsonlocation': [\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'ClinicalDocument',\n                          'line': 12,\n                          'column': 229\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'legalAuthenticator',\n                          'line': 160,\n                          'column': 22\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'assignedEntity',\n                          'line': 163,\n                          'column': 19\n                        },\n                        {\n                          'namespace': 'urn:hl7-org:v3',\n                          'element': 'addr',\n                          'line': 165,\n                          'column': 10\n                        }\n                      ],\n                      'text': 'SHOULD contain zero or one [0..1] @use, which SHALL be selected from ValueSet PostalAddressUse urn:oid:2.16.840.1.113883.1.11.10637 STATIC 2005-05-01 (CONF:81-7290).'\n                    }\n              ]\n          }\n        },\n        'val4': {\n          'value': '23.0%',\n          'el': 'button',\n          'attr': 'footnote',\n          'title': 'activate to view 23.0% supplemental information',\n          'instanceRef': {\n              'modal': 'App',\n              'array': [\n                {\n                  'heading': 'Footnote(s)'\n                },\n                {\n                  'paragraph': '( 4 ) - Data suppressed by CMS for one or more quarters.'\n                },\n                {\n                  'paragraph': '( 5 ) - Results are not available for this reporting period.'\n                }\n              ]\n          }\n        },\n        'val5': {\n          'value': '12.0%',\n          'el': 'button',\n          'attr': 'success'\n        }\n      }\n    ]\n}"
        }
      ]
    },
    "groupedFunctions": {
      "src/app/modules/table/table/table.stories.ts": [
        {
          "name": "handleEventTable",
          "file": "src/app/modules/table/table/table.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {
      "src/app/modules/choice/choice.component.ts": [
        {
          "name": "ChoiceSize",
          "childs": [
            {
              "name": "small",
              "value": "ds-c-choice--small"
            },
            {
              "name": "medium",
              "value": ""
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "src/app/modules/choice/choice.component.ts"
        }
      ],
      "src/app/modules/popover/popover.model.ts": [
        {
          "name": "mdePopoverPositionXEnum",
          "childs": [
            {
              "name": "BEFORE",
              "value": "before"
            },
            {
              "name": "AFTER",
              "value": "after"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "src/app/modules/popover/popover.model.ts"
        },
        {
          "name": "mdePopoverPositionYEnum",
          "childs": [
            {
              "name": "ABOVE",
              "value": "above"
            },
            {
              "name": "BELOW",
              "value": "below"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "src/app/modules/popover/popover.model.ts"
        }
      ],
      "src/app/modules/panel/panel.models.ts": [
        {
          "name": "PanelIconPlacementEnum",
          "childs": [
            {
              "name": "LEFT",
              "value": "left"
            },
            {
              "name": "RIGHT",
              "value": "right"
            },
            {
              "name": "INLINE",
              "value": "inline"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "src/app/modules/panel/panel.models.ts"
        },
        {
          "name": "PanelTitlePlacementEnum",
          "childs": [
            {
              "name": "TOP",
              "value": "TOP"
            },
            {
              "name": "BOTTOM",
              "value": "BOTTOM"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "src/app/modules/panel/panel.models.ts"
        }
      ],
      "src/app/modules/table2/table.models.ts": [
        {
          "name": "TableCellTypeEnum",
          "childs": [
            {
              "name": "DEFAULT",
              "value": "default"
            },
            {
              "name": "BUTTON",
              "value": "button"
            },
            {
              "name": "CHECKBOX",
              "value": "checkbox"
            },
            {
              "name": "POPOVER",
              "value": "popover"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "<hr>\n<p>Table Row Models</p>\n<hr>\n",
          "file": "src/app/modules/table2/table.models.ts"
        },
        {
          "name": "TableHeaderSortEnum",
          "childs": [
            {
              "name": "NONE",
              "value": "none"
            },
            {
              "name": "ASC",
              "value": "asc"
            },
            {
              "name": "DESC",
              "value": "desc"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "src/app/modules/table2/table.models.ts"
        },
        {
          "name": "TableHeaderTypeEnum",
          "childs": [
            {
              "name": "DEFAULT",
              "value": "default"
            },
            {
              "name": "SORT",
              "value": "sort"
            },
            {
              "name": "CHECKBOX",
              "value": "checkbox"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "<hr>\n<p>Table Header Models</p>\n<hr>\n",
          "file": "src/app/modules/table2/table.models.ts"
        }
      ],
      "src/app/modules/tooltip/tooltip.models.ts": [
        {
          "name": "TooltipPlacementEnum",
          "childs": [
            {
              "name": "AUTO",
              "value": "auto"
            },
            {
              "name": "BOTTOM",
              "value": "bottom"
            },
            {
              "name": "TOP",
              "value": "top"
            },
            {
              "name": "RIGHT",
              "value": "right"
            },
            {
              "name": "LEFT",
              "value": "left"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "src/app/modules/tooltip/tooltip.models.ts"
        },
        {
          "name": "TooltipTriggerTypeEnum",
          "childs": [
            {
              "name": "LINK",
              "value": "link"
            },
            {
              "name": "BUTTON",
              "value": "button"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "src/app/modules/tooltip/tooltip.models.ts"
        }
      ]
    },
    "groupedTypeAliases": {}
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "e2e/app.po.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AppPage",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "e2e/app/datepicker/datepicker.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/39",
        "status": "low"
      },
      {
        "filePath": "src/app/components/example-modal/example-modal.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ExampleModalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/directives/file-upload-drag-drop.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "FileUploadDragDropDirective",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/models/angular-design-system.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AngularDesignSystemModel",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/accordion/accordion.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppAccordionComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/accordion/accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/alert/alert.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/animations/animations.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Animations",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/bar-graph/bar-graph.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BarGraphComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/bar-graph/bar-graph.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "BarGraphDataModel",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/bar-graph/bar-graph.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "BarGraphModel",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/bar-graph/bar-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "barGraphData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/bar-graph/bar-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "barGraphModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/bar-graph/bar-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/button/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/calendar/calendar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CalendarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/calendar/calendar.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "CalendarModel",
        "coveragePercent": 0,
        "coverageCount": "0/18",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/calendar/calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "calendarModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/calendar/calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "calendarModelNoRange",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/calendar/calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "calendarNoBox",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/calendar/calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "calendarWithDebounce",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/calendar/calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppCardClusterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "CardClusterClusterModel",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "CardClusterModel",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterDataDisabledCards",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterDataNormal",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterDataSelectedCard",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterDataSetTotal",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterDataShowRadioButtons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterDataShowRadioButtonsAndIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterDataWithoutMain",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterDataWithoutMiniCards",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cardClusterResizeTimeout",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/card-cluster/card-cluster.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/chip-filter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppChipFilterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/48",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/chip-filter.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DROPDOWN_CONTROL_VALUE_ACCESSOR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/chip-filter.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "noop",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/chip-filter.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "IDropdownSettings",
        "coveragePercent": 0,
        "coverageCount": "0/28",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/chip-filter.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "ListItem",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/chip-filter.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "ChipFilterPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/chip-filter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/click-outside.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ClickOutsideDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/story.const.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "dropdownList",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/story.const.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "dropdownSettings",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/story.const.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "dropdownSettings2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/story.const.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "dropdownSettings3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/story.const.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "dropdownSettingsError",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/story.const.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "parameters",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/chip-filter/story.const.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "settingsProps",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/choice/choice.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppChoiceComponent",
        "coveragePercent": 0,
        "coverageCount": "0/22",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/circle-graph/circle-graph.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppCircleGraphComponent",
        "coveragePercent": 0,
        "coverageCount": "0/29",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/circle-graph/circle-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "pieData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/circle-graph/circle-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/code-snippet/code-snippet.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CodeSnippetComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/code-snippet/code-snippet.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "CodeSnippetContentItemModel",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/code-snippet/code-snippet.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "CodeSnippetModel",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/code-snippet/code-snippet.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "codeSnippetIconModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/code-snippet/code-snippet.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "codeSnippetModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/code-snippet/code-snippet.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "codeSnippetModelFile",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/code-snippet/code-snippet.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/date-picker/date-picker.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppDatepickerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/drop-down/drop-down.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppDropDownComponent",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/drop-down/drop-down.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "dropDownData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/drop-down/drop-down.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/file-upload/file-upload.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FileUploadComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/file-upload/file-upload.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "FileUploadModel",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/file-upload/file-upload.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "fileUploadModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/file-upload/file-upload.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppLineGraphComponent",
        "coveragePercent": 0,
        "coverageCount": "0/36",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "LineGraphDataModel",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "LineGraphModel",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "LineGraphSeriesModel",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "lineGraphData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "lineGraphDataMissingValues",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "lineGraphDataSingleDataPoints",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "lineGraphDataXAxisValues",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "lineGraphModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "lineGraphModelMissingValues",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "lineGraphModelSingleDataPoints",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/line-graph/line-graph.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/modal-shell/modal-generic/modal-generic.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalGenericComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/modal-shell/modal-generic/modal-generic.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "ModalGenericModel",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/modal-shell/modal-shell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppModalShellComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/modal/modal.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppModalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/modal/modal.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "modalData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/modal/modal.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/paging/paging.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppPaginationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/paging/paging.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/panel/panel.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppPanelComponent",
        "coveragePercent": 0,
        "coverageCount": "0/25",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/panel/panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/plus/plus.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppPlusComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/popover/popover.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PopoverComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/popover/popover.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "PopoverItemModel",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/popover/popover.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "PopoverModel",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/popover/popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "popoverModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/popover/popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "popoverModelButtonClass",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/popover/popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "popoverModelScrolling",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/popover/popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "popoverModelUtility",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/popover/popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/search-field/search-field.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SearchFieldComponent",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/spinner/spinner.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/star/star-rating/star-rating.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "StarRatingComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/star/star/star.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "StarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table/table-data/table-data.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppTableDataComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table/table-header/table-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppTableHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table/table-modal/table-modal.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppTableModalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table/table-row/table-row.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppTableRowComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table/table/table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppTableComponent",
        "coveragePercent": 0,
        "coverageCount": "0/36",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table/table/table.stories.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "handleEventTable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table/table/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table/table/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tableData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table-cell/table-cell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TableCellComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table-header/table-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TableHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table-info-modal/table-info-modal.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TableInfoModalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TableComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "TableCellModel",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "TableHeaderModel",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "TableHeaderRowModel",
        "coveragePercent": 20,
        "coverageCount": "1/5",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "TableModel",
        "coveragePercent": 5,
        "coverageCount": "1/19",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "TablePaginationModel",
        "coveragePercent": 16,
        "coverageCount": "1/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "TableRowModel",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "popoverModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tableModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tableModelColspan",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tableModelHighlightedRow",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tableModelLoading",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tableModelMultipleHeaderRows",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/table2/table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tableModelNoRecords",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tabs/tabs.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppTabsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tabs/tabs.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "TabModel",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tabs/tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tabs/tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tabs",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/text-field/text-field.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppTextFieldComponent",
        "coveragePercent": 0,
        "coverageCount": "0/18",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/ticket/ticket.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppTicketComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/toast/component/toast.animations.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Animations",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/toast/component/toast.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ToastComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/toast/service/toast.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ToastService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tooltip/tooltip.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tooltip/tooltip.models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "TooltipModel",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "props",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tooltipModel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tooltipModelButton",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tooltipModelIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tooltipModelIconOnly",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modules/tooltip/tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "tooltipModelInversed",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pipes/filter.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "FilterPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pipes/graph-tooltip.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "GraphToolTipPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pipes/highlightSearch.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "HighlightSearchPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pipes/sorting.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "SortingPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/services/app.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "AppService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/services/modal/modal.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ModalService",
        "coveragePercent": 8,
        "coverageCount": "1/12",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.prod.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/component-intro.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ComponentIntroComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/stories/imports.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ImportsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/stories/installation.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InstallationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/ngmodule.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NgModuleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/stories/parameter-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ParameterListComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/stories/parameter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ParameterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/stories/welcome.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "WelcomeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
